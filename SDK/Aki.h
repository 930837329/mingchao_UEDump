
/********************************************************
*                                                       *
*   Package generated using UEDumper by Spuckwaffel.    *
*                                                       *
********************************************************/

#pragma once
/// dependency: BasicType
/// dependency: AIModule
/// dependency: AkAudio
/// dependency: AnimGraphRuntime
/// dependency: ApexDestruction
/// dependency: AudioSynesthesia
/// dependency: CinematicCamera
/// dependency: CoreUObject
/// dependency: Engine
/// dependency: Foliage
/// dependency: GameplayAbilities
/// dependency: GameplayTags
/// dependency: GameplayTasks
/// dependency: InputCore
/// dependency: KawaiiPhysics
/// dependency: KuroAnim
/// dependency: KuroAudio
/// dependency: KuroComponent
/// dependency: KuroCurve
/// dependency: KuroGameplay
/// dependency: KuroGAS
/// dependency: KuroInput
/// dependency: KuroRenderingRuntimeBPPlugin
/// dependency: KuroSplines
/// dependency: KuroUtility
/// dependency: LevelSequence
/// dependency: LGUI
/// dependency: MediaAssets
/// dependency: NavigationSystem
/// dependency: Niagara
/// dependency: PhysicsCore
/// dependency: PrefabSystem
/// dependency: ProceduralMeshComponent
/// dependency: SMSystem
/// dependency: UMG

/// Enum /Game/Aki/Render/RuntimeBP/GI/NewCloud/BP/E_Cloud_Presents.E_Cloud_Presents
/// Size: 0x01 (1 bytes)
enum class E_Cloud_Presents : uint8_t
{
	E_Cloud_Presents__NewEnumerator0                                                 = 0,
	E_Cloud_Presents__NewEnumerator1                                                 = 1,
	E_Cloud_Presents__NewEnumerator2                                                 = 2,
	E_Cloud_Presents__NewEnumerator3                                                 = 3,
	E_Cloud_Presents__NewEnumerator26                                                = 4,
	E_Cloud_Presents__NewEnumerator5                                                 = 5,
	E_Cloud_Presents__NewEnumerator6                                                 = 6,
	E_Cloud_Presents__NewEnumerator7                                                 = 7,
	E_Cloud_Presents__NewEnumerator8                                                 = 8,
	E_Cloud_Presents__NewEnumerator9                                                 = 9,
	E_Cloud_Presents__NewEnumerator10                                                = 10,
	E_Cloud_Presents__NewEnumerator11                                                = 11,
	E_Cloud_Presents__NewEnumerator12                                                = 12,
	E_Cloud_Presents__NewEnumerator13                                                = 13,
	E_Cloud_Presents__NewEnumerator14                                                = 14,
	E_Cloud_Presents__NewEnumerator16                                                = 15,
	E_Cloud_Presents__NewEnumerator17                                                = 16,
	E_Cloud_Presents__NewEnumerator18                                                = 17,
	E_Cloud_Presents__NewEnumerator19                                                = 18,
	E_Cloud_Presents__NewEnumerator20                                                = 19,
	E_Cloud_Presents__NewEnumerator4                                                 = 20,
	E_Cloud_Presents__NewEnumerator21                                                = 21,
	E_Cloud_Presents__NewEnumerator22                                                = 22,
	E_Cloud_Presents__NewEnumerator23                                                = 23,
	E_Cloud_Presents__NewEnumerator27                                                = 24,
	E_Cloud_Presents__NewEnumerator25                                                = 25,
	E_Cloud_Presents__NewEnumerator29                                                = 26,
	E_Cloud_Presents__NewEnumerator28                                                = 27,
	E_Cloud_Presents__NewEnumerator30                                                = 28,
	E_Cloud_Presents__NewEnumerator15                                                = 29
};

/// Enum /Game/Aki/Render/RuntimeBP/GI/Data/TOD/PresetSelection.PresetSelection
/// Size: 0x01 (1 bytes)
enum class PresetSelection : uint8_t
{
	PresetSelection__NewEnumerator0                                                  = 0,
	PresetSelection__NewEnumerator3                                                  = 1,
	PresetSelection__NewEnumerator1                                                  = 2,
	PresetSelection__NewEnumerator2                                                  = 3,
	PresetSelection__NewEnumerator5                                                  = 4
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/Manager/ECharacterRenderingType.ECharacterRenderingType
/// Size: 0x01 (1 bytes)
enum class ECharacterRenderingType : uint8_t
{
	ECharacterRenderingType__NewEnumerator1                                          = 0,
	ECharacterRenderingType__NewEnumerator6                                          = 1,
	ECharacterRenderingType__NewEnumerator2                                          = 2,
	ECharacterRenderingType__NewEnumerator3                                          = 3,
	ECharacterRenderingType__NewEnumerator5                                          = 4,
	ECharacterRenderingType__NewEnumerator8                                          = 5,
	ECharacterRenderingType__NewEnumerator9                                          = 6,
	ECharacterRenderingType__NewEnumerator10                                         = 7,
	ECharacterRenderingType__NewEnumerator4                                          = 8
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraType.EFightCameraType
/// Size: 0x01 (1 bytes)
enum class EFightCameraType : uint8_t
{
	EFightCameraType__NewEnumerator0                                                 = 0,
	EFightCameraType__NewEnumerator1                                                 = 1,
	EFightCameraType__NewEnumerator2                                                 = 2,
	EFightCameraType__NewEnumerator3                                                 = 3
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EBaseCurveType.EBaseCurveType
/// Size: 0x01 (1 bytes)
enum class EBaseCurveType : uint8_t
{
	EBaseCurveType__NewEnumerator0                                                   = 0,
	EBaseCurveType__NewEnumerator4                                                   = 1,
	EBaseCurveType__NewEnumerator5                                                   = 2,
	EBaseCurveType__NewEnumerator3                                                   = 3,
	EBaseCurveType__NewEnumerator6                                                   = 4,
	EBaseCurveType__NewEnumerator1                                                   = 5,
	EBaseCurveType__NewEnumerator2                                                   = 6,
	EBaseCurveType__NewEnumerator7                                                   = 7,
	EBaseCurveType__NewEnumerator8                                                   = 8,
	EBaseCurveType__NewEnumerator9                                                   = 9,
	EBaseCurveType__NewEnumerator10                                                  = 10,
	EBaseCurveType__NewEnumerator11                                                  = 11
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/Manager/ECharacterDitherType.ECharacterDitherType
/// Size: 0x01 (1 bytes)
enum class ECharacterDitherType : uint8_t
{
	ECharacterDitherType__NewEnumerator0                                             = 0,
	ECharacterDitherType__NewEnumerator1                                             = 1,
	ECharacterDitherType__NewEnumerator2                                             = 2,
	ECharacterDitherType__NewEnumerator3                                             = 3
};

/// Enum /Game/Aki/Character/Input/Enum/ECommandType.ECommandType
/// Size: 0x01 (1 bytes)
enum class ECommandType : uint8_t
{
	ECommandType__NewEnumerator0                                                     = 0,
	ECommandType__NewEnumerator1                                                     = 1,
	ECommandType__NewEnumerator2                                                     = 2,
	ECommandType__NewEnumerator3                                                     = 3,
	ECommandType__NewEnumerator4                                                     = 4,
	ECommandType__NewEnumerator5                                                     = 5,
	ECommandType__NewEnumerator6                                                     = 6,
	ECommandType__NewEnumerator7                                                     = 7,
	ECommandType__NewEnumerator9                                                     = 8,
	ECommandType__NewEnumerator8                                                     = 9
};

/// Enum /Game/Aki/Data/LevelGamePlay/StrikeResponse/Stuct/SrikeElement.SrikeElement
/// Size: 0x01 (1 bytes)
enum class SrikeElement : uint8_t
{
	SrikeElement__NewEnumerator0                                                     = 0,
	SrikeElement__NewEnumerator1                                                     = 1,
	SrikeElement__NewEnumerator2                                                     = 2,
	SrikeElement__NewEnumerator3                                                     = 3,
	SrikeElement__NewEnumerator4                                                     = 4,
	SrikeElement__NewEnumerator5                                                     = 5,
	SrikeElement__NewEnumerator6                                                     = 6,
	SrikeElement__NewEnumerator7                                                     = 7,
	SrikeElement__NewEnumerator8                                                     = 8
};

/// Enum /Game/Aki/Data/Entity/Enum/EHeadStateViewType.EHeadStateViewType
/// Size: 0x01 (1 bytes)
enum class EHeadStateViewType : uint8_t
{
	EHeadStateViewType__NewEnumerator0                                               = 0,
	EHeadStateViewType__NewEnumerator1                                               = 1,
	EHeadStateViewType__NewEnumerator2                                               = 2,
	EHeadStateViewType__NewEnumerator3                                               = 3,
	EHeadStateViewType__NewEnumerator4                                               = 4,
	EHeadStateViewType__NewEnumerator5                                               = 5,
	EHeadStateViewType__NewEnumerator6                                               = 6,
	EHeadStateViewType__NewEnumerator7                                               = 7,
	EHeadStateViewType__NewEnumerator8                                               = 8
};

/// Enum /Game/Aki/Data/Entity/Enum/EBossStateViewType.EBossStateViewType
/// Size: 0x01 (1 bytes)
enum class EBossStateViewType : uint8_t
{
	EBossStateViewType__NewEnumerator0                                               = 0,
	EBossStateViewType__NewEnumerator1                                               = 1
};

/// Enum /Game/Aki/Render/RuntimeBP/Battle/EWuYinQuState.EWuYinQuState
/// Size: 0x01 (1 bytes)
enum class EWuYinQuState : uint8_t
{
	EWuYinQuState__NewEnumerator0                                                    = 0,
	EWuYinQuState__NewEnumerator1                                                    = 1,
	EWuYinQuState__NewEnumerator2                                                    = 2,
	EWuYinQuState__NewEnumerator3                                                    = 3,
	EWuYinQuState__NewEnumerator4                                                    = 4
};

/// Enum /Game/Aki/Data/Interaction/Enum/EinteractionIconType.EInteractionIconType
/// Size: 0x01 (1 bytes)
enum class EInteractionIconType : uint8_t
{
	EInteractionIconType__NewEnumerator0                                             = 0,
	EInteractionIconType__NewEnumerator1                                             = 1,
	EInteractionIconType__NewEnumerator2                                             = 2
};

/// Enum /Game/Aki/Data/Interaction/Enum/EInteractionType.EInteractionType
/// Size: 0x01 (1 bytes)
enum class EInteractionType : uint8_t
{
	EInteractionType__NewEnumerator0                                                 = 0,
	EInteractionType__NewEnumerator1                                                 = 1
};

/// Enum /Game/Aki/Data/Entity/Enum/EBodyType.EBodyType
/// Size: 0x01 (1 bytes)
enum class EBodyType : uint8_t
{
	EBodyType__NewEnumerator0                                                        = 0,
	EBodyType__NewEnumerator1                                                        = 1,
	EBodyType__NewEnumerator2                                                        = 2,
	EBodyType__NewEnumerator3                                                        = 3,
	EBodyType__NewEnumerator4                                                        = 4,
	EBodyType__NewEnumerator5                                                        = 5,
	EBodyType__NewEnumerator6                                                        = 6
};

/// Enum /Game/Aki/Character/BaseCharacter/EClimbState.EClimbState
/// Size: 0x01 (1 bytes)
enum class EClimbState : uint8_t
{
	EClimbState__NewEnumerator0                                                      = 0,
	EClimbState__NewEnumerator1                                                      = 1,
	EClimbState__NewEnumerator2                                                      = 2,
	EClimbState__NewEnumerator3                                                      = 3,
	EClimbState__NewEnumerator4                                                      = 4
};

/// Enum /Game/Aki/GamePlay/Cipher/ECipherGameplayType.ECipherGameplayType
/// Size: 0x01 (1 bytes)
enum class ECipherGameplayType : uint8_t
{
	ECipherGameplayType__NewEnumerator0                                              = 0,
	ECipherGameplayType__NewEnumerator1                                              = 1,
	ECipherGameplayType__NewEnumerator2                                              = 2
};

/// Enum /Game/Aki/Data/Quest/Enum/EQuestHandleType.EQuestHandleType
/// Size: 0x01 (1 bytes)
enum class EQuestHandleType : uint8_t
{
	EQuestHandleType__NewEnumerator0                                                 = 0,
	EQuestHandleType__NewEnumerator1                                                 = 1
};

/// Enum /Game/Aki/Sequence/Manager/ESeqSwtichType.ESeqSwtichType
/// Size: 0x01 (1 bytes)
enum class ESeqSwtichType : uint8_t
{
	ESeqSwtichType__NewEnumerator0                                                   = 0,
	ESeqSwtichType__NewEnumerator1                                                   = 1,
	ESeqSwtichType__NewEnumerator2                                                   = 2
};

/// Enum /Game/Aki/Character/BaseCharacter/ECustomCameraMode.ECustomCameraMode
/// Size: 0x01 (1 bytes)
enum class ECustomCameraMode : uint8_t
{
	ECustomCameraMode__NewEnumerator2                                                = 0,
	ECustomCameraMode__NewEnumerator3                                                = 1,
	ECustomCameraMode__NewEnumerator4                                                = 2,
	ECustomCameraMode__NewEnumerator5                                                = 3,
	ECustomCameraMode__NewEnumerator6                                                = 4
};

/// Enum /Game/Aki/Character/Input/Enum/EInputState.EInputState
/// Size: 0x01 (1 bytes)
enum class EInputState : uint8_t
{
	EInputState__NewEnumerator0                                                      = 0,
	EInputState__NewEnumerator1                                                      = 1,
	EInputState__NewEnumerator2                                                      = 2,
	EInputState__NewEnumerator3                                                      = 3
};

/// Enum /Game/Aki/Character/Input/Enum/EInputAction.EInputAction
/// Size: 0x01 (1 bytes)
enum class EInputAction : uint8_t
{
	EInputAction__NewEnumerator0                                                     = 0,
	EInputAction__NewEnumerator3                                                     = 1,
	EInputAction__NewEnumerator4                                                     = 2,
	EInputAction__NewEnumerator5                                                     = 3,
	EInputAction__NewEnumerator1                                                     = 4,
	EInputAction__NewEnumerator2                                                     = 5,
	EInputAction__NewEnumerator6                                                     = 6,
	EInputAction__NewEnumerator7                                                     = 7,
	EInputAction__NewEnumerator8                                                     = 8,
	EInputAction__NewEnumerator9                                                     = 9,
	EInputAction__NewEnumerator10                                                    = 10,
	EInputAction__NewEnumerator11                                                    = 11,
	EInputAction__NewEnumerator12                                                    = 12,
	EInputAction__NewEnumerator27                                                    = 13,
	EInputAction__NewEnumerator28                                                    = 14,
	EInputAction__NewEnumerator39                                                    = 15
};

/// Enum /Game/Aki/Core/Fight/EBulletObject.EBulletObject
/// Size: 0x01 (1 bytes)
enum class EBulletObject : uint8_t
{
	EBulletObject__NewEnumerator0                                                    = 0,
	EBulletObject__NewEnumerator1                                                    = 1,
	EBulletObject__NewEnumerator2                                                    = 2,
	EBulletObject__NewEnumerator3                                                    = 3
};

/// Enum /Game/Aki/Core/Fight/EBulletHitEffect.EBulletHitEffect
/// Size: 0x01 (1 bytes)
enum class EBulletHitEffect : uint8_t
{
	EBulletHitEffect__NewEnumerator0                                                 = 0,
	EBulletHitEffect__NewEnumerator1                                                 = 1,
	EBulletHitEffect__NewEnumerator2                                                 = 2,
	EBulletHitEffect__NewEnumerator3                                                 = 3,
	EBulletHitEffect__NewEnumerator4                                                 = 4,
	EBulletHitEffect__NewEnumerator5                                                 = 5,
	EBulletHitEffect__NewEnumerator6                                                 = 6,
	EBulletHitEffect__NewEnumerator7                                                 = 7,
	EBulletHitEffect__NewEnumerator8                                                 = 8,
	EBulletHitEffect__NewEnumerator9                                                 = 9
};

/// Enum /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/EBulletLogicStage.EBulletLogicStage
/// Size: 0x01 (1 bytes)
enum class EBulletLogicStage : uint8_t
{
	EBulletLogicStage__NewEnumerator5                                                = 0,
	EBulletLogicStage__NewEnumerator1                                                = 1,
	EBulletLogicStage__NewEnumerator2                                                = 2,
	EBulletLogicStage__NewEnumerator3                                                = 3,
	EBulletLogicStage__NewEnumerator4                                                = 4,
	EBulletLogicStage__NewEnumerator6                                                = 5
};

/// Enum /Game/Aki/Character/BaseCharacter/EBulletFollowType.EBulletFollowType
/// Size: 0x01 (1 bytes)
enum class EBulletFollowType : uint8_t
{
	EBulletFollowType__NewEnumerator0                                                = 0,
	EBulletFollowType__NewEnumerator1                                                = 1,
	EBulletFollowType__NewEnumerator2                                                = 2,
	EBulletFollowType__NewEnumerator3                                                = 3
};

/// Enum /Game/Aki/Core/Fight/EBulletTarget.EBulletTarget
/// Size: 0x01 (1 bytes)
enum class EBulletTarget : uint8_t
{
	EBulletTarget__NewEnumerator0                                                    = 0,
	EBulletTarget__NewEnumerator1                                                    = 1,
	EBulletTarget__NewEnumerator2                                                    = 2,
	EBulletTarget__NewEnumerator3                                                    = 3,
	EBulletTarget__NewEnumerator5                                                    = 4,
	EBulletTarget__NewEnumerator4                                                    = 5,
	EBulletTarget__NewEnumerator6                                                    = 6,
	EBulletTarget__NewEnumerator7                                                    = 7,
	EBulletTarget__NewEnumerator8                                                    = 8,
	EBulletTarget__NewEnumerator9                                                    = 9,
	EBulletTarget__NewEnumerator10                                                   = 10
};

/// Enum /Game/Aki/Character/BaseCharacter/EBulletRelativeDir.EBulletRelativeDir
/// Size: 0x01 (1 bytes)
enum class EBulletRelativeDir : uint8_t
{
	EBulletRelativeDir__NewEnumerator0                                               = 0,
	EBulletRelativeDir__NewEnumerator1                                               = 1,
	EBulletRelativeDir__NewEnumerator2                                               = 2,
	EBulletRelativeDir__NewEnumerator3                                               = 3,
	EBulletRelativeDir__NewEnumerator4                                               = 4
};

/// Enum /Game/Aki/Core/Fight/EInitialVelocityDirection.EInitialVelocityDirection
/// Size: 0x01 (1 bytes)
enum class EInitialVelocityDirection : uint8_t
{
	EInitialVelocityDirection__NewEnumerator0                                        = 0,
	EInitialVelocityDirection__NewEnumerator1                                        = 1,
	EInitialVelocityDirection__NewEnumerator2                                        = 2,
	EInitialVelocityDirection__NewEnumerator3                                        = 3,
	EInitialVelocityDirection__NewEnumerator4                                        = 4,
	EInitialVelocityDirection__NewEnumerator5                                        = 5,
	EInitialVelocityDirection__NewEnumerator7                                        = 6,
	EInitialVelocityDirection__NewEnumerator8                                        = 7,
	EInitialVelocityDirection__NewEnumerator9                                        = 8,
	EInitialVelocityDirection__NewEnumerator10                                       = 9,
	EInitialVelocityDirection__NewEnumerator11                                       = 10,
	EInitialVelocityDirection__NewEnumerator12                                       = 11
};

/// Enum /Game/Aki/Character/BaseCharacter/EBulletHitDirectionType.EBulletHitDirectionType
/// Size: 0x01 (1 bytes)
enum class EBulletHitDirectionType : uint8_t
{
	EBulletHitDirectionType__NewEnumerator0                                          = 0,
	EBulletHitDirectionType__NewEnumerator1                                          = 1
};

/// Enum /Game/Aki/Character/BaseCharacter/EBulletShape.EBulletShape
/// Size: 0x01 (1 bytes)
enum class EBulletShape : uint8_t
{
	EBulletShape__NewEnumerator0                                                     = 0,
	EBulletShape__NewEnumerator1                                                     = 1,
	EBulletShape__NewEnumerator2                                                     = 2,
	EBulletShape__NewEnumerator3                                                     = 3,
	EBulletShape__NewEnumerator5                                                     = 4,
	EBulletShape__NewEnumerator4                                                     = 5,
	EBulletShape__NewEnumerator6                                                     = 6,
	EBulletShape__NewEnumerator7                                                     = 7,
	EBulletShape__NewEnumerator8                                                     = 8,
	EBulletShape__NewEnumerator9                                                     = 9
};

/// Enum /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/EBulletLogicObstacles.EBulletLogicObstacles
/// Size: 0x01 (1 bytes)
enum class EBulletLogicObstacles : uint8_t
{
	EBulletLogicObstacles__NewEnumerator0                                            = 0,
	EBulletLogicObstacles__NewEnumerator1                                            = 1,
	EBulletLogicObstacles__NewEnumerator2                                            = 2
};

/// Enum /Game/Aki/Core/Fight/EBulletSyncType.EBulletSyncType
/// Size: 0x01 (1 bytes)
enum class EBulletSyncType : uint8_t
{
	EBulletSyncType__NewEnumerator0                                                  = 0,
	EBulletSyncType__NewEnumerator1                                                  = 1
};

/// Enum /Game/Aki/Character/BaseCharacter/EAimViewState.EAimViewState
/// Size: 0x01 (1 bytes)
enum class EAimViewState : uint8_t
{
	EAimViewState__NewEnumerator0                                                    = 0,
	EAimViewState__NewEnumerator1                                                    = 1
};

/// Enum /Game/Aki/Data/UiCameraAnimation/Enum/EUiCameraAnimationTargetType.EUiCameraAnimationTargetType
/// Size: 0x01 (1 bytes)
enum class EUiCameraAnimationTargetType : uint8_t
{
	EUiCameraAnimationTargetType__NewEnumerator0                                     = 0,
	EUiCameraAnimationTargetType__NewEnumerator1                                     = 1,
	EUiCameraAnimationTargetType__NewEnumerator2                                     = 2,
	EUiCameraAnimationTargetType__NewEnumerator4                                     = 3,
	EUiCameraAnimationTargetType__NewEnumerator5                                     = 4,
	EUiCameraAnimationTargetType__NewEnumerator6                                     = 5
};

/// Enum /Game/Aki/Data/UiCameraAnimation/Enum/EUiCameraAnimationRotationType.EUiCameraAnimationRotationType
/// Size: 0x01 (1 bytes)
enum class EUiCameraAnimationRotationType : uint8_t
{
	EUiCameraAnimationRotationType__NewEnumerator0                                   = 0,
	EUiCameraAnimationRotationType__NewEnumerator1                                   = 1,
	EUiCameraAnimationRotationType__NewEnumerator2                                   = 2,
	EUiCameraAnimationRotationType__NewEnumerator4                                   = 3
};

/// Enum /Game/Aki/Character/BaseCharacter/EEnterClimb.EEnterClimb
/// Size: 0x01 (1 bytes)
enum class EEnterClimb : uint8_t
{
	EEnterClimb__NewEnumerator0                                                      = 0,
	EEnterClimb__NewEnumerator1                                                      = 1,
	EEnterClimb__NewEnumerator2                                                      = 2,
	EEnterClimb__NewEnumerator3                                                      = 3,
	EEnterClimb__NewEnumerator5                                                      = 4
};

/// Enum /Game/Aki/Character/BaseCharacter/ECharViewDirectionState.ECharViewDirectionState
/// Size: 0x01 (1 bytes)
enum class ECharViewDirectionState : uint8_t
{
	ECharViewDirectionState__NewEnumerator0                                          = 0,
	ECharViewDirectionState__NewEnumerator1                                          = 1,
	ECharViewDirectionState__NewEnumerator2                                          = 2
};

/// Enum /Game/Aki/Character/BaseCharacter/ECharParentMoveState.ECharParentMoveState
/// Size: 0x01 (1 bytes)
enum class ECharParentMoveState : uint8_t
{
	ECharParentMoveState__NewEnumerator0                                             = 0,
	ECharParentMoveState__NewEnumerator1                                             = 1,
	ECharParentMoveState__NewEnumerator2                                             = 2,
	ECharParentMoveState__NewEnumerator3                                             = 3
};

/// Enum /Game/Aki/Core/Fight/EMoveTrajectory.EMoveTrajectory
/// Size: 0x01 (1 bytes)
enum class EMoveTrajectory : uint8_t
{
	EMoveTrajectory__NewEnumerator0                                                  = 0,
	EMoveTrajectory__NewEnumerator1                                                  = 1,
	EMoveTrajectory__NewEnumerator2                                                  = 2,
	EMoveTrajectory__NewEnumerator3                                                  = 3,
	EMoveTrajectory__NewEnumerator4                                                  = 4,
	EMoveTrajectory__NewEnumerator5                                                  = 5,
	EMoveTrajectory__NewEnumerator6                                                  = 6
};

/// Enum /Game/Aki/Character/BaseCharacter/ECharState.ECharState
/// Size: 0x01 (1 bytes)
enum class ECharState : uint8_t
{
	ECharState__NewEnumerator5                                                       = 0,
	ECharState__NewEnumerator0                                                       = 1,
	ECharState__NewEnumerator1                                                       = 2,
	ECharState__NewEnumerator32                                                      = 3,
	ECharState__NewEnumerator2                                                       = 4,
	ECharState__NewEnumerator33                                                      = 5,
	ECharState__NewEnumerator3                                                       = 6,
	ECharState__NewEnumerator34                                                      = 7,
	ECharState__NewEnumerator7                                                       = 8,
	ECharState__NewEnumerator28                                                      = 9,
	ECharState__NewEnumerator35                                                      = 10,
	ECharState__NewEnumerator27                                                      = 11,
	ECharState__NewEnumerator29                                                      = 12,
	ECharState__NewEnumerator30                                                      = 13,
	ECharState__NewEnumerator14                                                      = 14,
	ECharState__NewEnumerator15                                                      = 15,
	ECharState__NewEnumerator18                                                      = 16,
	ECharState__NewEnumerator31                                                      = 17,
	ECharState__NewEnumerator20                                                      = 18,
	ECharState__NewEnumerator21                                                      = 19,
	ECharState__NewEnumerator36                                                      = 20,
	ECharState__NewEnumerator37                                                      = 21
};

/// Enum /Game/Aki/Character/BaseCharacter/ECaughtType.ECaughtType
/// Size: 0x01 (1 bytes)
enum class ECaughtType : uint8_t
{
	ECaughtType__NewEnumerator0                                                      = 0,
	ECaughtType__NewEnumerator1                                                      = 1
};

/// Enum /Game/Aki/Character/BaseCharacter/EHitAnim.EHitAnim
/// Size: 0x01 (1 bytes)
enum class EHitAnim : uint8_t
{
	EHitAnim__NewEnumerator0                                                         = 0,
	EHitAnim__NewEnumerator1                                                         = 1,
	EHitAnim__NewEnumerator2                                                         = 2,
	EHitAnim__NewEnumerator3                                                         = 3,
	EHitAnim__NewEnumerator4                                                         = 4,
	EHitAnim__NewEnumerator5                                                         = 5,
	EHitAnim__NewEnumerator6                                                         = 6,
	EHitAnim__NewEnumerator7                                                         = 7,
	EHitAnim__NewEnumerator8                                                         = 8,
	EHitAnim__NewEnumerator9                                                         = 9,
	EHitAnim__NewEnumerator10                                                        = 10,
	EHitAnim__NewEnumerator11                                                        = 11
};

/// Enum /Game/Aki/Data/UiCameraAnimation/Enum/EUiCameraAnimationLocationType.EUiCameraAnimationLocationType
/// Size: 0x01 (1 bytes)
enum class EUiCameraAnimationLocationType : uint8_t
{
	EUiCameraAnimationLocationType__NewEnumerator0                                   = 0,
	EUiCameraAnimationLocationType__NewEnumerator1                                   = 1,
	EUiCameraAnimationLocationType__NewEnumerator2                                   = 2
};

/// Enum /Game/Aki/GamePlay/EGameplayFunctionType.EGameplayFunctionType
/// Size: 0x01 (1 bytes)
enum class EGameplayFunctionType : uint8_t
{
	EGameplayFunctionType__NewEnumerator0                                            = 0,
	EGameplayFunctionType__NewEnumerator1                                            = 1,
	EGameplayFunctionType__NewEnumerator2                                            = 2,
	EGameplayFunctionType__NewEnumerator3                                            = 3,
	EGameplayFunctionType__NewEnumerator4                                            = 4,
	EGameplayFunctionType__NewEnumerator5                                            = 5,
	EGameplayFunctionType__NewEnumerator6                                            = 6,
	EGameplayFunctionType__NewEnumerator7                                            = 7,
	EGameplayFunctionType__NewEnumerator8                                            = 8,
	EGameplayFunctionType__NewEnumerator9                                            = 9,
	EGameplayFunctionType__NewEnumerator10                                           = 10,
	EGameplayFunctionType__NewEnumerator11                                           = 11,
	EGameplayFunctionType__NewEnumerator13                                           = 12,
	EGameplayFunctionType__NewEnumerator14                                           = 13
};

/// Enum /Game/Aki/GamePlay/TriggerItems/ETriggerType.ETriggerType
/// Size: 0x01 (1 bytes)
enum class ETriggerType : uint8_t
{
	ETriggerType__NewEnumerator0                                                     = 0,
	ETriggerType__NewEnumerator1                                                     = 1,
	ETriggerType__NewEnumerator2                                                     = 2,
	ETriggerType__NewEnumerator3                                                     = 3,
	ETriggerType__NewEnumerator4                                                     = 4,
	ETriggerType__NewEnumerator6                                                     = 5,
	ETriggerType__NewEnumerator7                                                     = 6
};

/// Enum /Game/Aki/Character/BaseCharacter/ECaughtResultType.ECaughtResultType
/// Size: 0x01 (1 bytes)
enum class ECaughtResultType : uint8_t
{
	ECaughtResultType__NewEnumerator0                                                = 0,
	ECaughtResultType__NewEnumerator1                                                = 1,
	ECaughtResultType__NewEnumerator2                                                = 2
};

/// Enum /Game/Aki/Character/BaseCharacter/EBulletType.EBulletType
/// Size: 0x01 (1 bytes)
enum class EBulletType : uint8_t
{
	EBulletType__NewEnumerator0                                                      = 0,
	EBulletType__NewEnumerator1                                                      = 1,
	EBulletType__NewEnumerator2                                                      = 2,
	EBulletType__NewEnumerator3                                                      = 3,
	EBulletType__NewEnumerator4                                                      = 4
};

/// Enum /Game/Aki/Character/BaseCharacter/ERelation.ERelation
/// Size: 0x01 (1 bytes)
enum class ERelation : uint8_t
{
	ERelation__NewEnumerator2                                                        = 0,
	ERelation__NewEnumerator0                                                        = 1,
	ERelation__NewEnumerator1                                                        = 2
};

/// Enum /Game/Aki/Protocol/EAttributeType.EAttributeType
/// Size: 0x01 (1 bytes)
enum class EAttributeType : uint8_t
{
	EAttributeType__EAttributeType_None                                              = 0,
	EAttributeType__Lv                                                               = 1,
	EAttributeType__LifeMax                                                          = 2,
	EAttributeType__Life                                                             = 3,
	EAttributeType__Sheild                                                           = 4,
	EAttributeType__SheildDamageChange                                               = 5,
	EAttributeType__SheildDamageReduce                                               = 6,
	EAttributeType__Atk                                                              = 7,
	EAttributeType__Crit                                                             = 8,
	EAttributeType__CritDamage                                                       = 9,
	EAttributeType__Def                                                              = 10,
	EAttributeType__EnergyEfficiency                                                 = 11,
	EAttributeType__CDReduse                                                         = 12,
	EAttributeType__ReactionEfficiency                                               = 13,
	EAttributeType__AttackSpeed                                                      = 14,
	EAttributeType__DamageChange                                                     = 15,
	EAttributeType__DamageReduce                                                     = 16,
	EAttributeType__DamageChangeAuto                                                 = 17,
	EAttributeType__DamageChangeCast                                                 = 18,
	EAttributeType__DamageChangeUltra                                                = 19,
	EAttributeType__DamageChangeQTE                                                  = 20,
	EAttributeType__DamageChangePhys                                                 = 21,
	EAttributeType__DamageChangeElement1                                             = 22,
	EAttributeType__DamageChangeElement2                                             = 23,
	EAttributeType__DamageChangeElement3                                             = 24,
	EAttributeType__DamageChangeElement4                                             = 25,
	EAttributeType__DamageChangeElement5                                             = 26,
	EAttributeType__DamageChangeElement6                                             = 27,
	EAttributeType__DamageResistancePhys                                             = 28,
	EAttributeType__DamageResistanceElement1                                         = 29,
	EAttributeType__DamageResistanceElement2                                         = 30,
	EAttributeType__DamageResistanceElement3                                         = 31,
	EAttributeType__DamageResistanceElement4                                         = 32,
	EAttributeType__DamageResistanceElement5                                         = 33,
	EAttributeType__DamageResistanceElement6                                         = 34,
	EAttributeType__HealChange                                                       = 35,
	EAttributeType__HealedChange                                                     = 36,
	EAttributeType__DamageReducePhys                                                 = 37,
	EAttributeType__DamageReduceElement1                                             = 38,
	EAttributeType__DamageReduceElement2                                             = 39,
	EAttributeType__DamageReduceElement3                                             = 40,
	EAttributeType__DamageReduceElement4                                             = 41,
	EAttributeType__DamageReduceElement5                                             = 42,
	EAttributeType__DamageReduceElement6                                             = 43,
	EAttributeType__ReactionChange1                                                  = 44,
	EAttributeType__ReactionChange2                                                  = 45,
	EAttributeType__ReactionChange3                                                  = 46,
	EAttributeType__ReactionChange4                                                  = 47,
	EAttributeType__ReactionChange5                                                  = 48,
	EAttributeType__ReactionChange6                                                  = 49,
	EAttributeType__ReactionChange7                                                  = 50,
	EAttributeType__ReactionChange8                                                  = 51,
	EAttributeType__ReactionChange9                                                  = 52,
	EAttributeType__ReactionChange10                                                 = 53,
	EAttributeType__ReactionChange11                                                 = 54,
	EAttributeType__ReactionChange12                                                 = 55,
	EAttributeType__ReactionChange13                                                 = 56,
	EAttributeType__ReactionChange14                                                 = 57,
	EAttributeType__ReactionChange15                                                 = 58,
	EAttributeType__EnergyMax                                                        = 59,
	EAttributeType__Energy                                                           = 60,
	EAttributeType__SpecialEnergy1Max                                                = 61,
	EAttributeType__SpecialEnergy1                                                   = 62,
	EAttributeType__SpecialEnergy2Max                                                = 63,
	EAttributeType__SpecialEnergy2                                                   = 64,
	EAttributeType__SpecialEnergy3Max                                                = 65,
	EAttributeType__SpecialEnergy3                                                   = 66,
	EAttributeType__SpecialEnergy4Max                                                = 67,
	EAttributeType__SpecialEnergy4                                                   = 68,
	EAttributeType__StrengthMax                                                      = 69,
	EAttributeType__Strength                                                         = 70,
	EAttributeType__StrengthRecover                                                  = 71,
	EAttributeType__StrengthPunishTime                                               = 72,
	EAttributeType__StrengthRun                                                      = 73,
	EAttributeType__StrengthSwim                                                     = 74,
	EAttributeType__StrengthFastSwim                                                 = 75,
	EAttributeType__StrengthClimb                                                    = 76,
	EAttributeType__StrengthFastClimb                                                = 77,
	EAttributeType__HardnessMax                                                      = 78,
	EAttributeType__Hardness                                                         = 79,
	EAttributeType__HardnessRecover                                                  = 80,
	EAttributeType__HardnessPunishTime                                               = 81,
	EAttributeType__HardnessChange                                                   = 82,
	EAttributeType__HardnessReduce                                                   = 83,
	EAttributeType__ToughMax                                                         = 84,
	EAttributeType__Tough                                                            = 85,
	EAttributeType__ToughRecover                                                     = 86,
	EAttributeType__ToughChange                                                      = 87,
	EAttributeType__ToughReduce                                                      = 88,
	EAttributeType__ElementPower1                                                    = 89,
	EAttributeType__ElementPower2                                                    = 90,
	EAttributeType__ElementPower3                                                    = 91,
	EAttributeType__ElementPower4                                                    = 92,
	EAttributeType__ElementPower5                                                    = 93,
	EAttributeType__ElementPower6                                                    = 94,
	EAttributeType__SpecialDamageChange                                              = 95,
	EAttributeType__StrengthFastClimbCost                                            = 96,
	EAttributeType__ElementPropertyType                                              = 97,
	EAttributeType__WeakTime                                                         = 98,
	EAttributeType__IgnoreDefRate                                                    = 99,
	EAttributeType__IgnoreDamageResistancePhys                                       = 100,
	EAttributeType__IgnoreDamageResistanceElement1                                   = 101,
	EAttributeType__IgnoreDamageResistanceElement2                                   = 102,
	EAttributeType__IgnoreDamageResistanceElement3                                   = 103,
	EAttributeType__IgnoreDamageResistanceElement4                                   = 104,
	EAttributeType__IgnoreDamageResistanceElement5                                   = 105,
	EAttributeType__IgnoreDamageResistanceElement6                                   = 106,
	EAttributeType__NewEnumerator0                                                   = 107,
	EAttributeType__NewEnumerator1                                                   = 108,
	EAttributeType__NewEnumerator2                                                   = 109,
	EAttributeType__NewEnumerator3                                                   = 110,
	EAttributeType__NewEnumerator4                                                   = 111,
	EAttributeType__NewEnumerator5                                                   = 112,
	EAttributeType__NewEnumerator6                                                   = 113,
	EAttributeType__NewEnumerator7                                                   = 114,
	EAttributeType__NewEnumerator8                                                   = 115,
	EAttributeType__NewEnumerator9                                                   = 116,
	EAttributeType__NewEnumerator13                                                  = 117,
	EAttributeType__NewEnumerator12                                                  = 118,
	EAttributeType__NewEnumerator14                                                  = 119,
	EAttributeType__NewEnumerator15                                                  = 120,
	EAttributeType__NewEnumerator16                                                  = 121,
	EAttributeType__NewEnumerator17                                                  = 122,
	EAttributeType__NewEnumerator18                                                  = 123,
	EAttributeType__NewEnumerator19                                                  = 124,
	EAttributeType__NewEnumerator20                                                  = 125,
	EAttributeType__NewEnumerator21                                                  = 126,
	EAttributeType__NewEnumerator10                                                  = 127,
	EAttributeType__NewEnumerator11                                                  = 128,
	EAttributeType__NewEnumerator22                                                  = 129,
	EAttributeType__NewEnumerator23                                                  = 130,
	EAttributeType__NewEnumerator24                                                  = 131,
	EAttributeType__NewEnumerator25                                                  = 132,
	EAttributeType__NewEnumerator26                                                  = 133,
	EAttributeType__NewEnumerator27                                                  = 134,
	EAttributeType__NewEnumerator28                                                  = 135,
	EAttributeType__NewEnumerator29                                                  = 136
};

/// Enum /Game/Aki/Character/BaseCharacter/ECamp.ECamp
/// Size: 0x01 (1 bytes)
enum class ECamp : uint8_t
{
	ECamp__NewEnumerator0                                                            = 0,
	ECamp__NewEnumerator1                                                            = 1,
	ECamp__NewEnumerator2                                                            = 2,
	ECamp__NewEnumerator3                                                            = 3,
	ECamp__NewEnumerator4                                                            = 4,
	ECamp__NewEnumerator5                                                            = 5,
	ECamp__NewEnumerator6                                                            = 6,
	ECamp__NewEnumerator7                                                            = 7,
	ECamp__NewEnumerator8                                                            = 8,
	ECamp__NewEnumerator9                                                            = 9,
	ECamp__NewEnumerator10                                                           = 10,
	ECamp__NewEnumerator11                                                           = 11,
	ECamp__NewEnumerator12                                                           = 12,
	ECamp__NewEnumerator13                                                           = 13,
	ECamp__NewEnumerator14                                                           = 14
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/MaterialController/ECharacterControllerType.ECharacterControllerType
/// Size: 0x01 (1 bytes)
enum class ECharacterControllerType : uint8_t
{
	ECharacterControllerType__NewEnumerator0                                         = 0,
	ECharacterControllerType__NewEnumerator1                                         = 1,
	ECharacterControllerType__NewEnumerator2                                         = 2
};

/// Enum /Game/Aki/Data/Common/Enum/EWeatherState.EWeatherState
/// Size: 0x01 (1 bytes)
enum class EWeatherState : uint8_t
{
	EWeatherState__NewEnumerator0                                                    = 0,
	EWeatherState__NewEnumerator1                                                    = 1,
	EWeatherState__NewEnumerator2                                                    = 2
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/MaterialContainer/ECharacterBodySpecifiedType.ECharacterBodySpecifiedType
/// Size: 0x01 (1 bytes)
enum class ECharacterBodySpecifiedType : uint8_t
{
	ECharacterBodySpecifiedType__NewEnumerator0                                      = 0,
	ECharacterBodySpecifiedType__NewEnumerator1                                      = 1,
	ECharacterBodySpecifiedType__NewEnumerator2                                      = 2,
	ECharacterBodySpecifiedType__NewEnumerator3                                      = 3,
	ECharacterBodySpecifiedType__NewEnumerator5                                      = 4,
	ECharacterBodySpecifiedType__NewEnumerator6                                      = 5
};

/// Enum /Game/Aki/Data/Quest/Enum/EQuestStepState.EQuestStepState
/// Size: 0x01 (1 bytes)
enum class EQuestStepState : uint8_t
{
	EQuestStepState__NewEnumerator0                                                  = 0,
	EQuestStepState__NewEnumerator1                                                  = 1,
	EQuestStepState__NewEnumerator2                                                  = 2,
	EQuestStepState__NewEnumerator3                                                  = 3,
	EQuestStepState__NewEnumerator4                                                  = 4
};

/// Enum /Game/Aki/Data/Condition/Enum/SConDitionGroupType.SConditionGroupType
/// Size: 0x01 (1 bytes)
enum class SConditionGroupType : uint8_t
{
	SConditionGroupType__NewEnumerator0                                              = 0,
	SConditionGroupType__NewEnumerator1                                              = 1
};

/// Enum /Game/Aki/Data/Common/Enum/EDayState.EDayState
/// Size: 0x01 (1 bytes)
enum class EDayState : uint8_t
{
	EDayState__NewEnumerator0                                                        = 0,
	EDayState__NewEnumerator1                                                        = 1
};

/// Enum /Game/Aki/AI/AIFunctionCommon/EMovementDirection.EMovementDirection
/// Size: 0x01 (1 bytes)
enum class EMovementDirection : uint8_t
{
	EMovementDirection__NewEnumerator0                                               = 0,
	EMovementDirection__NewEnumerator1                                               = 1,
	EMovementDirection__NewEnumerator2                                               = 2,
	EMovementDirection__NewEnumerator3                                               = 3,
	EMovementDirection__NewEnumerator4                                               = 4
};

/// Enum /Game/Aki/Core/Fight/EBulletEffectParam.EBulletEffectParam
/// Size: 0x01 (1 bytes)
enum class EBulletEffectParam : uint8_t
{
	EBulletEffectParam__NewEnumerator0                                               = 0
};

/// Enum /Game/Aki/Core/Fight/EBulletBaseSpecificParam.EBulletBaseSpecificParam
/// Size: 0x01 (1 bytes)
enum class EBulletBaseSpecificParam : uint8_t
{
	EBulletBaseSpecificParam__NewEnumerator0                                         = 0,
	EBulletBaseSpecificParam__NewEnumerator1                                         = 1
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillType.ESkillType
/// Size: 0x01 (1 bytes)
enum class ESkillType : uint8_t
{
	ESkillType__NewEnumerator0                                                       = 0,
	ESkillType__NewEnumerator1                                                       = 1,
	ESkillType__NewEnumerator3                                                       = 2
};

/// Enum /Game/Aki/Character/BaseCharacter/EAnsBlackboardType.EAnsBlackboardType
/// Size: 0x01 (1 bytes)
enum class EAnsBlackboardType : uint8_t
{
	EAnsBlackboardType__NewEnumerator2                                               = 0,
	EAnsBlackboardType__NewEnumerator1                                               = 1,
	EAnsBlackboardType__NewEnumerator0                                               = 2,
	EAnsBlackboardType__NewEnumerator3                                               = 3
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraSidestep.EFightCameraSidestep
/// Size: 0x01 (1 bytes)
enum class EFightCameraSidestep : uint8_t
{
	EFightCameraSidestep__NewEnumerator7                                             = 0,
	EFightCameraSidestep__NewEnumerator0                                             = 1,
	EFightCameraSidestep__NewEnumerator1                                             = 2,
	EFightCameraSidestep__NewEnumerator2                                             = 3,
	EFightCameraSidestep__NewEnumerator3                                             = 4,
	EFightCameraSidestep__NewEnumerator4                                             = 5,
	EFightCameraSidestep__NewEnumerator5                                             = 6,
	EFightCameraSidestep__NewEnumerator6                                             = 7,
	EFightCameraSidestep__NewEnumerator8                                             = 8,
	EFightCameraSidestep__NewEnumerator9                                             = 9,
	EFightCameraSidestep__NewEnumerator10                                            = 10,
	EFightCameraSidestep__NewEnumerator11                                            = 11,
	EFightCameraSidestep__NewEnumerator12                                            = 12,
	EFightCameraSidestep__NewEnumerator13                                            = 13
};

/// Enum /Game/Aki/Render/RuntimeBP/Effect/Enum/ESceneInteractionEffect.ESceneInteractionEffect
/// Size: 0x01 (1 bytes)
enum class ESceneInteractionEffect : uint8_t
{
	ESceneInteractionEffect__NewEnumerator0                                          = 0,
	ESceneInteractionEffect__NewEnumerator1                                          = 1,
	ESceneInteractionEffect__NewEnumerator2                                          = 2,
	ESceneInteractionEffect__NewEnumerator3                                          = 3,
	ESceneInteractionEffect__NewEnumerator4                                          = 4,
	ESceneInteractionEffect__NewEnumerator5                                          = 5,
	ESceneInteractionEffect__NewEnumerator6                                          = 6,
	ESceneInteractionEffect__NewEnumerator7                                          = 7,
	ESceneInteractionEffect__NewEnumerator8                                          = 8,
	ESceneInteractionEffect__NewEnumerator9                                          = 9,
	ESceneInteractionEffect__NewEnumerator10                                         = 10
};

/// Enum /Game/Aki/Render/RuntimeBP/Effect/Enum/EAnimNotifyEffectLocationType.EAnimNotifyEffectLocationType
/// Size: 0x01 (1 bytes)
enum class EAnimNotifyEffectLocationType : uint8_t
{
	EAnimNotifyEffectLocationType__NewEnumerator0                                    = 0,
	EAnimNotifyEffectLocationType__NewEnumerator1                                    = 1,
	EAnimNotifyEffectLocationType__NewEnumerator2                                    = 2
};

/// Enum /Game/Aki/Character/Role/Common/Data/Structure/EFootstepAkAudioEventType.EFootstepAkAudioEventType
/// Size: 0x01 (1 bytes)
enum class EFootstepAkAudioEventType : uint8_t
{
	EFootstepAkAudioEventType__NewEnumerator0                                        = 0,
	EFootstepAkAudioEventType__NewEnumerator1                                        = 1,
	EFootstepAkAudioEventType__NewEnumerator2                                        = 2,
	EFootstepAkAudioEventType__NewEnumerator3                                        = 3
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/ESequenceCameraAnsEffectiveClientType.ESequenceCameraAnsEffectiveClientType
/// Size: 0x01 (1 bytes)
enum class ESequenceCameraAnsEffectiveClientType : uint8_t
{
	ESequenceCameraAnsEffectiveClientType__NewEnumerator0                            = 0,
	ESequenceCameraAnsEffectiveClientType__NewEnumerator1                            = 1,
	ESequenceCameraAnsEffectiveClientType__NewEnumerator2                            = 2,
	ESequenceCameraAnsEffectiveClientType__NewEnumerator3                            = 3,
	ESequenceCameraAnsEffectiveClientType__NewEnumerator4                            = 4
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/ECameraAnsEffectiveClientType.ECameraAnsEffectiveClientType
/// Size: 0x01 (1 bytes)
enum class ECameraAnsEffectiveClientType : uint8_t
{
	ECameraAnsEffectiveClientType__NewEnumerator0                                    = 0,
	ECameraAnsEffectiveClientType__NewEnumerator1                                    = 1,
	ECameraAnsEffectiveClientType__NewEnumerator2                                    = 2,
	ECameraAnsEffectiveClientType__NewEnumerator3                                    = 3,
	ECameraAnsEffectiveClientType__NewEnumerator4                                    = 4,
	ECameraAnsEffectiveClientType__NewEnumerator5                                    = 5,
	ECameraAnsEffectiveClientType__NewEnumerator6                                    = 6
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EAimAssistMode.EAimAssistMode
/// Size: 0x01 (1 bytes)
enum class EAimAssistMode : uint8_t
{
	EAimAssistMode__NewEnumerator0                                                   = 0,
	EAimAssistMode__NewEnumerator1                                                   = 1,
	EAimAssistMode__NewEnumerator2                                                   = 2
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillLoadType.ESkillLoadType
/// Size: 0x01 (1 bytes)
enum class ESkillLoadType : uint8_t
{
	ESkillLoadType__NewEnumerator0                                                   = 0,
	ESkillLoadType__NewEnumerator1                                                   = 1,
	ESkillLoadType__NewEnumerator2                                                   = 2,
	ESkillLoadType__NewEnumerator3                                                   = 3
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillBehaviorRestrictType.ESkillBehaviorRestrictType
/// Size: 0x01 (1 bytes)
enum class ESkillBehaviorRestrictType : uint8_t
{
	ESkillBehaviorRestrictType__NewEnumerator12                                      = 0,
	ESkillBehaviorRestrictType__NewEnumerator13                                      = 1,
	ESkillBehaviorRestrictType__NewEnumerator14                                      = 2
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillBehaviorRotationType.ESkillBehaviorRotationType
/// Size: 0x01 (1 bytes)
enum class ESkillBehaviorRotationType : uint8_t
{
	ESkillBehaviorRotationType__NewEnumerator12                                      = 0,
	ESkillBehaviorRotationType__NewEnumerator13                                      = 1,
	ESkillBehaviorRotationType__NewEnumerator14                                      = 2,
	ESkillBehaviorRotationType__NewEnumerator15                                      = 3,
	ESkillBehaviorRotationType__NewEnumerator16                                      = 4
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillBehaviorLocationForwardType.ESkillBehaviorLocationForwardType
/// Size: 0x01 (1 bytes)
enum class ESkillBehaviorLocationForwardType : uint8_t
{
	ESkillBehaviorLocationForwardType__NewEnumerator12                               = 0,
	ESkillBehaviorLocationForwardType__NewEnumerator13                               = 1,
	ESkillBehaviorLocationForwardType__NewEnumerator14                               = 2,
	ESkillBehaviorLocationForwardType__NewEnumerator15                               = 3
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillBehaviorLocationType.ESkillBehaviorLocationType
/// Size: 0x01 (1 bytes)
enum class ESkillBehaviorLocationType : uint8_t
{
	ESkillBehaviorLocationType__NewEnumerator0                                       = 0,
	ESkillBehaviorLocationType__NewEnumerator7                                       = 1,
	ESkillBehaviorLocationType__NewEnumerator8                                       = 2,
	ESkillBehaviorLocationType__NewEnumerator9                                       = 3,
	ESkillBehaviorLocationType__NewEnumerator10                                      = 4,
	ESkillBehaviorLocationType__NewEnumerator11                                      = 5,
	ESkillBehaviorLocationType__NewEnumerator13                                      = 6,
	ESkillBehaviorLocationType__NewEnumerator14                                      = 7
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillBehaviorActionType.ESkillBehaviorActionType
/// Size: 0x01 (1 bytes)
enum class ESkillBehaviorActionType : uint8_t
{
	ESkillBehaviorActionType__NewEnumerator0                                         = 0,
	ESkillBehaviorActionType__NewEnumerator1                                         = 1,
	ESkillBehaviorActionType__NewEnumerator2                                         = 2,
	ESkillBehaviorActionType__NewEnumerator3                                         = 3,
	ESkillBehaviorActionType__NewEnumerator4                                         = 4,
	ESkillBehaviorActionType__NewEnumerator5                                         = 5,
	ESkillBehaviorActionType__NewEnumerator6                                         = 6,
	ESkillBehaviorActionType__NewEnumerator7                                         = 7,
	ESkillBehaviorActionType__NewEnumerator8                                         = 8,
	ESkillBehaviorActionType__NewEnumerator9                                         = 9,
	ESkillBehaviorActionType__NewEnumerator10                                        = 10,
	ESkillBehaviorActionType__NewEnumerator11                                        = 11
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillBehaviorComparisonLogic.ESkillBehaviorComparisonLogic
/// Size: 0x01 (1 bytes)
enum class ESkillBehaviorComparisonLogic : uint8_t
{
	ESkillBehaviorComparisonLogic__NewEnumerator0                                    = 0,
	ESkillBehaviorComparisonLogic__NewEnumerator1                                    = 1,
	ESkillBehaviorComparisonLogic__NewEnumerator2                                    = 2,
	ESkillBehaviorComparisonLogic__NewEnumerator5                                    = 3,
	ESkillBehaviorComparisonLogic__NewEnumerator6                                    = 4,
	ESkillBehaviorComparisonLogic__NewEnumerator7                                    = 5
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillBehaviorConditionType.ESkillBehaviorConditionType
/// Size: 0x01 (1 bytes)
enum class ESkillBehaviorConditionType : uint8_t
{
	ESkillBehaviorConditionType__NewEnumerator0                                      = 0,
	ESkillBehaviorConditionType__NewEnumerator1                                      = 1,
	ESkillBehaviorConditionType__NewEnumerator2                                      = 2,
	ESkillBehaviorConditionType__NewEnumerator5                                      = 3,
	ESkillBehaviorConditionType__NewEnumerator6                                      = 4,
	ESkillBehaviorConditionType__NewEnumerator7                                      = 5
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillMode.ESkillMode
/// Size: 0x01 (1 bytes)
enum class ESkillMode : uint8_t
{
	ESkillMode__NewEnumerator0                                                       = 0,
	ESkillMode__NewEnumerator1                                                       = 1
};

/// Enum /Game/Aki/Data/Effect/Struct/EEffectType.EEffectType
/// Size: 0x01 (1 bytes)
enum class EEffectType : uint8_t
{
	EEffectType__NewEnumerator0                                                      = 0,
	EEffectType__NewEnumerator1                                                      = 1,
	EEffectType__NewEnumerator2                                                      = 2,
	EEffectType__NewEnumerator3                                                      = 3
};

/// Enum /Game/Aki/Data/Effect/Struct/EEffectPlay.EEffectPlay
/// Size: 0x01 (1 bytes)
enum class EEffectPlay : uint8_t
{
	EEffectPlay__NewEnumerator0                                                      = 0,
	EEffectPlay__NewEnumerator1                                                      = 1,
	EEffectPlay__NewEnumerator2                                                      = 2
};

/// Enum /Game/Aki/Character/BaseCharacter/EPawnChannel.EPawnChannel
/// Size: 0x01 (1 bytes)
enum class EPawnChannel : uint8_t
{
	EPawnChannel__NewEnumerator0                                                     = 0,
	EPawnChannel__NewEnumerator1                                                     = 1,
	EPawnChannel__NewEnumerator2                                                     = 2,
	EPawnChannel__NewEnumerator3                                                     = 3
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillTargetDirection.ESkillTargetDirection
/// Size: 0x01 (1 bytes)
enum class ESkillTargetDirection : uint8_t
{
	ESkillTargetDirection__NewEnumerator0                                            = 0,
	ESkillTargetDirection__NewEnumerator5                                            = 1,
	ESkillTargetDirection__NewEnumerator4                                            = 2,
	ESkillTargetDirection__NewEnumerator3                                            = 3
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillTargetPriority.ESkillTargetPriority
/// Size: 0x01 (1 bytes)
enum class ESkillTargetPriority : uint8_t
{
	ESkillTargetPriority__NewEnumerator0                                             = 0,
	ESkillTargetPriority__NewEnumerator4                                             = 1,
	ESkillTargetPriority__NewEnumerator3                                             = 2,
	ESkillTargetPriority__NewEnumerator7                                             = 3
};

/// Enum /Game/Aki/Data/UiNavigation/Enum/ECursorOffsetType.ECursorOffsetType
/// Size: 0x01 (1 bytes)
enum class ECursorOffsetType : uint8_t
{
	ECursorOffsetType__NewEnumerator0                                                = 0,
	ECursorOffsetType__NewEnumerator1                                                = 1,
	ECursorOffsetType__NewEnumerator2                                                = 2,
	ECursorOffsetType__NewEnumerator3                                                = 3
};

/// Enum /Game/Aki/Data/UiNavigation/Enum/EHotKeyNameStateType.EHotKeyNameStateType
/// Size: 0x01 (1 bytes)
enum class EHotKeyNameStateType : uint8_t
{
	EHotKeyNameStateType__NewEnumerator2                                             = 0,
	EHotKeyNameStateType__NewEnumerator0                                             = 1,
	EHotKeyNameStateType__NewEnumerator1                                             = 2
};

/// Enum /Game/Aki/Scene/NewGacha/BP/E_GachaResultNew.E_GachaResultNew
/// Size: 0x01 (1 bytes)
enum class E_GachaResultNew : uint8_t
{
	E_GachaResultNew__NewEnumerator0                                                 = 0,
	E_GachaResultNew__NewEnumerator1                                                 = 1,
	E_GachaResultNew__NewEnumerator2                                                 = 2,
	E_GachaResultNew__NewEnumerator3                                                 = 3,
	E_GachaResultNew__NewEnumerator4                                                 = 4
};

/// Enum /Game/Aki/Data/Role/Enum/ERoleInteractType.ERoleInteractType
/// Size: 0x01 (1 bytes)
enum class ERoleInteractType : uint8_t
{
	ERoleInteractType__NewEnumerator0                                                = 0,
	ERoleInteractType__NewEnumerator1                                                = 1,
	ERoleInteractType__NewEnumerator2                                                = 2,
	ERoleInteractType__NewEnumerator3                                                = 3
};

/// Enum /Game/Aki/Sequence/Manager/EPlotSequenceType.EPlotSequenceType
/// Size: 0x01 (1 bytes)
enum class EPlotSequenceType : uint8_t
{
	EPlotSequenceType__NewEnumerator0                                                = 0,
	EPlotSequenceType__NewEnumerator1                                                = 1,
	EPlotSequenceType__NewEnumerator2                                                = 2
};

/// Enum /Game/Aki/Character/Role/Common/Data/Enum/EWeaponViewName.EWeaponViewName
/// Size: 0x01 (1 bytes)
enum class EWeaponViewName : uint8_t
{
	EWeaponViewName__NewEnumerator0                                                  = 0,
	EWeaponViewName__NewEnumerator19                                                 = 1,
	EWeaponViewName__NewEnumerator20                                                 = 2,
	EWeaponViewName__NewEnumerator21                                                 = 3,
	EWeaponViewName__NewEnumerator22                                                 = 4
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/MaterialController/ECharacterMeshPart.ECharacterMeshPart
/// Size: 0x01 (1 bytes)
enum class ECharacterMeshPart : uint8_t
{
	ECharacterMeshPart__NewEnumerator0                                               = 0,
	ECharacterMeshPart__NewEnumerator1                                               = 1,
	ECharacterMeshPart__NewEnumerator2                                               = 2,
	ECharacterMeshPart__NewEnumerator3                                               = 3,
	ECharacterMeshPart__NewEnumerator4                                               = 4,
	ECharacterMeshPart__NewEnumerator5                                               = 5,
	ECharacterMeshPart__NewEnumerator6                                               = 6,
	ECharacterMeshPart__NewEnumerator7                                               = 7,
	ECharacterMeshPart__NewEnumerator12                                              = 8,
	ECharacterMeshPart__NewEnumerator13                                              = 9,
	ECharacterMeshPart__NewEnumerator8                                               = 10,
	ECharacterMeshPart__NewEnumerator9                                               = 11,
	ECharacterMeshPart__NewEnumerator17                                              = 12,
	ECharacterMeshPart__NewEnumerator10                                              = 13,
	ECharacterMeshPart__NewEnumerator11                                              = 14,
	ECharacterMeshPart__NewEnumerator18                                              = 15,
	ECharacterMeshPart__NewEnumerator19                                              = 16,
	ECharacterMeshPart__NewEnumerator16                                              = 17
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/MaterialController/ECharacterControllerCaseType.ECharacterControllerCaseType
/// Size: 0x01 (1 bytes)
enum class ECharacterControllerCaseType : uint8_t
{
	ECharacterControllerCaseType__NewEnumerator0                                     = 0,
	ECharacterControllerCaseType__NewEnumerator1                                     = 1,
	ECharacterControllerCaseType__NewEnumerator2                                     = 2,
	ECharacterControllerCaseType__NewEnumerator3                                     = 3,
	ECharacterControllerCaseType__NewEnumerator4                                     = 4,
	ECharacterControllerCaseType__NewEnumerator5                                     = 5,
	ECharacterControllerCaseType__NewEnumerator6                                     = 6,
	ECharacterControllerCaseType__NewEnumerator7                                     = 7,
	ECharacterControllerCaseType__NewEnumerator8                                     = 8,
	ECharacterControllerCaseType__NewEnumerator9                                     = 9,
	ECharacterControllerCaseType__NewEnumerator10                                    = 10,
	ECharacterControllerCaseType__NewEnumerator11                                    = 11
};

/// Enum /Game/Aki/Render/RuntimeBP/Effect/Scene/ESceneEffectStateType.ESceneEffectStateType
/// Size: 0x01 (1 bytes)
enum class ESceneEffectStateType : uint8_t
{
	ESceneEffectStateType__NewEnumerator0                                            = 0,
	ESceneEffectStateType__NewEnumerator1                                            = 1
};

/// Enum /Game/Aki/Character/NPC/Animal/EAnimalEcologicalState.EAnimalEcologicalState
/// Size: 0x01 (1 bytes)
enum class EAnimalEcologicalState : uint8_t
{
	EAnimalEcologicalState__NewEnumerator11                                          = 0,
	EAnimalEcologicalState__NewEnumerator0                                           = 1,
	EAnimalEcologicalState__NewEnumerator1                                           = 2,
	EAnimalEcologicalState__NewEnumerator4                                           = 3,
	EAnimalEcologicalState__NewEnumerator3                                           = 4,
	EAnimalEcologicalState__NewEnumerator6                                           = 5,
	EAnimalEcologicalState__NewEnumerator12                                          = 6
};

/// Enum /Game/Aki/Render/RuntimeBP/Effect/MultiEffect/EMultiEffectType.EMultiEffectType
/// Size: 0x01 (1 bytes)
enum class EMultiEffectType : uint8_t
{
	EMultiEffectType__NewEnumerator0                                                 = 0
};

/// Enum /Game/Aki/Core/Fight/EBulletSpecificEffect.EBulletSpecificEffect
/// Size: 0x01 (1 bytes)
enum class EBulletSpecificEffect : uint8_t
{
	EBulletSpecificEffect__NewEnumerator2                                            = 0,
	EBulletSpecificEffect__NewEnumerator0                                            = 1,
	EBulletSpecificEffect__NewEnumerator1                                            = 2
};

/// Enum /Game/Aki/Character/BaseCharacter/ECharacterState.ECharacterState
/// Size: 0x01 (1 bytes)
enum class ECharacterState : uint8_t
{
	ECharacterState__NewEnumerator0                                                  = 0,
	ECharacterState__NewEnumerator1                                                  = 1,
	ECharacterState__NewEnumerator2                                                  = 2,
	ECharacterState__NewEnumerator3                                                  = 3
};

/// Enum /Game/Aki/Character/BaseCharacter/ECaughtDirectionType.ECaughtDirectionType
/// Size: 0x01 (1 bytes)
enum class ECaughtDirectionType : uint8_t
{
	ECaughtDirectionType__NewEnumerator0                                             = 0,
	ECaughtDirectionType__NewEnumerator1                                             = 1,
	ECaughtDirectionType__NewEnumerator2                                             = 2
};

/// Enum /Game/Aki/Character/BaseCharacter/EAnsRotateBlackboardType.EAnsRotateBlackboardType
/// Size: 0x01 (1 bytes)
enum class EAnsRotateBlackboardType : uint8_t
{
	EAnsRotateBlackboardType__NewEnumerator0                                         = 0,
	EAnsRotateBlackboardType__NewEnumerator1                                         = 1,
	EAnsRotateBlackboardType__NewEnumerator2                                         = 2,
	EAnsRotateBlackboardType__NewEnumerator3                                         = 3
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/Npc/ENpcSetupType.ENpcSetupType
/// Size: 0x01 (1 bytes)
enum class ENpcSetupType : uint8_t
{
	ENpcSetupType__NewEnumerator0                                                    = 0,
	ENpcSetupType__NewEnumerator1                                                    = 1
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraSpecialGameplay.EFightCameraSpecialGameplay
/// Size: 0x01 (1 bytes)
enum class EFightCameraSpecialGameplay : uint8_t
{
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraModify.EFightCameraModify
/// Size: 0x01 (1 bytes)
enum class EFightCameraModify : uint8_t
{
	EFightCameraModify__NewEnumerator4                                               = 0,
	EFightCameraModify__NewEnumerator0                                               = 1,
	EFightCameraModify__NewEnumerator1                                               = 2,
	EFightCameraModify__NewEnumerator2                                               = 3,
	EFightCameraModify__NewEnumerator3                                               = 4
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraInput.EFightCameraInput
/// Size: 0x01 (1 bytes)
enum class EFightCameraInput : uint8_t
{
	EFightCameraInput__NewEnumerator6                                                = 0,
	EFightCameraInput__NewEnumerator0                                                = 1,
	EFightCameraInput__NewEnumerator1                                                = 2,
	EFightCameraInput__NewEnumerator2                                                = 3,
	EFightCameraInput__NewEnumerator3                                                = 4,
	EFightCameraInput__NewEnumerator4                                                = 5,
	EFightCameraInput__NewEnumerator5                                                = 6,
	EFightCameraInput__NewEnumerator7                                                = 7,
	EFightCameraInput__NewEnumerator8                                                = 8,
	EFightCameraInput__NewEnumerator9                                                = 9,
	EFightCameraInput__NewEnumerator10                                               = 10,
	EFightCameraInput__NewEnumerator11                                               = 11,
	EFightCameraInput__NewEnumerator12                                               = 12,
	EFightCameraInput__NewEnumerator13                                               = 13,
	EFightCameraInput__NewEnumerator15                                               = 14,
	EFightCameraInput__NewEnumerator16                                               = 15,
	EFightCameraInput__NewEnumerator17                                               = 16,
	EFightCameraInput__NewEnumerator14                                               = 17,
	EFightCameraInput__NewEnumerator18                                               = 18,
	EFightCameraInput__NewEnumerator19                                               = 19,
	EFightCameraInput__NewEnumerator20                                               = 20
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraGuide.EFightCameraGuide
/// Size: 0x01 (1 bytes)
enum class EFightCameraGuide : uint8_t
{
	EFightCameraGuide__NewEnumerator17                                               = 0,
	EFightCameraGuide__NewEnumerator0                                                = 1,
	EFightCameraGuide__NewEnumerator1                                                = 2,
	EFightCameraGuide__NewEnumerator2                                                = 3,
	EFightCameraGuide__NewEnumerator3                                                = 4,
	EFightCameraGuide__NewEnumerator4                                                = 5,
	EFightCameraGuide__NewEnumerator5                                                = 6,
	EFightCameraGuide__NewEnumerator6                                                = 7,
	EFightCameraGuide__NewEnumerator7                                                = 8,
	EFightCameraGuide__NewEnumerator8                                                = 9,
	EFightCameraGuide__NewEnumerator9                                                = 10,
	EFightCameraGuide__NewEnumerator10                                               = 11,
	EFightCameraGuide__NewEnumerator11                                               = 12,
	EFightCameraGuide__NewEnumerator12                                               = 13,
	EFightCameraGuide__NewEnumerator13                                               = 14,
	EFightCameraGuide__NewEnumerator14                                               = 15,
	EFightCameraGuide__NewEnumerator15                                               = 16,
	EFightCameraGuide__NewEnumerator16                                               = 17
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraFocus.EFightCameraFocus
/// Size: 0x01 (1 bytes)
enum class EFightCameraFocus : uint8_t
{
	EFightCameraFocus__NewEnumerator1                                                = 0,
	EFightCameraFocus__NewEnumerator0                                                = 1,
	EFightCameraFocus__NewEnumerator3                                                = 2,
	EFightCameraFocus__NewEnumerator4                                                = 3,
	EFightCameraFocus__NewEnumerator5                                                = 4,
	EFightCameraFocus__NewEnumerator6                                                = 5,
	EFightCameraFocus__NewEnumerator7                                                = 6,
	EFightCameraFocus__NewEnumerator8                                                = 7,
	EFightCameraFocus__NewEnumerator9                                                = 8,
	EFightCameraFocus__NewEnumerator10                                               = 9,
	EFightCameraFocus__NewEnumerator11                                               = 10,
	EFightCameraFocus__NewEnumerator13                                               = 11,
	EFightCameraFocus__NewEnumerator30                                               = 12,
	EFightCameraFocus__NewEnumerator14                                               = 13,
	EFightCameraFocus__NewEnumerator31                                               = 14,
	EFightCameraFocus__NewEnumerator15                                               = 15,
	EFightCameraFocus__NewEnumerator16                                               = 16,
	EFightCameraFocus__NewEnumerator17                                               = 17,
	EFightCameraFocus__NewEnumerator18                                               = 18,
	EFightCameraFocus__NewEnumerator19                                               = 19,
	EFightCameraFocus__NewEnumerator20                                               = 20,
	EFightCameraFocus__NewEnumerator21                                               = 21,
	EFightCameraFocus__NewEnumerator22                                               = 22,
	EFightCameraFocus__NewEnumerator23                                               = 23,
	EFightCameraFocus__NewEnumerator28                                               = 24,
	EFightCameraFocus__NewEnumerator32                                               = 25,
	EFightCameraFocus__NewEnumerator29                                               = 26,
	EFightCameraFocus__NewEnumerator33                                               = 27,
	EFightCameraFocus__NewEnumerator34                                               = 28,
	EFightCameraFocus__NewEnumerator35                                               = 29,
	EFightCameraFocus__NewEnumerator36                                               = 30,
	EFightCameraFocus__NewEnumerator37                                               = 31
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraExplore.EFightCameraExplore
/// Size: 0x01 (1 bytes)
enum class EFightCameraExplore : uint8_t
{
	EFightCameraExplore__NewEnumerator8                                              = 0,
	EFightCameraExplore__NewEnumerator0                                              = 1,
	EFightCameraExplore__NewEnumerator1                                              = 2,
	EFightCameraExplore__NewEnumerator2                                              = 3,
	EFightCameraExplore__NewEnumerator3                                              = 4,
	EFightCameraExplore__NewEnumerator4                                              = 5,
	EFightCameraExplore__NewEnumerator5                                              = 6,
	EFightCameraExplore__NewEnumerator6                                              = 7,
	EFightCameraExplore__NewEnumerator7                                              = 8
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraDialogue.EFightCameraDialogue
/// Size: 0x01 (1 bytes)
enum class EFightCameraDialogue : uint8_t
{
	EFightCameraDialogue__NewEnumerator11                                            = 0,
	EFightCameraDialogue__NewEnumerator0                                             = 1,
	EFightCameraDialogue__NewEnumerator1                                             = 2,
	EFightCameraDialogue__NewEnumerator2                                             = 3,
	EFightCameraDialogue__NewEnumerator3                                             = 4,
	EFightCameraDialogue__NewEnumerator4                                             = 5,
	EFightCameraDialogue__NewEnumerator5                                             = 6,
	EFightCameraDialogue__NewEnumerator6                                             = 7,
	EFightCameraDialogue__NewEnumerator7                                             = 8,
	EFightCameraDialogue__NewEnumerator8                                             = 9,
	EFightCameraDialogue__NewEnumerator9                                             = 10,
	EFightCameraDialogue__NewEnumerator10                                            = 11,
	EFightCameraDialogue__NewEnumerator12                                            = 12
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraDefault.EFightCameraDefault
/// Size: 0x01 (1 bytes)
enum class EFightCameraDefault : uint8_t
{
	EFightCameraDefault__NewEnumerator21                                             = 0,
	EFightCameraDefault__NewEnumerator23                                             = 1,
	EFightCameraDefault__NewEnumerator24                                             = 2,
	EFightCameraDefault__NewEnumerator25                                             = 3,
	EFightCameraDefault__NewEnumerator26                                             = 4,
	EFightCameraDefault__NewEnumerator27                                             = 5,
	EFightCameraDefault__NewEnumerator28                                             = 6,
	EFightCameraDefault__NewEnumerator29                                             = 7,
	EFightCameraDefault__NewEnumerator30                                             = 8,
	EFightCameraDefault__NewEnumerator0                                              = 9,
	EFightCameraDefault__NewEnumerator1                                              = 10,
	EFightCameraDefault__NewEnumerator2                                              = 11,
	EFightCameraDefault__NewEnumerator3                                              = 12,
	EFightCameraDefault__NewEnumerator4                                              = 13,
	EFightCameraDefault__NewEnumerator5                                              = 14,
	EFightCameraDefault__NewEnumerator6                                              = 15,
	EFightCameraDefault__NewEnumerator7                                              = 16,
	EFightCameraDefault__NewEnumerator8                                              = 17,
	EFightCameraDefault__NewEnumerator9                                              = 18,
	EFightCameraDefault__NewEnumerator10                                             = 19,
	EFightCameraDefault__NewEnumerator11                                             = 20,
	EFightCameraDefault__NewEnumerator12                                             = 21,
	EFightCameraDefault__NewEnumerator13                                             = 22,
	EFightCameraDefault__NewEnumerator14                                             = 23,
	EFightCameraDefault__NewEnumerator15                                             = 24,
	EFightCameraDefault__NewEnumerator16                                             = 25,
	EFightCameraDefault__NewEnumerator17                                             = 26,
	EFightCameraDefault__NewEnumerator18                                             = 27,
	EFightCameraDefault__NewEnumerator19                                             = 28,
	EFightCameraDefault__NewEnumerator20                                             = 29,
	EFightCameraDefault__NewEnumerator31                                             = 30,
	EFightCameraDefault__NewEnumerator32                                             = 31,
	EFightCameraDefault__NewEnumerator33                                             = 32,
	EFightCameraDefault__NewEnumerator34                                             = 33,
	EFightCameraDefault__NewEnumerator35                                             = 34,
	EFightCameraDefault__NewEnumerator36                                             = 35,
	EFightCameraDefault__NewEnumerator37                                             = 36,
	EFightCameraDefault__NewEnumerator38                                             = 37,
	EFightCameraDefault__NewEnumerator39                                             = 38,
	EFightCameraDefault__NewEnumerator40                                             = 39,
	EFightCameraDefault__NewEnumerator41                                             = 40,
	EFightCameraDefault__NewEnumerator42                                             = 41,
	EFightCameraDefault__NewEnumerator43                                             = 42,
	EFightCameraDefault__NewEnumerator44                                             = 43,
	EFightCameraDefault__NewEnumerator45                                             = 44,
	EFightCameraDefault__NewEnumerator46                                             = 45,
	EFightCameraDefault__NewEnumerator47                                             = 46,
	EFightCameraDefault__NewEnumerator48                                             = 47,
	EFightCameraDefault__NewEnumerator49                                             = 48,
	EFightCameraDefault__NewEnumerator50                                             = 49,
	EFightCameraDefault__NewEnumerator51                                             = 50,
	EFightCameraDefault__NewEnumerator52                                             = 51,
	EFightCameraDefault__NewEnumerator53                                             = 52,
	EFightCameraDefault__NewEnumerator54                                             = 53,
	EFightCameraDefault__NewEnumerator55                                             = 54,
	EFightCameraDefault__NewEnumerator57                                             = 55,
	EFightCameraDefault__NewEnumerator58                                             = 56,
	EFightCameraDefault__NewEnumerator59                                             = 57,
	EFightCameraDefault__NewEnumerator60                                             = 58,
	EFightCameraDefault__NewEnumerator61                                             = 59,
	EFightCameraDefault__NewEnumerator62                                             = 60,
	EFightCameraDefault__NewEnumerator63                                             = 61,
	EFightCameraDefault__NewEnumerator64                                             = 62,
	EFightCameraDefault__NewEnumerator65                                             = 63,
	EFightCameraDefault__NewEnumerator66                                             = 64
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraClimb.EFightCameraClimb
/// Size: 0x01 (1 bytes)
enum class EFightCameraClimb : uint8_t
{
	EFightCameraClimb__NewEnumerator17                                               = 0,
	EFightCameraClimb__NewEnumerator0                                                = 1,
	EFightCameraClimb__NewEnumerator1                                                = 2,
	EFightCameraClimb__NewEnumerator2                                                = 3,
	EFightCameraClimb__NewEnumerator3                                                = 4,
	EFightCameraClimb__NewEnumerator4                                                = 5,
	EFightCameraClimb__NewEnumerator5                                                = 6,
	EFightCameraClimb__NewEnumerator6                                                = 7,
	EFightCameraClimb__NewEnumerator7                                                = 8,
	EFightCameraClimb__NewEnumerator8                                                = 9,
	EFightCameraClimb__NewEnumerator9                                                = 10,
	EFightCameraClimb__NewEnumerator10                                               = 11,
	EFightCameraClimb__NewEnumerator11                                               = 12,
	EFightCameraClimb__NewEnumerator12                                               = 13,
	EFightCameraClimb__NewEnumerator13                                               = 14,
	EFightCameraClimb__NewEnumerator14                                               = 15,
	EFightCameraClimb__NewEnumerator15                                               = 16,
	EFightCameraClimb__NewEnumerator16                                               = 17,
	EFightCameraClimb__NewEnumerator18                                               = 18,
	EFightCameraClimb__NewEnumerator19                                               = 19,
	EFightCameraClimb__NewEnumerator20                                               = 20
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraAdjust.EFightCameraAdjust
/// Size: 0x01 (1 bytes)
enum class EFightCameraAdjust : uint8_t
{
	EFightCameraAdjust__NewEnumerator14                                              = 0,
	EFightCameraAdjust__NewEnumerator0                                               = 1,
	EFightCameraAdjust__NewEnumerator1                                               = 2,
	EFightCameraAdjust__NewEnumerator2                                               = 3,
	EFightCameraAdjust__NewEnumerator3                                               = 4,
	EFightCameraAdjust__NewEnumerator4                                               = 5,
	EFightCameraAdjust__NewEnumerator5                                               = 6,
	EFightCameraAdjust__NewEnumerator6                                               = 7,
	EFightCameraAdjust__NewEnumerator7                                               = 8,
	EFightCameraAdjust__NewEnumerator8                                               = 9,
	EFightCameraAdjust__NewEnumerator9                                               = 10,
	EFightCameraAdjust__NewEnumerator10                                              = 11,
	EFightCameraAdjust__NewEnumerator11                                              = 12,
	EFightCameraAdjust__NewEnumerator12                                              = 13,
	EFightCameraAdjust__NewEnumerator13                                              = 14
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraAuto.EFightCameraAuto
/// Size: 0x01 (1 bytes)
enum class EFightCameraAuto : uint8_t
{
	EFightCameraAuto__NewEnumerator16                                                = 0,
	EFightCameraAuto__NewEnumerator0                                                 = 1,
	EFightCameraAuto__NewEnumerator1                                                 = 2,
	EFightCameraAuto__NewEnumerator2                                                 = 3,
	EFightCameraAuto__NewEnumerator3                                                 = 4,
	EFightCameraAuto__NewEnumerator4                                                 = 5,
	EFightCameraAuto__NewEnumerator5                                                 = 6,
	EFightCameraAuto__NewEnumerator6                                                 = 7,
	EFightCameraAuto__NewEnumerator7                                                 = 8,
	EFightCameraAuto__NewEnumerator8                                                 = 9,
	EFightCameraAuto__NewEnumerator9                                                 = 10,
	EFightCameraAuto__NewEnumerator10                                                = 11,
	EFightCameraAuto__NewEnumerator11                                                = 12,
	EFightCameraAuto__NewEnumerator12                                                = 13,
	EFightCameraAuto__NewEnumerator13                                                = 14,
	EFightCameraAuto__NewEnumerator14                                                = 15,
	EFightCameraAuto__NewEnumerator15                                                = 16,
	EFightCameraAuto__NewEnumerator23                                                = 17,
	EFightCameraAuto__NewEnumerator24                                                = 18,
	EFightCameraAuto__NewEnumerator25                                                = 19,
	EFightCameraAuto__NewEnumerator26                                                = 20,
	EFightCameraAuto__NewEnumerator27                                                = 21,
	EFightCameraAuto__NewEnumerator30                                                = 22,
	EFightCameraAuto__NewEnumerator31                                                = 23
};

/// Enum /Game/Aki/Data/Entity/Enum/EEntityType.EEntityType
/// Size: 0x01 (1 bytes)
enum class EEntityType : uint8_t
{
	EEntityType__NewEnumerator0                                                      = 0,
	EEntityType__NewEnumerator6                                                      = 1,
	EEntityType__NewEnumerator1                                                      = 2,
	EEntityType__NewEnumerator2                                                      = 3,
	EEntityType__NewEnumerator3                                                      = 4,
	EEntityType__NewEnumerator4                                                      = 5,
	EEntityType__NewEnumerator5                                                      = 6,
	EEntityType__NewEnumerator7                                                      = 7
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/MaterialContainer/ECharacterBodyType.ECharacterBodyType
/// Size: 0x01 (1 bytes)
enum class ECharacterBodyType : uint8_t
{
	ECharacterBodyType__NewEnumerator0                                               = 0,
	ECharacterBodyType__NewEnumerator1                                               = 1,
	ECharacterBodyType__NewEnumerator2                                               = 2,
	ECharacterBodyType__NewEnumerator3                                               = 3
};

/// Enum /Game/Aki/Render/RuntimeBP/Effect/Trailing/ETrailingAttachType.ETrailingAttachType
/// Size: 0x01 (1 bytes)
enum class ETrailingAttachType : uint8_t
{
	ETrailingAttachType__NewEnumerator0                                              = 0,
	ETrailingAttachType__NewEnumerator1                                              = 1,
	ETrailingAttachType__NewEnumerator2                                              = 2
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillEffectType.ESkillEffectType
/// Size: 0x01 (1 bytes)
enum class ESkillEffectType : uint8_t
{
	ESkillEffectType__NewEnumerator0                                                 = 0,
	ESkillEffectType__NewEnumerator1                                                 = 1,
	ESkillEffectType__NewEnumerator2                                                 = 2
};

/// Enum /Game/Aki/Render/RuntimeBP/Effect/Scalability/ENiagaraScalabilityType.ENiagaraScalabilityType
/// Size: 0x01 (1 bytes)
enum class ENiagaraScalabilityType : uint8_t
{
	ENiagaraScalabilityType__NewEnumerator6                                          = 0,
	ENiagaraScalabilityType__NewEnumerator0                                          = 1,
	ENiagaraScalabilityType__NewEnumerator1                                          = 2,
	ENiagaraScalabilityType__NewEnumerator2                                          = 3,
	ENiagaraScalabilityType__NewEnumerator3                                          = 4
};

/// Enum /Game/Aki/Render/RuntimeBP/Effect/Scalability/EEffectScalabilityType.EEffectScalabilityType
/// Size: 0x01 (1 bytes)
enum class EEffectScalabilityType : uint8_t
{
	EEffectScalabilityType__NewEnumerator0                                           = 0,
	EEffectScalabilityType__NewEnumerator4                                           = 1,
	EEffectScalabilityType__NewEnumerator5                                           = 2
};

/// Enum /Game/Aki/Render/RuntimeBP/Effect/Statistics/EEffectStatisticsSortType.EEffectStatisticsSortType
/// Size: 0x01 (1 bytes)
enum class EEffectStatisticsSortType : uint8_t
{
	EEffectStatisticsSortType__NewEnumerator0                                        = 0,
	EEffectStatisticsSortType__NewEnumerator1                                        = 1,
	EEffectStatisticsSortType__NewEnumerator2                                        = 2
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillBehaviorBuffTargetType.ESkillBehaviorBuffTargetType
/// Size: 0x01 (1 bytes)
enum class ESkillBehaviorBuffTargetType : uint8_t
{
	ESkillBehaviorBuffTargetType__NewEnumerator0                                     = 0,
	ESkillBehaviorBuffTargetType__NewEnumerator1                                     = 1
};

/// Enum /Game/Aki/Data/UiCameraAnimation/Enum/EUiCameraAnimationAttributeType.EUiCameraAnimationAttributeType
/// Size: 0x01 (1 bytes)
enum class EUiCameraAnimationAttributeType : uint8_t
{
	EUiCameraAnimationAttributeType__NewEnumerator0                                  = 0,
	EUiCameraAnimationAttributeType__NewEnumerator1                                  = 1,
	EUiCameraAnimationAttributeType__NewEnumerator2                                  = 2,
	EUiCameraAnimationAttributeType__NewEnumerator3                                  = 3,
	EUiCameraAnimationAttributeType__NewEnumerator4                                  = 4,
	EUiCameraAnimationAttributeType__NewEnumerator5                                  = 5,
	EUiCameraAnimationAttributeType__NewEnumerator6                                  = 6,
	EUiCameraAnimationAttributeType__NewEnumerator7                                  = 7,
	EUiCameraAnimationAttributeType__NewEnumerator8                                  = 8,
	EUiCameraAnimationAttributeType__NewEnumerator9                                  = 9
};

/// Enum /Game/Aki/Character/BaseCharacter/EVelocityCurveType.EVelocityCurveType
/// Size: 0x01 (1 bytes)
enum class EVelocityCurveType : uint8_t
{
	EVelocityCurveType__NewEnumerator0                                               = 0,
	EVelocityCurveType__NewEnumerator1                                               = 1,
	EVelocityCurveType__NewEnumerator2                                               = 2,
	EVelocityCurveType__NewEnumerator3                                               = 3
};

/// Enum /Game/Aki/Character/Vision/EVisionType.EVisionType
/// Size: 0x01 (1 bytes)
enum class EVisionType : uint8_t
{
	EVisionType__NewEnumerator0                                                      = 0,
	EVisionType__NewEnumerator1                                                      = 1,
	EVisionType__NewEnumerator2                                                      = 2,
	EVisionType__NewEnumerator3                                                      = 3
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EBattleUIChild.EBattleUIChild
/// Size: 0x01 (1 bytes)
enum class EBattleUIChild : uint8_t
{
	EBattleUIChild__NewEnumerator0                                                   = 0,
	EBattleUIChild__NewEnumerator1                                                   = 1,
	EBattleUIChild__NewEnumerator2                                                   = 2,
	EBattleUIChild__NewEnumerator3                                                   = 3,
	EBattleUIChild__NewEnumerator4                                                   = 4,
	EBattleUIChild__NewEnumerator5                                                   = 5,
	EBattleUIChild__NewEnumerator6                                                   = 6,
	EBattleUIChild__NewEnumerator7                                                   = 7,
	EBattleUIChild__NewEnumerator8                                                   = 8,
	EBattleUIChild__NewEnumerator9                                                   = 9,
	EBattleUIChild__NewEnumerator10                                                  = 10,
	EBattleUIChild__NewEnumerator11                                                  = 11,
	EBattleUIChild__NewEnumerator12                                                  = 12,
	EBattleUIChild__NewEnumerator13                                                  = 13,
	EBattleUIChild__NewEnumerator14                                                  = 14,
	EBattleUIChild__NewEnumerator15                                                  = 15,
	EBattleUIChild__NewEnumerator16                                                  = 16,
	EBattleUIChild__NewEnumerator17                                                  = 17,
	EBattleUIChild__NewEnumerator18                                                  = 18,
	EBattleUIChild__NewEnumerator19                                                  = 19,
	EBattleUIChild__NewEnumerator20                                                  = 20
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillBehaviorBestSpotType.ESkillBehaviorBestSpotType
/// Size: 0x01 (1 bytes)
enum class ESkillBehaviorBestSpotType : uint8_t
{
	ESkillBehaviorBestSpotType__NewEnumerator12                                      = 0,
	ESkillBehaviorBestSpotType__NewEnumerator13                                      = 1
};

/// Enum /Game/Aki/Data/NPC/SimpleNpcFlow/ESimpleNpcFlowIndex.ESimpleNpcFlowIndex
/// Size: 0x01 (1 bytes)
enum class ESimpleNpcFlowIndex : uint8_t
{
	ESimpleNpcFlowIndex__NewEnumerator0                                              = 0,
	ESimpleNpcFlowIndex__NewEnumerator1                                              = 1,
	ESimpleNpcFlowIndex__NewEnumerator2                                              = 2,
	ESimpleNpcFlowIndex__NewEnumerator3                                              = 3,
	ESimpleNpcFlowIndex__NewEnumerator4                                              = 4,
	ESimpleNpcFlowIndex__NewEnumerator5                                              = 5,
	ESimpleNpcFlowIndex__NewEnumerator6                                              = 6,
	ESimpleNpcFlowIndex__NewEnumerator7                                              = 7,
	ESimpleNpcFlowIndex__NewEnumerator8                                              = 8,
	ESimpleNpcFlowIndex__NewEnumerator9                                              = 9,
	ESimpleNpcFlowIndex__NewEnumerator10                                             = 10
};

/// Enum /Game/Aki/Render/RuntimeBP/Effect/Billboard/E_BillboardMode.E_BillboardMode
/// Size: 0x01 (1 bytes)
enum class E_BillboardMode : uint8_t
{
	E_BillboardMode__NewEnumerator2                                                  = 0,
	E_BillboardMode__NewEnumerator1                                                  = 1,
	E_BillboardMode__NewEnumerator3                                                  = 2
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/MaterialController/ECharacterControllerUVSwitch.ECharacterControllerUVSwitch
/// Size: 0x01 (1 bytes)
enum class ECharacterControllerUVSwitch : uint8_t
{
	ECharacterControllerUVSwitch__NewEnumerator0                                     = 0,
	ECharacterControllerUVSwitch__NewEnumerator1                                     = 1,
	ECharacterControllerUVSwitch__NewEnumerator2                                     = 2,
	ECharacterControllerUVSwitch__NewEnumerator3                                     = 3,
	ECharacterControllerUVSwitch__NewEnumerator4                                     = 4
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/MaterialController/ECharacterControllerChannelSwitch.ECharacterControllerChannelSwitch
/// Size: 0x01 (1 bytes)
enum class ECharacterControllerChannelSwitch : uint8_t
{
	ECharacterControllerChannelSwitch__NewEnumerator0                                = 0,
	ECharacterControllerChannelSwitch__NewEnumerator1                                = 1,
	ECharacterControllerChannelSwitch__NewEnumerator2                                = 2,
	ECharacterControllerChannelSwitch__NewEnumerator3                                = 3,
	ECharacterControllerChannelSwitch__NewEnumerator4                                = 4
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/MaterialController/ECharacterControllerApplyType.ECharacterControllerApplyType
/// Size: 0x01 (1 bytes)
enum class ECharacterControllerApplyType : uint8_t
{
	ECharacterControllerApplyType__NewEnumerator0                                    = 0,
	ECharacterControllerApplyType__NewEnumerator2                                    = 1
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/MaterialContainer/ECharacterSlotSpecifiedType.ECharacterSlotSpecifiedType
/// Size: 0x01 (1 bytes)
enum class ECharacterSlotSpecifiedType : uint8_t
{
	ECharacterSlotSpecifiedType__NewEnumerator3                                      = 0,
	ECharacterSlotSpecifiedType__NewEnumerator0                                      = 1,
	ECharacterSlotSpecifiedType__NewEnumerator1                                      = 2,
	ECharacterSlotSpecifiedType__NewEnumerator2                                      = 3
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/MaterialContainer/ECharacterSlotType.ECharacterSlotType
/// Size: 0x01 (1 bytes)
enum class ECharacterSlotType : uint8_t
{
	ECharacterSlotType__NewEnumerator4                                               = 0,
	ECharacterSlotType__NewEnumerator0                                               = 1,
	ECharacterSlotType__NewEnumerator1                                               = 2,
	ECharacterSlotType__NewEnumerator2                                               = 3,
	ECharacterSlotType__NewEnumerator3                                               = 4,
	ECharacterSlotType__NewEnumerator5                                               = 5
};

/// Enum /Game/Aki/Data/NPC/SimpleNpcFlow/ESimpleNpcFlowCheckType.ESimpleNpcFlowCheckType
/// Size: 0x01 (1 bytes)
enum class ESimpleNpcFlowCheckType : uint8_t
{
	ESimpleNpcFlowCheckType__NewEnumerator0                                          = 0,
	ESimpleNpcFlowCheckType__NewEnumerator1                                          = 1,
	ESimpleNpcFlowCheckType__NewEnumerator4                                          = 2,
	ESimpleNpcFlowCheckType__NewEnumerator3                                          = 3,
	ESimpleNpcFlowCheckType__NewEnumerator6                                          = 4,
	ESimpleNpcFlowCheckType__NewEnumerator7                                          = 5,
	ESimpleNpcFlowCheckType__NewEnumerator2                                          = 6,
	ESimpleNpcFlowCheckType__NewEnumerator5                                          = 7,
	ESimpleNpcFlowCheckType__NewEnumerator9                                          = 8,
	ESimpleNpcFlowCheckType__NewEnumerator8                                          = 9
};

/// Enum /Game/Aki/Core/Fight/EPositionStandard.EPositionStandard
/// Size: 0x01 (1 bytes)
enum class EPositionStandard : uint8_t
{
	EPositionStandard__NewEnumerator0                                                = 0,
	EPositionStandard__NewEnumerator1                                                = 1,
	EPositionStandard__NewEnumerator2                                                = 2,
	EPositionStandard__NewEnumerator3                                                = 3,
	EPositionStandard__NewEnumerator4                                                = 4,
	EPositionStandard__NewEnumerator5                                                = 5,
	EPositionStandard__NewEnumerator7                                                = 6,
	EPositionStandard__NewEnumerator8                                                = 7,
	EPositionStandard__NewEnumerator9                                                = 8,
	EPositionStandard__NewEnumerator10                                               = 9,
	EPositionStandard__NewEnumerator11                                               = 10
};

/// Enum /Game/Aki/Core/Fight/EHitType.EHitType
/// Size: 0x01 (1 bytes)
enum class EHitType : uint8_t
{
	EHitType__NewEnumerator0                                                         = 0,
	EHitType__NewEnumerator1                                                         = 1,
	EHitType__NewEnumerator2                                                         = 2,
	EHitType__NewEnumerator3                                                         = 3,
	EHitType__NewEnumerator4                                                         = 4
};

/// Enum /Game/Aki/Core/Fight/EBulletChildrenType.EBulletChildrenType
/// Size: 0x01 (1 bytes)
enum class EBulletChildrenType : uint8_t
{
	EBulletChildrenType__NewEnumerator4                                              = 0,
	EBulletChildrenType__NewEnumerator0                                              = 1,
	EBulletChildrenType__NewEnumerator1                                              = 2,
	EBulletChildrenType__NewEnumerator2                                              = 3,
	EBulletChildrenType__NewEnumerator3                                              = 4,
	EBulletChildrenType__NewEnumerator5                                              = 5
};

/// Enum /Game/Aki/Sequence/Manager/Enum/SeqCameraMode.SeqCameraMode
/// Size: 0x01 (1 bytes)
enum class SeqCameraMode : uint8_t
{
	SeqCameraMode__NewEnumerator0                                                    = 0,
	SeqCameraMode__NewEnumerator1                                                    = 1,
	SeqCameraMode__NewEnumerator2                                                    = 2
};

/// Enum /Game/Aki/Character/Role/Common/Data/Enum/EPerformanceRoleState.EPerformanceRoleState
/// Size: 0x01 (1 bytes)
enum class EPerformanceRoleState : uint8_t
{
	EPerformanceRoleState__NewEnumerator0                                            = 0,
	EPerformanceRoleState__NewEnumerator1                                            = 1,
	EPerformanceRoleState__NewEnumerator7                                            = 2,
	EPerformanceRoleState__NewEnumerator2                                            = 3,
	EPerformanceRoleState__NewEnumerator9                                            = 4,
	EPerformanceRoleState__NewEnumerator3                                            = 5,
	EPerformanceRoleState__NewEnumerator4                                            = 6,
	EPerformanceRoleState__NewEnumerator5                                            = 7,
	EPerformanceRoleState__NewEnumerator6                                            = 8,
	EPerformanceRoleState__NewEnumerator10                                           = 9,
	EPerformanceRoleState__NewEnumerator11                                           = 10,
	EPerformanceRoleState__NewEnumerator12                                           = 11,
	EPerformanceRoleState__NewEnumerator13                                           = 12,
	EPerformanceRoleState__NewEnumerator14                                           = 13,
	EPerformanceRoleState__NewEnumerator15                                           = 14,
	EPerformanceRoleState__NewEnumerator16                                           = 15,
	EPerformanceRoleState__NewEnumerator17                                           = 16,
	EPerformanceRoleState__NewEnumerator18                                           = 17,
	EPerformanceRoleState__NewEnumerator19                                           = 18,
	EPerformanceRoleState__NewEnumerator21                                           = 19,
	EPerformanceRoleState__NewEnumerator22                                           = 20,
	EPerformanceRoleState__NewEnumerator23                                           = 21
};

/// Enum /Game/Aki/Character/Input/Enum/EInputCharacterState.EInputCharacterState
/// Size: 0x01 (1 bytes)
enum class EInputCharacterState : uint8_t
{
	EInputCharacterState__NewEnumerator0                                             = 0,
	EInputCharacterState__NewEnumerator1                                             = 1,
	EInputCharacterState__NewEnumerator2                                             = 2,
	EInputCharacterState__NewEnumerator3                                             = 3,
	EInputCharacterState__NewEnumerator4                                             = 4,
	EInputCharacterState__NewEnumerator5                                             = 5,
	EInputCharacterState__NewEnumerator6                                             = 6,
	EInputCharacterState__NewEnumerator7                                             = 7,
	EInputCharacterState__NewEnumerator8                                             = 8
};

/// Enum /Game/Aki/Data/LevelGamePlay/StrikeResponse/Stuct/StrikeType.StrikeType
/// Size: 0x01 (1 bytes)
enum class StrikeType : uint8_t
{
	StrikeType__NewEnumerator0                                                       = 0,
	StrikeType__NewEnumerator1                                                       = 1,
	StrikeType__NewEnumerator4                                                       = 2,
	StrikeType__NewEnumerator2                                                       = 3
};

/// Enum /Game/Aki/Data/Interaction/Enum/EInteractOptionType.EInteractOptionType
/// Size: 0x01 (1 bytes)
enum class EInteractOptionType : uint8_t
{
	EInteractOptionType__NewEnumerator0                                              = 0,
	EInteractOptionType__NewEnumerator1                                              = 1,
	EInteractOptionType__NewEnumerator2                                              = 2
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillGenre.ESkillGenre
/// Size: 0x01 (1 bytes)
enum class ESkillGenre : uint8_t
{
	ESkillGenre__NewEnumerator0                                                      = 0,
	ESkillGenre__NewEnumerator1                                                      = 1,
	ESkillGenre__NewEnumerator2                                                      = 2,
	ESkillGenre__NewEnumerator3                                                      = 3,
	ESkillGenre__NewEnumerator4                                                      = 4,
	ESkillGenre__NewEnumerator5                                                      = 5,
	ESkillGenre__NewEnumerator6                                                      = 6,
	ESkillGenre__NewEnumerator7                                                      = 7,
	ESkillGenre__NewEnumerator8                                                      = 8,
	ESkillGenre__NewEnumerator9                                                      = 9,
	ESkillGenre__NewEnumerator10                                                     = 10,
	ESkillGenre__NewEnumerator11                                                     = 11,
	ESkillGenre__NewEnumerator13                                                     = 12,
	ESkillGenre__NewEnumerator12                                                     = 13
};

/// Enum /Game/Aki/Character/BaseCharacter/EExitClimb.EExitClimb
/// Size: 0x01 (1 bytes)
enum class EExitClimb : uint8_t
{
	EExitClimb__NewEnumerator0                                                       = 0,
	EExitClimb__NewEnumerator1                                                       = 1,
	EExitClimb__NewEnumerator2                                                       = 2,
	EExitClimb__NewEnumerator3                                                       = 3,
	EExitClimb__NewEnumerator5                                                       = 4,
	EExitClimb__NewEnumerator6                                                       = 5,
	EExitClimb__NewEnumerator7                                                       = 6,
	EExitClimb__NewEnumerator8                                                       = 7,
	EExitClimb__NewEnumerator11                                                      = 8,
	EExitClimb__NewEnumerator12                                                      = 9,
	EExitClimb__NewEnumerator13                                                      = 10
};

/// Enum /Game/Aki/Character/BaseCharacter/ESkillOverrideType.ESkillOverrideType
/// Size: 0x01 (1 bytes)
enum class ESkillOverrideType : uint8_t
{
	ESkillOverrideType__NewEnumerator0                                               = 0,
	ESkillOverrideType__NewEnumerator1                                               = 1,
	ESkillOverrideType__NewEnumerator2                                               = 2,
	ESkillOverrideType__NewEnumerator3                                               = 3
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/ECameraModifyConditionType.ECameraModifyConditionType
/// Size: 0x01 (1 bytes)
enum class ECameraModifyConditionType : uint8_t
{
	ECameraModifyConditionType__NewEnumerator0                                       = 0,
	ECameraModifyConditionType__NewEnumerator1                                       = 1,
	ECameraModifyConditionType__NewEnumerator2                                       = 2,
	ECameraModifyConditionType__NewEnumerator7                                       = 3,
	ECameraModifyConditionType__NewEnumerator3                                       = 4,
	ECameraModifyConditionType__NewEnumerator4                                       = 5,
	ECameraModifyConditionType__NewEnumerator5                                       = 6,
	ECameraModifyConditionType__NewEnumerator8                                       = 7
};

/// Enum /Game/Aki/Data/NPC/SimpleNpcFlow/ESimpleNpcWorldState.ESimpleNpcWorldState
/// Size: 0x01 (1 bytes)
enum class ESimpleNpcWorldState : uint8_t
{
	ESimpleNpcWorldState__NewEnumerator0                                             = 0,
	ESimpleNpcWorldState__NewEnumerator1                                             = 1,
	ESimpleNpcWorldState__NewEnumerator2                                             = 2
};

/// Enum /Game/Aki/Core/Fight/EBulletDestOffset.EBulletDestOffset
/// Size: 0x01 (1 bytes)
enum class EBulletDestOffset : uint8_t
{
	EBulletDestOffset__NewEnumerator0                                                = 0,
	EBulletDestOffset__NewEnumerator1                                                = 1,
	EBulletDestOffset__NewEnumerator2                                                = 2
};

/// Enum /Game/Aki/Core/Fight/EBulletBeginVelocityLimit.EBulletBeginVelocityLimit
/// Size: 0x01 (1 bytes)
enum class EBulletBeginVelocityLimit : uint8_t
{
	EBulletBeginVelocityLimit__NewEnumerator0                                        = 0,
	EBulletBeginVelocityLimit__NewEnumerator1                                        = 1,
	EBulletBeginVelocityLimit__NewEnumerator2                                        = 2,
	EBulletBeginVelocityLimit__NewEnumerator3                                        = 3
};

/// Enum /Game/Aki/Core/Fight/EBulletEffectOnHitType.EBulletEffectOnHitType
/// Size: 0x01 (1 bytes)
enum class EBulletEffectOnHitType : uint8_t
{
	EBulletEffectOnHitType__NewEnumerator0                                           = 0
};

/// Enum /Game/Aki/Data/Interaction/Enum/EInteractOptionLimit.EInteractOptionLimit
/// Size: 0x01 (1 bytes)
enum class EInteractOptionLimit : uint8_t
{
	EInteractOptionLimit__NewEnumerator0                                             = 0,
	EInteractOptionLimit__NewEnumerator1                                             = 1,
	EInteractOptionLimit__NewEnumerator3                                             = 2
};

/// Enum /Game/Aki/Render/RuntimeBP/StateMachineEffect/EEffectState.EEffectState
/// Size: 0x01 (1 bytes)
enum class EEffectState : uint8_t
{
	EEffectState__NewEnumerator0                                                     = 0,
	EEffectState__NewEnumerator1                                                     = 1,
	EEffectState__NewEnumerator2                                                     = 2,
	EEffectState__NewEnumerator3                                                     = 3,
	EEffectState__NewEnumerator4                                                     = 4
};

/// Enum /Game/Aki/Character/BaseCharacter/EAttributeTarget.EAttributeTarget
/// Size: 0x01 (1 bytes)
enum class EAttributeTarget : uint8_t
{
	EAttributeTarget__NewEnumerator1                                                 = 0,
	EAttributeTarget__NewEnumerator0                                                 = 1
};

/// Enum /Game/Aki/Character/BaseCharacter/EAttributeOperation.EAttributeOperation
/// Size: 0x01 (1 bytes)
enum class EAttributeOperation : uint8_t
{
	EAttributeOperation__NewEnumerator0                                              = 0,
	EAttributeOperation__NewEnumerator1                                              = 1,
	EAttributeOperation__NewEnumerator2                                              = 2,
	EAttributeOperation__NewEnumerator3                                              = 3,
	EAttributeOperation__NewEnumerator4                                              = 4
};

/// Enum /Game/Aki/Character/BaseCharacter/EAttributeEffectType.EAttributeEffectType
/// Size: 0x01 (1 bytes)
enum class EAttributeEffectType : uint8_t
{
	EAttributeEffectType__NewEnumerator0                                             = 0,
	EAttributeEffectType__NewEnumerator1                                             = 1,
	EAttributeEffectType__NewEnumerator2                                             = 2
};

/// Enum /Game/Aki/Render/RuntimeBP/ScreenEffect/Data/E_SE_PlayState.E_SE_PlayState
/// Size: 0x01 (1 bytes)
enum class E_SE_PlayState : uint8_t
{
	E_SE_PlayState__NewEnumerator0                                                   = 0,
	E_SE_PlayState__NewEnumerator1                                                   = 1,
	E_SE_PlayState__NewEnumerator2                                                   = 2,
	E_SE_PlayState__NewEnumerator3                                                   = 3
};

/// Enum /Game/Aki/AI/AIFunctionCommon/EActionPlan.EActionPlan
/// Size: 0x01 (1 bytes)
enum class EActionPlan : uint8_t
{
	EActionPlan__NewEnumerator0                                                      = 0,
	EActionPlan__NewEnumerator1                                                      = 1,
	EActionPlan__NewEnumerator3                                                      = 2,
	EActionPlan__NewEnumerator4                                                      = 3,
	EActionPlan__NewEnumerator5                                                      = 4
};

/// Enum /Game/Aki/Character/BaseCharacter/Camera/EFightCameraHook.EFightCameraHook
/// Size: 0x01 (1 bytes)
enum class EFightCameraHook : uint8_t
{
	EFightCameraHook__NewEnumerator0                                                 = 0
};

/// Enum /Game/Aki/Character/BaseCharacter/StateMachine/EMonsterDeathType.EMonsterDeathType
/// Size: 0x01 (1 bytes)
enum class EMonsterDeathType : uint8_t
{
	EMonsterDeathType__NewEnumerator0                                                = 0,
	EMonsterDeathType__NewEnumerator2                                                = 1,
	EMonsterDeathType__NewEnumerator1                                                = 2
};

/// Enum /Game/Aki/Character/Kpose/Blueprint/BP_Enum_PlatformSize.BP_Enum_PlatformSize
/// Size: 0x01 (1 bytes)
enum class BP_Enum_PlatformSize : uint8_t
{
	BP_Enum_PlatformSize__NewEnumerator0                                             = 0,
	BP_Enum_PlatformSize__NewEnumerator1                                             = 1,
	BP_Enum_PlatformSize__NewEnumerator2                                             = 2
};

/// Enum /Game/Aki/TypeScript/Game/NewWorld/Character/SimpleNpc/Blueprint/EHolographicState.EHolographicState
/// Size: 0x01 (1 bytes)
enum class EHolographicState : uint8_t
{
	EHolographicState__NewEnumerator0                                                = 0,
	EHolographicState__NewEnumerator1                                                = 1,
	EHolographicState__NewEnumerator2                                                = 2,
	EHolographicState__NewEnumerator3                                                = 3
};

/// Enum /Game/Aki/Render/RuntimeBP/Effect/Ghost/EEffectModelGhostComponent.EEffectModelGhostComponent
/// Size: 0x01 (1 bytes)
enum class EEffectModelGhostComponent : uint8_t
{
	EEffectModelGhostComponent__NewEnumerator0                                       = 0,
	EEffectModelGhostComponent__NewEnumerator1                                       = 1,
	EEffectModelGhostComponent__NewEnumerator2                                       = 2,
	EEffectModelGhostComponent__NewEnumerator5                                       = 3,
	EEffectModelGhostComponent__NewEnumerator6                                       = 4,
	EEffectModelGhostComponent__NewEnumerator7                                       = 5,
	EEffectModelGhostComponent__NewEnumerator3                                       = 6,
	EEffectModelGhostComponent__NewEnumerator8                                       = 7,
	EEffectModelGhostComponent__NewEnumerator9                                       = 8,
	EEffectModelGhostComponent__NewEnumerator10                                      = 9,
	EEffectModelGhostComponent__NewEnumerator11                                      = 10,
	EEffectModelGhostComponent__NewEnumerator12                                      = 11
};

/// Enum /Game/Aki/Render/RuntimeBP/ScreenEffect/Data/E_SE_PlayOrder.E_SE_PlayOrder
/// Size: 0x01 (1 bytes)
enum class E_SE_PlayOrder : uint8_t
{
	E_SE_PlayOrder__NewEnumerator0                                                   = 0,
	E_SE_PlayOrder__NewEnumerator1                                                   = 1
};

/// Enum /Game/Aki/Render/RuntimeBP/Character/Npc/EBodyPartName.EBodyPartName
/// Size: 0x01 (1 bytes)
enum class EBodyPartName : uint8_t
{
	EBodyPartName__NewEnumerator4                                                    = 0,
	EBodyPartName__NewEnumerator0                                                    = 1,
	EBodyPartName__NewEnumerator1                                                    = 2,
	EBodyPartName__NewEnumerator2                                                    = 3,
	EBodyPartName__NewEnumerator3                                                    = 4
};

/// Enum /Game/Aki/Data/Quest/Enum/EQuestType.EQuestType
/// Size: 0x01 (1 bytes)
enum class EQuestType : uint8_t
{
	EQuestType__NewEnumerator0                                                       = 0,
	EQuestType__NewEnumerator1                                                       = 1
};

/// Enum /Game/Aki/Data/Fight/UI/ESpecialEnergyBarPrefabType.ESpecialEnergyBarPrefabType
/// Size: 0x01 (1 bytes)
enum class ESpecialEnergyBarPrefabType : uint8_t
{
	ESpecialEnergyBarPrefabType__NewEnumerator0                                      = 0,
	ESpecialEnergyBarPrefabType__NewEnumerator1                                      = 1,
	ESpecialEnergyBarPrefabType__NewEnumerator2                                      = 2,
	ESpecialEnergyBarPrefabType__NewEnumerator3                                      = 3,
	ESpecialEnergyBarPrefabType__NewEnumerator4                                      = 4,
	ESpecialEnergyBarPrefabType__NewEnumerator5                                      = 5,
	ESpecialEnergyBarPrefabType__NewEnumerator11                                     = 6,
	ESpecialEnergyBarPrefabType__NewEnumerator6                                      = 7,
	ESpecialEnergyBarPrefabType__NewEnumerator12                                     = 8,
	ESpecialEnergyBarPrefabType__NewEnumerator13                                     = 9
};

/// Enum /Game/Aki/Data/Fight/UI/EPanelQteViewType.EPanelQteViewType
/// Size: 0x01 (1 bytes)
enum class EPanelQteViewType : uint8_t
{
	EPanelQteViewType__NewEnumerator0                                                = 0,
	EPanelQteViewType__NewEnumerator3                                                = 1
};

/// Enum /Game/Aki/Data/Fight/UI/EPanelQteCustomAction.EPanelQteCustomAction
/// Size: 0x01 (1 bytes)
enum class EPanelQteCustomAction : uint8_t
{
	EPanelQteCustomAction__NewEnumerator0                                            = 0,
	EPanelQteCustomAction__NewEnumerator1                                            = 1
};

/// Enum /Game/Aki/Character/Vision/GA/Role/BPE_ManipulateState.BPE_ManipulateState
/// Size: 0x01 (1 bytes)
enum class BPE_ManipulateState : uint8_t
{
	BPE_ManipulateState__NewEnumerator4                                              = 0,
	BPE_ManipulateState__NewEnumerator0                                              = 1,
	BPE_ManipulateState__NewEnumerator1                                              = 2,
	BPE_ManipulateState__NewEnumerator6                                              = 3,
	BPE_ManipulateState__NewEnumerator2                                              = 4,
	BPE_ManipulateState__NewEnumerator5                                              = 5
};

/// Enum /Game/Aki/AI/AIFunctionCommon/EWalkingPosture.EWalkingPosture
/// Size: 0x01 (1 bytes)
enum class EWalkingPosture : uint8_t
{
	EWalkingPosture__NewEnumerator0                                                  = 0,
	EWalkingPosture__NewEnumerator1                                                  = 1
};

/// Class /Game/Aki/Core/BP_MainGameInstance.BP_MainGameInstance_C
/// Size: 0x0011 (17 bytes) (0x0001B0 - 0x0001C1) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UBP_MainGameInstance_C : public UGameInstance
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x01B0   (0x0008)  
	class ULoadMapNotify*                              _Wof_R_;                                                    // 0x01B8   (0x0008)  
	bool                                               IsStartFromLaunch;                                          // 0x01C0   (0x0001)  
	// void StartGame();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Reboot();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void MountGamePak();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void MountLauncherPak();                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveInit();                                                                                                      // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_MainGameInstance(int32_t EntryPoint);                                                           // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/GI/NewCloud/BP/PD_CloudPreset.PD_CloudPreset_C
/// Size: 0x03C0 (960 bytes) (0x000038 - 0x0003F8) align 8 pad: 0x0000
class UPD_CloudPreset_C : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(48,938) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_Y);                                       // 0x0038   (0x0030)  
	SDK_UNDEFINED(48,939) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(W___);                                     // 0x0068   (0x0030)  
	SDK_UNDEFINED(48,940) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_eIQ);                                     // 0x0098   (0x0030)  
	SDK_UNDEFINED(48,941) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_vU_);                                     // 0x00C8   (0x0030)  
	SDK_UNDEFINED(48,942) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_e___S);                                   // 0x00F8   (0x0030)  
	SDK_UNDEFINED(48,943) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_e___);                                    // 0x0128   (0x0030)  
	SDK_UNDEFINED(48,944) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_N_f);                                     // 0x0158   (0x0030)  
	SDK_UNDEFINED(48,945) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_S_uKm_);                                  // 0x0188   (0x0030)  
	SDK_UNDEFINED(48,946) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_e___);                                    // 0x01B8   (0x0030)  
	SDK_UNDEFINED(48,947) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_e___);                                    // 0x01E8   (0x0030)  
	SDK_UNDEFINED(48,948) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_e___);                                    // 0x0218   (0x0030)  
	SDK_UNDEFINED(48,949) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_e___);                                    // 0x0248   (0x0030)  
	SDK_UNDEFINED(48,950) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_o_);                                      // 0x0278   (0x0030)  
	SDK_UNDEFINED(48,951) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(__no);                                     // 0x02A8   (0x0030)  
	SDK_UNDEFINED(48,952) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(4__Y);                                     // 0x02D8   (0x0030)  
	SDK_UNDEFINED(48,953) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(___f);                                     // 0x0308   (0x0030)  
	SDK_UNDEFINED(48,954) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_S___);                                    // 0x0338   (0x0030)  
	SDK_UNDEFINED(48,955) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(_YZf);                                     // 0x0368   (0x0030)  
	SDK_UNDEFINED(48,956) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(__);                                       // 0x0398   (0x0030)  
	SDK_UNDEFINED(48,957) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(___);                                      // 0x03C8   (0x0030)  
};

/// Class /Game/Aki/Render/RuntimeBP/Library/BPF_CameraHelper.BPF_CameraHelper_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPF_CameraHelper_C : public UBlueprintFunctionLibrary
{ 
public:
	// void GetCameraRotator(int32_t PlayerIndex, class UObject* __WorldContext, bool& Success, FRotator& Rotator);             // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void GetCameraLocation(int32_t PlayerIndex, class UObject* __WorldContext, bool& Success, FVector& Location);            // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void GetCameraTransform(int32_t PlayerIndex, class UObject* __WorldContext, bool& Success, FTransform& Transform);       // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Aki/Render/RuntimeBP/GI/NewCloud/BP/BP_Clouds.BP_Clouds_C
/// Size: 0x0098 (152 bytes) (0x0002B8 - 0x000350) align 8 pad: 0x0000
class ABP_Clouds_C : public AKuroEditorTickActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B8   (0x0008)  
	class UChildActorComponent*                        Cloud02;                                                    // 0x02C0   (0x0008)  
	class UChildActorComponent*                        Cloud01;                                                    // 0x02C8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02D0   (0x0008)  
	TEnumAsByte<E_Cloud_Presents>                      S_MR_N____;                                                 // 0x02D8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02D9   (0x0007)  MISSED
	class UPD_CloudPreset_C*                           CloudData;                                                  // 0x02E0   (0x0008)  
	bool                                               Counting;                                                   // 0x02E8   (0x0001)  
	TEnumAsByte<E_Cloud_Presents>                      ______e;                                                    // 0x02E9   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x02EA   (0x0006)  MISSED
	SDK_UNDEFINED(48,958) /* TWeakObjectPtr<UPD_CloudPrefab_C*> */ __um(CloudAsset);                               // 0x02F0   (0x0030)  
	TArray<int32_t>                                    SortNumber;                                                 // 0x0320   (0x0010)  
	class UPD_CloudPrefab_C*                           As_PD_Cloud_Prefab;                                         // 0x0330   (0x0008)  
	class UAkAudioEvent*                               CachedAudioEvent2D;                                         // 0x0338   (0x0008)  
	bool                                               IsSkyOcean;                                                 // 0x0340   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0341   (0x0007)  MISSED
	class UAkAudioEvent*                               SkyOceanAudio;                                              // 0x0348   (0x0008)  
	// void GetGIParams(FSGIData GIData);                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _0();                                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __();                                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _S___();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _S_uKm();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetCloudParameters(class UPD_CloudPrefab_C* CloudPrefeb, class UChildActorComponent* CloudActorComponent, float ChangeSpeed, int32_t TransSortNumber); // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void HiddenOld();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SwitchCloudsSub(class UPD_CloudPrefab_C* CloudPresents, float ChangeSpeed);                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void OnLoaded_63FE5E2B437AFAD504FBCAB26242EB8A(class UObject* Loaded);                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void ChangeCloud();                                                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void SwitchClouds(TEnumAsByte<E_Cloud_Presents> CloudPresents, float ChangeSpeed, bool IsInEditor);                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void LoadAndSwitch(TWeakObjectPtr<UObject*> Asset, float ChangeSpeed, bool IsInEditor, bool IsAudio);                    // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_Clouds(int32_t EntryPoint);                                                                     // [0x25a7960] Final|HasDefaults    
};

/// Struct /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WeatherData.WeatherData
/// Size: 0x006C (108 bytes) (0x000000 - 0x00006C) align 4 pad: 0x0000
struct FWeatherData
{ 
	float                                              CloudsScale_6_46BD2FFD4101E62C58B396AE3DAA8046;             // 0x0000   (0x0004)  
	float                                              CloudsDensity_8_C959F15B494C31785AB9BDA43B1D7D13;           // 0x0004   (0x0004)  
	float                                              CloudsVertexDensity_80_5B70D3CB4EBF864F08091E8395A218C9;    // 0x0008   (0x0004)  
	float                                              CloudsHarness_10_C035BB69421FE083D844959BBFE947D1;          // 0x000C   (0x0004)  
	float                                              CloudsTranslucent_18_6BF1A8914FAA8F67988B9DADC914CBC6;      // 0x0010   (0x0004)  
	float                                              CloudsBlend_17_0B0902B849FFF532D0FA73AD750162A7;            // 0x0014   (0x0004)  
	float                                              CloudsDistotion_19_FF8260554CA3B701D6C62A87A392E3BA;        // 0x0018   (0x0004)  
	float                                              CloudsScattering_20_EA03A384445C04BBBC4EA2A3A28674D9;       // 0x001C   (0x0004)  
	float                                              CloudsUpperBrightness_47_80E6F59C44C0E63FF352E1ACA405DEAD;  // 0x0020   (0x0004)  
	float                                              CloudsLowerBrightness_48_C275CDC444671D9809D344A043817F24;  // 0x0024   (0x0004)  
	float                                              CloudsAmbient_26_B3DE5189457AF2F2C9061DAE095629E4;          // 0x0028   (0x0004)  
	float                                              CloudsShadowSize_32_30070F544C29A5175B4905A3CAA43C9B;       // 0x002C   (0x0004)  
	float                                              CloudsShadowSoft_33_242397844998748E4CE442A82FABD76E;       // 0x0030   (0x0004)  
	float                                              CloudsBackground_34_81AB1CD743507906283E26BC8179CD02;       // 0x0034   (0x0004)  
	float                                              CloudsHorizonDensity_35_A9DA12E04BD1ACCE877556A07AFC0A81;   // 0x0038   (0x0004)  
	float                                              CloudsHorizonAlpha_36_B5FE09604EE51B66C6109689DD26A633;     // 0x003C   (0x0004)  
	float                                              CloudsHorizonScattering_38_96C12A72485C8C653890E983ADECA031; // 0x0040   (0x0004)  
	float                                              HorizonFalloff_41_7ADEA15D4BAFCED09051BDAAB67D0E6E;         // 0x0044   (0x0004)  
	float                                              WindForceScale_42_494196B04350B9CE2B731E97799FE070;         // 0x0048   (0x0004)  
	float                                              WindDynamic_45_4BD5C5EC4B00477CD0BAC8857B6087F7;            // 0x004C   (0x0004)  
	float                                              WindDispersing_46_747C4F2B40612E5FE76792B0CB7C4E90;         // 0x0050   (0x0004)  
	float                                              SkylightBrightness_52_D0DC0C2C48095A9468CA2A8ECC6B512B;     // 0x0054   (0x0004)  
	float                                              SecondLayerHardness_84_45838BE4416742C9BAAEBE949ACA2027;    // 0x0058   (0x0004)  
	float                                              SecondLayerColor_71_16427994489B87788D8B02B67E7E863B;       // 0x005C   (0x0004)  
	float                                              SecondLayerAlpha_72_8759E297465AF80FD8856791526E7414;       // 0x0060   (0x0004)  
	float                                              SecondLayerScale_77_6F5F9AE84D7C8132AF2BD68DD7F5A018;       // 0x0064   (0x0004)  
	float                                              SecondLayerWind_73_58F8ABAE4AE471692F3D53A832B70EC0;        // 0x0068   (0x0004)  
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WeatherPreset.WeatherPreset_C
/// Size: 0x006C (108 bytes) (0x000030 - 0x00009C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UWeatherPreset_C : public UObject
{ 
public:
	FWeatherData                                       Data;                                                       // 0x0030   (0x006C)  
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WP_Sunny.WP_Sunny_C
/// Size: 0x0000 (0 bytes) (0x00009C - 0x00009C) align 8 pad: 0x0000
class UWP_Sunny_C : public UWeatherPreset_C
{ 
public:
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WP_Stormy.WP_Stormy_C
/// Size: 0x0000 (0 bytes) (0x00009C - 0x00009C) align 8 pad: 0x0000
class UWP_Stormy_C : public UWeatherPreset_C
{ 
public:
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WP_Snowy.WP_Snowy_C
/// Size: 0x0000 (0 bytes) (0x00009C - 0x00009C) align 8 pad: 0x0000
class UWP_Snowy_C : public UWeatherPreset_C
{ 
public:
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WP_Smoky.WP_Smoky_C
/// Size: 0x0000 (0 bytes) (0x00009C - 0x00009C) align 8 pad: 0x0000
class UWP_Smoky_C : public UWeatherPreset_C
{ 
public:
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WP_Rainy.WP_Rainy_C
/// Size: 0x0000 (0 bytes) (0x00009C - 0x00009C) align 8 pad: 0x0000
class UWP_Rainy_C : public UWeatherPreset_C
{ 
public:
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WP_Overcast.WP_Overcast_C
/// Size: 0x0000 (0 bytes) (0x00009C - 0x00009C) align 8 pad: 0x0000
class UWP_Overcast_C : public UWeatherPreset_C
{ 
public:
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WP_HalfSunny.WP_HalfSunny_C
/// Size: 0x0000 (0 bytes) (0x00009C - 0x00009C) align 8 pad: 0x0000
class UWP_HalfSunny_C : public UWeatherPreset_C
{ 
public:
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WP_Gloomy.WP_Gloomy_C
/// Size: 0x0000 (0 bytes) (0x00009C - 0x00009C) align 8 pad: 0x0000
class UWP_Gloomy_C : public UWeatherPreset_C
{ 
public:
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WP_Foggy.WP_Foggy_C
/// Size: 0x0000 (0 bytes) (0x00009C - 0x00009C) align 8 pad: 0x0000
class UWP_Foggy_C : public UWeatherPreset_C
{ 
public:
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WP_Cloudy.WP_Cloudy_C
/// Size: 0x0000 (0 bytes) (0x00009C - 0x00009C) align 8 pad: 0x0000
class UWP_Cloudy_C : public UWeatherPreset_C
{ 
public:
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WP_Clean.WP_Clean_C
/// Size: 0x0000 (0 bytes) (0x00009C - 0x00009C) align 8 pad: 0x0000
class UWP_Clean_C : public UWeatherPreset_C
{ 
public:
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/WP_Blizzard.WP_Blizzard_C
/// Size: 0x0000 (0 bytes) (0x00009C - 0x00009C) align 8 pad: 0x0000
class UWP_Blizzard_C : public UWeatherPreset_C
{ 
public:
};

/// Struct /Game/Aki/Render/RuntimeBP/GI/Data/TOD/TimeOfDayData.TimeOfDayData
/// Size: 0x00A4 (164 bytes) (0x000000 - 0x0000A4) align 4 pad: 0x0000
struct FTimeOfDayData
{ 
	float                                              PresetTimeOfDay_48_72731B344467C1038DE1E18CEB2DA386;        // 0x0000   (0x0004)  
	FLinearColor                                       SkyUpperColor_36_F574B1FF4C660D607018378D4D29D5D8;          // 0x0004   (0x0010)  
	FLinearColor                                       SkyLowerColor_37_9AE60C56438D767F5189779E892918F6;          // 0x0014   (0x0010)  
	FLinearColor                                       CloudsUpperColor_38_427730AB4B57918C2621AC9E42481B18;       // 0x0024   (0x0010)  
	FLinearColor                                       CloudsLowerColor_39_8C51A73643E77F6D68DF0C9FB66307B7;       // 0x0034   (0x0010)  
	FLinearColor                                       CloudsSecondaryColor_53_DC9F541A4A5DF218D25F3BAEFD108CC9;   // 0x0044   (0x0010)  
	FLinearColor                                       CloudsBackground_40_C26ACFC54FD13F33D88102AE41FC8C47;       // 0x0054   (0x0010)  
	FLinearColor                                       SunColor_41_4127FF7441301541CCC14C97D84E54F5;               // 0x0064   (0x0010)  
	FLinearColor                                       MoonColor_42_A8304BE24B8F8E787E683A8FEA4D486C;              // 0x0074   (0x0010)  
	FLinearColor                                       StarsColor_43_5B3DF4A1431B005F9583B498B90E49FC;             // 0x0084   (0x0010)  
	FLinearColor                                       FogColor_44_3CDDDC604F2BA0AD72A137903A4167F5;               // 0x0094   (0x0010)  
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Data/TOD/TimeOfDayPreset.TimeOfDayPreset_C
/// Size: 0x00A4 (164 bytes) (0x000030 - 0x0000D4) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UTimeOfDayPreset_C : public UObject
{ 
public:
	FTimeOfDayData                                     Data;                                                       // 0x0030   (0x00A4)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Render/RuntimeBP/GI/Data/TOD/TimeOfDayCurves.TimeOfDayCurves
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 pad: 0x0000
struct FTimeOfDayCurves
{ 
	class UCurveLinearColor*                           SkyUpperColorCurve_14_F574B1FF4C660D607018378D4D29D5D8;     // 0x0000   (0x0008)  
	class UCurveLinearColor*                           SkyLowerColorCurve_15_9AE60C56438D767F5189779E892918F6;     // 0x0008   (0x0008)  
	class UCurveLinearColor*                           CloudsUpperColorCurve_16_427730AB4B57918C2621AC9E42481B18;  // 0x0010   (0x0008)  
	class UCurveLinearColor*                           CloudsLowerColorCurve_17_8C51A73643E77F6D68DF0C9FB66307B7;  // 0x0018   (0x0008)  
	class UCurveLinearColor*                           CloudsBackgroundCurve_18_C26ACFC54FD13F33D88102AE41FC8C47;  // 0x0020   (0x0008)  
	class UCurveLinearColor*                           CloudsSecondaryColorCurve_31_EE55225E47F0CD95AF3DED9A93746791; // 0x0028   (0x0008)  
	class UCurveLinearColor*                           SunColorCurve_19_4127FF7441301541CCC14C97D84E54F5;          // 0x0030   (0x0008)  
	class UCurveLinearColor*                           MoonColorCurve_20_A8304BE24B8F8E787E683A8FEA4D486C;         // 0x0038   (0x0008)  
	class UCurveLinearColor*                           StarsColorCurve_22_5B3DF4A1431B005F9583B498B90E49FC;        // 0x0040   (0x0008)  
	class UCurveLinearColor*                           FogColorCurve_26_3CDDDC604F2BA0AD72A137903A4167F5;          // 0x0048   (0x0008)  
};

/// Struct /Game/Aki/Render/RuntimeBP/GI/Data/TOD/PresetChangeInfo.PresetChangeInfo
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 4 pad: 0x0000
struct FPresetChangeInfo
{ 
	bool                                               ReloadSelected_25_165DD8E44AE6D7882C2F5ABE35BF41BA;         // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            Selected_16_785F8D8944070D067940B8B6B53E25FC;               // 0x0004   (0x0004)  
	TEnumAsByte<PresetSelection>                       Mode_17_A4BD793844A78E1A22E2778BB14BE206;                   // 0x0008   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0009   (0x0003)  MISSED
	float                                              TransitionDuration_19_73F6782E4DE8FB03600ECFBBB894BC0B;     // 0x000C   (0x0004)  
	TEnumAsByte<EEasingFunc>                           TransitionFunc_18_88BE11474DF134CA5C3E6190B2940A25;         // 0x0010   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0011   (0x0003)  MISSED
	float                                              ChangeAfterTime_21_BF5A190D458432A5BC9B168EA48AE7ED;        // 0x0014   (0x0004)  
};

/// Class /Game/Aki/Render/RuntimeBP/GI/Skybox/BP_SkyDome.BP_SkyDome_C
/// Size: 0x066C (1644 bytes) (0x0002A8 - 0x000914) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ABP_SkyDome_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class UStaticMeshComponent*                        Dummy;                                                      // 0x02B0   (0x0008)  
	class UStaticMeshComponent*                        SkyMesh;                                                    // 0x02B8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C0   (0x0008)  
	float                                              TimeOfDay;                                                  // 0x02C8   (0x0004)  
	float                                              TimeChangeSpeed;                                            // 0x02CC   (0x0004)  
	float                                              TimeCycleDuration;                                          // 0x02D0   (0x0004)  
	bool                                               UseTimeOfDayCurves;                                         // 0x02D4   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02D5   (0x0003)  MISSED
	FTimeOfDayCurves                                   TimeOfDayCurves;                                            // 0x02D8   (0x0050)  
	TArray<class UClass*>                              WeatherPresetList;                                          // 0x0328   (0x0010)  
	int32_t                                            SelectedWeatherPreset;                                      // 0x0338   (0x0004)  
	TEnumAsByte<PresetSelection>                       WeatherChangeMode;                                          // 0x033C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x033D   (0x0003)  MISSED
	float                                              WeatherChangeDuration;                                      // 0x0340   (0x0004)  
	TEnumAsByte<EEasingFunc>                           WeatherChangeTransition;                                    // 0x0344   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0345   (0x0003)  MISSED
	float                                              WeatherChangeAfterTime;                                     // 0x0348   (0x0004)  
	FTimeOfDayData                                     TimeOfDaySettings;                                          // 0x034C   (0x00A4)  
	TArray<class UClass*>                              TimeOfDayPresetList;                                        // 0x03F0   (0x0010)  
	FPresetChangeInfo                                  TimeOfDayPresetChange;                                      // 0x0400   (0x0018)  
	FRotator                                           MoonDirection;                                              // 0x0418   (0x000C)  
	float                                              SunHeight;                                                  // 0x0424   (0x0004)  
	FWeatherData                                       WeatherSettings;                                            // 0x0428   (0x006C)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0494   (0x0004)  MISSED
	class UMaterialInstanceDynamic*                    SkyMaterialInst;                                            // 0x0498   (0x0008)  
	class UClass*                                      WeatherPresetTarget;                                        // 0x04A0   (0x0008)  
	float                                              WeatherPresetInterp;                                        // 0x04A8   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x04AC   (0x0004)  MISSED
	class UMaterialInstanceConstant*                   SkyMaterial;                                                // 0x04B0   (0x0008)  
	class UMaterialInstanceConstant*                   SkyMaterialNight;                                           // 0x04B8   (0x0008)  
	class ADirectionalLight*                           SunLightSource;                                             // 0x04C0   (0x0008)  
	class ADirectionalLight*                           MoonLightSource;                                            // 0x04C8   (0x0008)  
	class AExponentialHeightFog*                       HeightFog;                                                  // 0x04D0   (0x0008)  
	class ASkyLight*                                   SkyLight;                                                   // 0x04D8   (0x0008)  
	float                                              SkyLightRecaptureDelay;                                     // 0x04E0   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x04E4   (0x0004)  MISSED
	TArray<class UTextureCube*>                        SkyLightStaticCubemaps;                                     // 0x04E8   (0x0010)  
	bool                                               SkyLightCubemapsTimeDriven;                                 // 0x04F8   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x04F9   (0x0003)  MISSED
	float                                              Saturation;                                                 // 0x04FC   (0x0004)  
	float                                              CloudsBloom;                                                // 0x0500   (0x0004)  
	float                                              CloudsFluffy;                                               // 0x0504   (0x0004)  
	float                                              UVHorizonRadius;                                            // 0x0508   (0x0004)  
	float                                              UVHorizonMapping;                                           // 0x050C   (0x0004)  
	float                                              UVScale;                                                    // 0x0510   (0x0004)  
	float                                              FogDirectionalInScattering;                                 // 0x0514   (0x0004)  
	float                                              FogDensity;                                                 // 0x0518   (0x0004)  
	float                                              HorizonTilt;                                                // 0x051C   (0x0004)  
	FLinearColor                                       UVBaseLayerPosition;                                        // 0x0520   (0x0010)  
	FLinearColor                                       UVBaseLayerSize;                                            // 0x0530   (0x0010)  
	FLinearColor                                       UVSecondLayerSize;                                          // 0x0540   (0x0010)  
	FLinearColor                                       UVSecondLayerPosition;                                      // 0x0550   (0x0010)  
	class UTexture*                                    CloudsLayer1;                                               // 0x0560   (0x0008)  
	class UTexture*                                    CloudsLayer2;                                               // 0x0568   (0x0008)  
	FVector2D                                          WindForce;                                                  // 0x0570   (0x0008)  
	float                                              SunRadius;                                                  // 0x0578   (0x0004)  
	float                                              SunShine;                                                   // 0x057C   (0x0004)  
	float                                              SunSaturation;                                              // 0x0580   (0x0004)  
	float                                              SunMaxAltitude;                                             // 0x0584   (0x0004)  
	float                                              SunAzimuth;                                                 // 0x0588   (0x0004)  
	float                                              SunVisibleDuration;                                         // 0x058C   (0x0004)  
	bool                                               SunDirectionTimeOfDay;                                      // 0x0590   (0x0001)  
	unsigned char                                      UnknownData07_6[0x3];                                       // 0x0591   (0x0003)  MISSED
	FRotator                                           SunDirection;                                               // 0x0594   (0x000C)  
	float                                              StarsBrightness;                                            // 0x05A0   (0x0004)  
	unsigned char                                      UnknownData08_6[0x4];                                       // 0x05A4   (0x0004)  MISSED
	class UTexture*                                    MoonTexture;                                                // 0x05A8   (0x0008)  
	float                                              MoonBightness;                                              // 0x05B0   (0x0004)  
	float                                              MoonRadius;                                                 // 0x05B4   (0x0004)  
	float                                              MoonClouds;                                                 // 0x05B8   (0x0004)  
	float                                              MoonShine;                                                  // 0x05BC   (0x0004)  
	float                                              MoonRoll;                                                   // 0x05C0   (0x0004)  
	float                                              MoonVisibleDuration;                                        // 0x05C4   (0x0004)  
	bool                                               MoonSyncedToSun;                                            // 0x05C8   (0x0001)  
	unsigned char                                      UnknownData09_6[0x3];                                       // 0x05C9   (0x0003)  MISSED
	FRotator                                           MoonRotation;                                               // 0x05CC   (0x000C)  
	FWeatherData                                       WeatherFrom;                                                // 0x05D8   (0x006C)  
	FWeatherData                                       WeatherTo;                                                  // 0x0644   (0x006C)  
	FRotator                                           MoonChangeSpeed;                                            // 0x06B0   (0x000C)  
	float                                              WorldRotation;                                              // 0x06BC   (0x0004)  
	float                                              WorldRotationSpeed;                                         // 0x06C0   (0x0004)  
	unsigned char                                      UnknownData10_6[0x4];                                       // 0x06C4   (0x0004)  MISSED
	class UTexture*                                    WorldLayerTexture;                                          // 0x06C8   (0x0008)  
	float                                              WorldLayerFog;                                              // 0x06D0   (0x0004)  
	float                                              WorldLayerDepth;                                            // 0x06D4   (0x0004)  
	FLinearColor                                       WorldLayerColor;                                            // 0x06D8   (0x0010)  
	float                                              SkyLightRecaptureTime;                                      // 0x06E8   (0x0004)  
	float                                              TimeOfDayFrom;                                              // 0x06EC   (0x0004)  
	float                                              TimeOfDayTo;                                                // 0x06F0   (0x0004)  
	float                                              TimeOfDayTransitionDuration;                                // 0x06F4   (0x0004)  
	TEnumAsByte<EEasingFunc>                           TimeOfDayTransition;                                        // 0x06F8   (0x0001)  
	unsigned char                                      UnknownData11_6[0x3];                                       // 0x06F9   (0x0003)  MISSED
	float                                              TimeOfDayInterp;                                            // 0x06FC   (0x0004)  
	class UMaterialInstanceConstant*                   GroundShadowMaterial;                                       // 0x0700   (0x0008)  
	class UMaterialInstanceDynamic*                    GroundShadowMaterialInst;                                   // 0x0708   (0x0008)  
	float                                              GroundShadowScale;                                          // 0x0710   (0x0004)  
	float                                              GroundShadowSoft;                                           // 0x0714   (0x0004)  
	int32_t                                            Version;                                                    // 0x0718   (0x0004)  
	FTimeOfDayData                                     TimeOfDayDataFrom;                                          // 0x071C   (0x00A4)  
	FTimeOfDayData                                     TimeOfDayDataTo;                                            // 0x07C0   (0x00A4)  
	float                                              TimeOfDayPresetInterp;                                      // 0x0864   (0x0004)  
	class UClass*                                      TimeOfDayPresetTarget;                                      // 0x0868   (0x0008)  
	float                                              SkyLightIntensity;                                          // 0x0870   (0x0004)  
	float                                              SkyLightLightning;                                          // 0x0874   (0x0004)  
	bool                                               UseWorldSpaceRotation;                                      // 0x0878   (0x0001)  
	unsigned char                                      UnknownData12_6[0x3];                                       // 0x0879   (0x0003)  MISSED
	int32_t                                            DaysPassedBy;                                               // 0x087C   (0x0004)  
	SDK_UNDEFINED(16,959) /* FMulticastInlineDelegate */ __um(OnWeatherPresetChanged);                             // 0x0880   (0x0010)  
	SDK_UNDEFINED(16,960) /* FMulticastInlineDelegate */ __um(OnTimeOfDayPresetChanged);                           // 0x0890   (0x0010)  
	SDK_UNDEFINED(16,961) /* FMulticastInlineDelegate */ __um(OnHourPassedBy);                                     // 0x08A0   (0x0010)  
	SDK_UNDEFINED(16,962) /* FMulticastInlineDelegate */ __um(OnDayPassedBy);                                      // 0x08B0   (0x0010)  
	float                                              MoonLightLightning;                                         // 0x08C0   (0x0004)  
	float                                              ColorScale;                                                 // 0x08C4   (0x0004)  
	int32_t                                            EngineVersion;                                              // 0x08C8   (0x0004)  
	float                                              Curr_Time_Of_Day;                                           // 0x08CC   (0x0004)  
	float                                              BlueSaturation;                                             // 0x08D0   (0x0004)  
	float                                              SkyShineScale;                                              // 0x08D4   (0x0004)  
	float                                              Total_TODTime;                                              // 0x08D8   (0x0004)  
	bool                                               CloudsMoveWithTOD;                                          // 0x08DC   (0x0001)  
	unsigned char                                      UnknownData13_6[0x3];                                       // 0x08DD   (0x0003)  MISSED
	float                                              CloudsTODTimeScale;                                         // 0x08E0   (0x0004)  
	float                                              Layer1Phase;                                                // 0x08E4   (0x0004)  
	float                                              Layer2Phase;                                                // 0x08E8   (0x0004)  
	float                                              MoonFade;                                                   // 0x08EC   (0x0004)  
	float                                              CloudsBlendScale;                                           // 0x08F0   (0x0004)  
	float                                              SunHardness;                                                // 0x08F4   (0x0004)  
	float                                              SkyLowerFalloff;                                            // 0x08F8   (0x0004)  
	float                                              EclipseLevel;                                               // 0x08FC   (0x0004)  
	float                                              EclipseOffset;                                              // 0x0900   (0x0004)  
	float                                              EclipseAngle;                                               // 0x0904   (0x0004)  
	float                                              EclipseHardness;                                            // 0x0908   (0x0004)  
	bool                                               bUseNightMtl;                                               // 0x090C   (0x0001)  
	unsigned char                                      UnknownData14_6[0x3];                                       // 0x090D   (0x0003)  MISSED
	float                                              UseFlowmapSkybox;                                           // 0x0910   (0x0004)  
	// void ExecuteUbergraph_BP_SkyDome(int32_t EntryPoint);                                                                    // [0x25a7960] Final                
	// void OnDayPassedBy__DelegateSignature(int32_t Day);                                                                      // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void OnHourPassedBy__DelegateSignature(int32_t Hour);                                                                    // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void OnTimeOfDayPresetChanged__DelegateSignature(class UClass* Preset, float TransitionDuraion);                         // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void OnWeatherPresetChanged__DelegateSignature(class UClass* Preset, float TransitionDuration);                          // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Struct /Game/Aki/Render/RuntimeBP/GI/NewCloud/BP/SCloudParameters.SCloudParameters
/// Size: 0x00C8 (200 bytes) (0x000000 - 0x0000C8) align 8 pad: 0x0000
struct FSCloudParameters
{ 
	class UTexture*                                    Mask_8_F15855E04FF4BB57CD47D4BD2E0389B4;                    // 0x0000   (0x0008)  
	bool                                               YesUV1NoUV2_24_9EAB91FF46BBE03FC4916C8044566733;            // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            UVTiling_27_CA2827D746C96BC6C5BD3BAF6F84F90D;               // 0x000C   (0x0004)  
	float                                              CloudAngle_11_A4A0E29A4273FD2FC96B80BF46207982;             // 0x0010   (0x0004)  
	float                                              CloudSpeed_66_BEAF97D341EED8F6BCA62993218B6EBF;             // 0x0014   (0x0004)  
	bool                                               CloudRotation_74_073D936140252C61167ABABF2EB420F3;          // 0x0018   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0019   (0x0007)  MISSED
	class UTexture*                                    NoiseMap_81_111842B746A717F706DAFE9282DB74E0;               // 0x0020   (0x0008)  
	float                                              NoiseSpeed_77_F8E4B503421091B3D69660ADDD820B7A;             // 0x0028   (0x0004)  
	float                                              NoiseStrength_84_2085AC85465A4E4C896A7A8A944AE088;          // 0x002C   (0x0004)  
	float                                              NoiseTilling_86_250028C642C8358B5366C7B001F1845B;           // 0x0030   (0x0004)  
	bool                                               SDF__98_FF0615434C8BB1E4D024B1890722FDE0;                   // 0x0034   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0035   (0x0003)  MISSED
	FKuroCurveFloat                                    SDFTime_101_C436D6E344106E77F486C29C910E4148;               // 0x0038   (0x0090)  
};

/// Struct /Game/Aki/Render/RuntimeBP/GI/NewCloud/BP/SCloudCover.SCloudCover
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 8 pad: 0x0000
struct FSCloudCover
{ 
	class UMaterialInterface*                          CoverMaterial_5_2342ED874AB1269370653CBA828D8872;           // 0x0000   (0x0008)  
};

/// Struct /Game/Aki/Render/RuntimeBP/GI/NewCloud/BP/SPOICloudParameters.SPOICloudParameters
/// Size: 0x0041 (65 bytes) (0x000000 - 0x000041) align 8 pad: 0x0001
#pragma pack(push, 0x1)
struct FSPOICloudParameters
{ 
	class UTexture*                                    Mask_8_F15855E04FF4BB57CD47D4BD2E0389B4;                    // 0x0000   (0x0008)  
	bool                                               YesUV1NoUV2_24_9EAB91FF46BBE03FC4916C8044566733;            // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            UVTiling_27_CA2827D746C96BC6C5BD3BAF6F84F90D;               // 0x000C   (0x0004)  
	float                                              CloudAngle_11_A4A0E29A4273FD2FC96B80BF46207982;             // 0x0010   (0x0004)  
	float                                              CloudSpeed_66_BEAF97D341EED8F6BCA62993218B6EBF;             // 0x0014   (0x0004)  
	bool                                               CloudRotation_74_073D936140252C61167ABABF2EB420F3;          // 0x0018   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0019   (0x0007)  MISSED
	class UTexture*                                    NoiseMap_81_111842B746A717F706DAFE9282DB74E0;               // 0x0020   (0x0008)  
	float                                              NoiseSpeed_77_F8E4B503421091B3D69660ADDD820B7A;             // 0x0028   (0x0004)  
	float                                              NoiseStrength_84_2085AC85465A4E4C896A7A8A944AE088;          // 0x002C   (0x0004)  
	float                                              NoiseTilling_86_250028C642C8358B5366C7B001F1845B;           // 0x0030   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0034   (0x0004)  MISSED
	class UStaticMesh*                                 Mesh_104_179F0F1948B1CDAC0E6F08945374623E;                  // 0x0038   (0x0008)  
	bool                                               SDF__106_65FB5C8047611BF527CC84B5E47F667A;                  // 0x0040   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Render/RuntimeBP/GI/NewCloud/BP/SMountainParameters.SMountainParameters
/// Size: 0x0001 (1 bytes) (0x000000 - 0x000001) align 1 pad: 0x0000
struct FSMountainParameters
{ 
	bool                                               HasMountain_26_EBAAF41A42DC7A7B2B9A20AF09B060D5;            // 0x0000   (0x0001)  
};

/// Struct /Game/Aki/Render/RuntimeBP/GI/NewCloud/BP/SAnomaliesParameters.SAnomaliesParameters
/// Size: 0x0038 (56 bytes) (0x000000 - 0x000038) align 8 pad: 0x0000
struct FSAnomaliesParameters
{ 
	class UTexture*                                    Color_7_EBAAF41A42DC7A7B2B9A20AF09B060D5;                   // 0x0000   (0x0008)  
	float                                              CloudAngle_11_A4A0E29A4273FD2FC96B80BF46207982;             // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UTexture*                                    NoiseMap_67_8F8087DD4B77E14B5CAC989129EC6903;               // 0x0010   (0x0008)  
	float                                              NoiseSpeed_70_E70E129C4258256659962AB15F6407EF;             // 0x0018   (0x0004)  
	float                                              NoiseStrength_72_2F0856124FA4AF6F618586ACF0DBF1D3;          // 0x001C   (0x0004)  
	float                                              NoiseTilling_74_759C116A41650EECA98634A1CABEC395;           // 0x0020   (0x0004)  
	float                                              luminance_59_6A5B888449289A5F956608B60446197A;              // 0x0024   (0x0004)  
	bool                                               Rotation_61_A37EFA55431B77B53AA73B90574A7DD8;               // 0x0028   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0029   (0x0007)  MISSED
	class UStaticMesh*                                 Mesh_64_5A3F88FA4600004653ED5D959E1C58FA;                   // 0x0030   (0x0008)  
};

/// Class /Game/Aki/Render/RuntimeBP/GI/NewCloud/BP/PD_CloudPrefab.PD_CloudPrefab_C
/// Size: 0x0160 (352 bytes) (0x000038 - 0x000198) align 8 pad: 0x0000
class UPD_CloudPrefab_C : public UPrimaryDataAsset
{ 
public:
	class UClass*                                      PrefebBP;                                                   // 0x0038   (0x0008)  
	FSCloudParameters                                  CloudTop;                                                   // 0x0040   (0x00C8)  
	FSCloudCover                                       CloudCover;                                                 // 0x0108   (0x0008)  
	FSPOICloudParameters                               CloudBigShape;                                              // 0x0110   (0x0048)  
	FSMountainParameters                               Mountain;                                                   // 0x0158   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0159   (0x0007)  MISSED
	FSAnomaliesParameters                              CloudAnomalies;                                             // 0x0160   (0x0038)  
};

/// Class /Game/Aki/Render/RuntimeBP/GI/NewCloud/BP/BP_CloudPrefab.BP_CloudPrefab_C
/// Size: 0x00FC (252 bytes) (0x0002B8 - 0x0003B4) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ABP_CloudPrefab_C : public AKuroEditorTickActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B8   (0x0008)  
	class UStaticMeshComponent*                        Mountain;                                                   // 0x02C0   (0x0008)  
	class UStaticMeshComponent*                        Cloud_BigShape;                                             // 0x02C8   (0x0008)  
	class UStaticMeshComponent*                        Cloud_Cover;                                                // 0x02D0   (0x0008)  
	class UStaticMeshComponent*                        Cloud_Top;                                                  // 0x02D8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02E0   (0x0008)  
	class UTexture*                                    CloudColorMap;                                              // 0x02E8   (0x0008)  
	class UTexture*                                    CloudMaskMap;                                               // 0x02F0   (0x0008)  
	float                                              ChangeSpeed;                                                // 0x02F8   (0x0004)  
	float                                              CloudRotateSpeed;                                           // 0x02FC   (0x0004)  
	float                                              Time;                                                       // 0x0300   (0x0004)  
	bool                                               change;                                                     // 0x0304   (0x0001)  
	bool                                               Stop;                                                       // 0x0305   (0x0001)  
	bool                                               Farward;                                                    // 0x0306   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x0307   (0x0001)  MISSED
	TArray<class UMaterialInstanceDynamic*>            DMI;                                                        // 0x0308   (0x0010)  
	float                                              Delta_Seconds;                                              // 0x0318   (0x0004)  
	bool                                               TimerInit;                                                  // 0x031C   (0x0001)  
	bool                                               ColoredCloud_;                                              // 0x031D   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x031E   (0x0002)  MISSED
	float                                              CloudSaturation;                                            // 0x0320   (0x0004)  
	float                                              C;                                                          // 0x0324   (0x0004)  
	class UMaterialInstanceDynamic*                    DMI_Top;                                                    // 0x0328   (0x0008)  
	class UMaterialInstanceDynamic*                    DMI_Cover;                                                  // 0x0330   (0x0008)  
	class UMaterialInstanceDynamic*                    DMI_Anomalies;                                              // 0x0338   (0x0008)  
	class UMaterialInstanceDynamic*                    DMI_BigShape;                                               // 0x0340   (0x0008)  
	class UMaterialInstanceDynamic*                    DMI_Mountain;                                               // 0x0348   (0x0008)  
	float                                              CloudInitialZAngle;                                         // 0x0350   (0x0004)  
	bool                                               UpdatePerFourFrame01;                                       // 0x0354   (0x0001)  
	bool                                               UpdatePerFourFrame02;                                       // 0x0355   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x0356   (0x0002)  MISSED
	class UPD_CloudPrefab_C*                           CloudPrefeb;                                                // 0x0358   (0x0008)  
	bool                                               SetCoverMaterial;                                           // 0x0360   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0361   (0x0007)  MISSED
	class UMaterialInterface*                          Cloud_Cover_Material;                                       // 0x0368   (0x0008)  
	int32_t                                            TransSortNumber;                                            // 0x0370   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x0374   (0x0004)  MISSED
	TArray<class UStaticMeshComponent*>                MeshArray;                                                  // 0x0378   (0x0010)  
	TArray<class UMaterialInstanceDynamic*>            DMIArray;                                                   // 0x0388   (0x0010)  
	float                                              Random;                                                     // 0x0398   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x039C   (0x0004)  MISSED
	TArray<int32_t>                                    Trans;                                                      // 0x03A0   (0x0010)  
	float                                              SDFTime;                                                    // 0x03B0   (0x0004)  
	// void SinglePOICloudParametersInitial(class UMaterialInstanceDynamic* DMI, class UStaticMeshComponent* Mesh, FSPOICloudParameters CloudStructParameter, int32_t TransSortNumber); // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void SetGIParams(FSGIData GIParams);                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SingleBuildingParametersInitial(class UMaterialInstanceDynamic* DMI, class UStaticMeshComponent* Mesh, FSAnomaliesParameters CloudStructParameter, int32_t TransSortNumber); // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdatePerFourFrame();                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void CreateDMI(class UStaticMeshComponent* Mesh, class UMaterialInstanceDynamic*& DMI);                                  // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SingleCloudParametersInitial(class UMaterialInstanceDynamic* DMI, class UStaticMeshComponent* Mesh, FSCloudParameters CloudStructParameter, int32_t TransSortNumber); // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void CloudInitial();                                                                                                     // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void Timer(bool Forward, float DeltaTime, float Speed, float& Time, bool& Stop);                                         // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AddCloudRotation();                                                                                                 // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void Hidden();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Active();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_BP_CloudPrefab(int32_t EntryPoint);                                                                // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/GI/NewCloud/Prefab/BP_Cloud_None.BP_Cloud_None_C
/// Size: 0x000C (12 bytes) (0x0003B4 - 0x0003C0) align 8 pad: 0x0000
class ABP_Cloud_None_C : public ABP_CloudPrefab_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x03B4   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x03B8   (0x0008)  
	// void Hidden();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Active();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_Cloud_None(int32_t EntryPoint);                                                                 // [0x25a7960] Final                
};

/// Class /Game/Aki/Render/RuntimeBP/Scene/LensFlare/PDA_ModelLensFlareConfig.PDA_ModelLensFlareConfig_C
/// Size: 0x0000 (0 bytes) (0x000068 - 0x000068) align 8 pad: 0x0000
class UPDA_ModelLensFlareConfig_C : public USunLensFlareConfig
{ 
public:
};

/// Class /Game/Aki/HotPatch/TsHotFixActionHandle.TsHotFixActionHandle_C
/// Size: 0x0070 (112 bytes) (0x000030 - 0x0000A0) align 8 pad: 0x0000
class UTsHotFixActionHandle_C : public UObject
{ 
public:
	FName                                              FuncName;                                                   // 0x0030   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x003C   (0x0004)  MISSED
	class UObject*                                     _v;                                                         // 0x0040   (0x0008)  
	FString                                            ActionName;                                                 // 0x0048   (0x0010)  
	bool                                               bPress;                                                     // 0x0058   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0059   (0x0007)  MISSED
	SDK_UNDEFINED(16,963) /* FMulticastInlineDelegate */ __um(OnPressActionCallback);                              // 0x0060   (0x0010)  
	TEnumAsByte<ETouchIndex>                           TouchIndex;                                                 // 0x0070   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0071   (0x0003)  MISSED
	FVector                                            TouchPosition;                                              // 0x0074   (0x000C)  
	SDK_UNDEFINED(16,964) /* FMulticastInlineDelegate */ __um(OnTouchActionCallback);                              // 0x0080   (0x0010)  
	SDK_UNDEFINED(16,965) /* FMulticastInlineDelegate */ __um(OnTouchMovedActionCallback);                         // 0x0090   (0x0010)  
	// void AddTouchMoveBinding(class ABasePlayerController* Controller);                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnTouchMoveAction(TEnumAsByte<ETouchIndex> TouchIndex, FVector Position);                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ClearActionBinding(class ABasePlayerController* Controller);                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnTouchReleaseAction(TEnumAsByte<ETouchIndex> TouchIndex, FVector Position);                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnTouchPressAction(TEnumAsByte<ETouchIndex> TouchIndex, FVector Position);                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AddTouchReleaseBinding(class ABasePlayerController* Controller);                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AddTouchPressBinding(class ABasePlayerController* Controller);                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AddReleaseBinding(FString ActionName, class ABasePlayerController* Controller);                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AddPressBinding(FString ActionName, class ABasePlayerController* Controller);                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnReleaseAction();                                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnPressAction();                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnTouchMovedActionCallback__DelegateSignature();                                                                    // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void OnTouchActionCallback__DelegateSignature();                                                                         // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void OnPressActionCallback__DelegateSignature();                                                                         // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Ui/LguiEventSystem/TsLguiEventSystemActor.TsLguiEventSystemActor_C
/// Size: 0x0021 (33 bytes) (0x0002B0 - 0x0002D1) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class ATsLguiEventSystemActor_C : public ALGUIEventSystemActor
{ 
public:
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	class ULGUI_TouchInputModule*                      TouchInputModule;                                           // 0x02B8   (0x0008)  
	class ULGUI_StandaloneInputModule*                 StandaloneInputModule;                                      // 0x02C0   (0x0008)  
	class ULGUI_PointerInputModule*                    currentInputModule;                                         // 0x02C8   (0x0008)  
	bool                                               NavigationEnable;                                           // 0x02D0   (0x0001)  
	// bool IsPointerEventDataLineTrace(class ULGUIPointerEventData* pointerEventData);                                         // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class ULGUIPointerEventData* GetPointerEventData(float PointerId, bool CreateIfNotExist);                                // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class UUIItem* GetNowHitComponent();                                                                                     // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void InputTouchMove(int32_t TouchID, FVector TouchPointPosition);                                                        // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void InputTouchTrigger(bool TouchPress, int32_t TouchID, FVector TouchPointPosition);                                    // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void InputScroll(float AxisValue);                                                                                       // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void InputTriggerForNavigation(bool triggerPress);                                                                       // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void InputNavigation(ELGUINavigationDirection Direction, bool pressOrRelease, bool forceNavigation);                     // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void InputTrigger(bool triggerPress, EMouseButtonType mouseButtonType);                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/NewWorld/Character/Common/Blueprint/Component/TsCharacterDebugComponent.TsCharacterDebugComponent_C
/// Size: 0x0054 (84 bytes) (0x0000C0 - 0x000114) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UTsCharacterDebugComponent_C : public UActorComponent
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00C0   (0x0008)  
	float                                              MaxFixSpeed;                                                // 0x00C8   (0x0004)  
	bool                                               StaticInit;                                                 // 0x00CC   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x00CD   (0x0003)  MISSED
	int32_t                                            StaticAttrId;                                               // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00D4   (0x0004)  MISSED
	FString                                            StaticAiId;                                                 // 0x00D8   (0x0010)  
	float                                              TestRiseSpeed;                                              // 0x00E8   (0x0004)  
	TEnumAsByte<EDrawDebugTrace>                       EnterClimbTrace;                                            // 0x00EC   (0x0001)  
	TEnumAsByte<EDrawDebugTrace>                       UpArriveClimbTrace;                                         // 0x00ED   (0x0001)  
	TEnumAsByte<EDrawDebugTrace>                       VaultClimbTrace;                                            // 0x00EE   (0x0001)  
	TEnumAsByte<EDrawDebugTrace>                       ClimbingTrace;                                              // 0x00EF   (0x0001)  
	class UBehaviorTree*                               BehaviorTree;                                               // 0x00F0   (0x0008)  
	class AActor*                                      PatrolSpline;                                               // 0x00F8   (0x0008)  
	int32_t                                            DebugEntityId;                                              // 0x0100   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0104   (0x0004)  MISSED
	int64_t                                            DebugCreatureId;                                            // 0x0108   (0x0008)  
	int32_t                                            DebugInteractCount;                                         // 0x0110   (0x0004)  
	// void AiDebugDraw();                                                                                                      // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetMovementDebug(bool newDebug);                                                                                    // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void DrawErrorNavigationPaths();                                                                                         // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void DrawDebugPatrolPoints();                                                                                            // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetDebugRiseEnable(bool Enable);                                                                                    // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ChangeClimbingTrace();                                                                                              // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ChangeUpArriveClimbTrace();                                                                                         // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ChangeVaultClimbTrace();                                                                                            // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ChangeEnterClimbTrace();                                                                                            // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ChangeNoTop();                                                                                                      // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void DebugDrawActivateArea();                                                                                            // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ActivateDebugSpeed(bool Activate);                                                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsCharacterDebugComponent(int32_t EntryPoint);                                                     // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Core/Fight/BulletLogicType.BulletLogicType_C
/// Size: 0x0052 (82 bytes) (0x000038 - 0x00008A) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class UBulletLogicType_C : public UPrimaryDataAsset
{ 
public:
	bool                                               _kpe_N0;                                                    // 0x0038   (0x0001)  
	bool                                               _f_T_S_N__;                                                 // 0x0039   (0x0001)  
	bool                                               _f_T_S_N;                                                   // 0x003A   (0x0001)  
	bool                                               _f_T_S_N0;                                                  // 0x003B   (0x0001)  
	FName                                              P_9__x;                                                     // 0x003C   (0x000C)  
	bool                                               P_9__x_d;                                                   // 0x0048   (0x0001)  
	bool                                               P_9__x_d1;                                                  // 0x0049   (0x0001)  
	TEnumAsByte<EBulletType>                           P_9_;                                                       // 0x004A   (0x0001)  
	TEnumAsByte<EBulletHitDirectionType>               P_9__S_Q__;                                                 // 0x004B   (0x0001)  
	int32_t                                            _9__S;                                                      // 0x004C   (0x0004)  
	bool                                               null;                                                       // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0051   (0x0007)  MISSED
	FGameplayTagContainer                              ____;                                                       // 0x0058   (0x0020)  
	FString                                            _S_x_d;                                                     // 0x0078   (0x0010)  
	bool                                               __eu;                                                       // 0x0088   (0x0001)  
	bool                                               _Q_Q_;                                                      // 0x0089   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Character/MaterialController/PD_CharacterControllerDataGroup.PD_CharacterControllerDataGroup_C
/// Size: 0x0052 (82 bytes) (0x000038 - 0x00008A) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class UPD_CharacterControllerDataGroup_C : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(80,966) /* TMap<UPD_CharacterControllerData_C*, float> */ __um(DataMap);                         // 0x0038   (0x0050)  
	bool                                               IgnoreTimeDilation;                                         // 0x0088   (0x0001)  
	bool                                               CleanOriginEffect;                                          // 0x0089   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/UiNavigation/Struct/SNavigationMode.SNavigationMode
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 8 pad: 0x0000
struct FSNavigationMode
{ 
	EUISelectableNavigationMode                        TopMode_2_2A60C94C4E76BE5EC2CA1D9876EEA5BD;                 // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	class AActor*                                      TopActor_11_F014E9604A3BBA1A18D8F9B4878908F3;               // 0x0008   (0x0008)  
	EUISelectableNavigationMode                        DownMode_12_9079FFBB4814018672326CA3579523AC;               // 0x0010   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	class AActor*                                      DownActor_20_BDC3E88F4E320FECAB94BC87ECB5877B;              // 0x0018   (0x0008)  
	EUISelectableNavigationMode                        LeftMode_14_7CC7881F4F8F479A7574C5BAE4DAB485;               // 0x0020   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0021   (0x0007)  MISSED
	class AActor*                                      LeftActor_19_F6DEAD7F49C30ADE27054AA68DCD1D3B;              // 0x0028   (0x0008)  
	EUISelectableNavigationMode                        RightMode_16_960EF9BB4D316370DCEAB3A0981EF05F;              // 0x0030   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0031   (0x0007)  MISSED
	class AActor*                                      RightActor_18_33C083EF4D84464594266BBA39C41413;             // 0x0038   (0x0008)  
};

/// Struct /Game/Aki/Data/UiNavigation/Struct/SNavigationCursor.SNavigationCursor
/// Size: 0x0009 (9 bytes) (0x000000 - 0x000009) align 4 pad: 0x0001
#pragma pack(push, 0x1)
struct FSNavigationCursor
{ 
	TEnumAsByte<ECursorOffsetType>                     OffsetType_7_E9376C9F46DC5DE301F4CFBC50EF945A;              // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            BoundOffset_9_CB362485407CBDA2C3E910AC8F4583E4;             // 0x0004   (0x0004)  
	bool                                               Switch_12_48B8E4EB4D500E99B2A67E8110F9A938;                 // 0x0008   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Module/UiNavigation/New/TsUiNavigationBehaviorListener.TsUiNavigationBehaviorListener_C
/// Size: 0x0168 (360 bytes) (0x0000F0 - 0x000258) align 8 pad: 0x0000
class UTsUiNavigationBehaviorListener_C : public UUINavigationBehaviour
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00F0   (0x0008)  
	FString                                            GroupName;                                                  // 0x00F8   (0x0010)  
	class AActor*                                      LayoutActor;                                                // 0x0108   (0x0008)  
	TArray<FString>                                    TagArray;                                                   // 0x0110   (0x0010)  
	TArray<int32_t>                                    ShieldHotKeyIndexArray;                                     // 0x0120   (0x0010)  
	class AActor*                                      ScrollViewActor;                                            // 0x0130   (0x0008)  
	SDK_UNDEFINED(80,967) /* TMap<TEnumAsByte<EHotKeyNameStateType>, FString> */ __um(HotKeyTipsTextIdMap);        // 0x0138   (0x0050)  
	class AActor*                                      InsideGroupActor;                                           // 0x0188   (0x0008)  
	FVector2D                                          ClickPivot;                                                 // 0x0190   (0x0008)  
	FSNavigationMode                                   NavigationMode;                                             // 0x0198   (0x0040)  
	FSNavigationCursor                                 Cursor;                                                     // 0x01D8   (0x000C)  
	float                                              ScrollbarIndex;                                             // 0x01E4   (0x0004)  
	FString                                            InteractiveTag;                                             // 0x01E8   (0x0010)  
	FString                                            DynamicTag;                                                 // 0x01F8   (0x0010)  
	SDK_UNDEFINED(80,968) /* TMap<FString, AActor*> */ __um(InsideActorMap);                                       // 0x0208   (0x0050)  
	// bool OnCheckLoopScrollChangeNavigationBP();                                                                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool OnCheckCanSetNavigationBP();                                                                                        // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AwakeBP();                                                                                                          // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnDestroyBP();                                                                                                      // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnNotifyInteractiveBP();                                                                                            // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnNotifyNotInteractiveBP();                                                                                         // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnNotifyNavigationEnterBP(class ULGUIPointerEventData* eventData);                                                  // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnNotifyNavigationSelectBP(class ULGUIPointerEventData* eventData);                                                 // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void StartBP();                                                                                                          // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnEnableBP();                                                                                                       // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnDisableBP();                                                                                                      // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsUiNavigationBehaviorListener(int32_t EntryPoint);                                                // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Data/Camera/BP_CameraShakeAndForceFeedback.BP_CameraShakeAndForceFeedback_C
/// Size: 0x0008 (8 bytes) (0x0001B0 - 0x0001B8) align 16 pad: 0x0008
#pragma pack(push, 0x1)
class UBP_CameraShakeAndForceFeedback_C : public UKuroCameraShake
{ 
public:
	class UKuroForceFeedbackEffect*                    ForceFeedbackEffect;                                        // 0x01B0   (0x0008)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Effect/TsEffectFunctionLibrary.TsEffectFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UTsEffectFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// void SetEffectIgnoreVisibilityOptimize(int32_t Handle, bool ignore, class UObject* __WorldContext);                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int32_t SpawnEffectUI(class UObject* WorldContext, class UObject* callObject, FString Path, FTransform Transform, FString reason, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetEffectHiddenInGame(int32_t handle1, bool value1, class UObject* __WorldContext);                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AttachEffectActorToActor(int32_t Handle, class AActor* Parent, FName SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetEffectParameterNiagara(int32_t Handle, TArray<FSEffectFloatParameter>& userParameterFloat, TArray<FSEffectColorParameter>& userParameterColor, TArray<FSEffectVectorParameter>& userParameterVector, TArray<FSEffectFloatParameter>& materialParameterFloat, TArray<FSEffectColorParameter>& materialParameterColor, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetEffectActorRelativeLocation(int32_t Handle, FVector NewRelativeLocation, bool bSweep, bool bTeleport, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AttachEffectActorToComponent(int32_t Handle, class USceneComponent* Parent, FName SocketName, EAttachmentRule LocationRule, EAttachmentRule RotationRule, EAttachmentRule ScaleRule, bool bWeldSimulatedBodies, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool EffectHandleIsValid(int32_t Handle, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool StopEffect(int32_t Handle, class UObject* callObject, FString reason, bool Immediately, bool DestroyActor, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t SpawnEffectWithActor(class UObject* WorldContext, class UObject* callObject, class AActor* EffectActor, FString Path, FString reason, TEnumAsByte<EEffectPlay> PlayType, TEnumAsByte<EEffectType> EffectType, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t SpawnEffect(class UObject* WorldContext, class UObject* callObject, FString Path, FTransform Transform, FString reason, TEnumAsByte<EEffectPlay> PlayType, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class AActor* GetEffectActor(int32_t Handle, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool PlayEffect(int32_t Handle, class UObject* callObject, FString reason, class UObject* __WorldContext);               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EditorTickHandle(int32_t Handle, float Delta, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void InitializeWithPreview(bool Refresh, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Render/RuntimeBP/Character/Components/PD_MaterialDebug.PD_MaterialDebug_C
/// Size: 0x0140 (320 bytes) (0x000038 - 0x000178) align 8 pad: 0x0000
class UPD_MaterialDebug_C : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(80,969) /* TMap<int32_t, FString> */ __um(MaterialControllerList);                               // 0x0038   (0x0050)  
	SDK_UNDEFINED(80,970) /* TMap<FString, FSMaterialDebugInfo> */ __um(Body);                                     // 0x0088   (0x0050)  
	SDK_UNDEFINED(80,971) /* TMap<FString, FSMaterialDebugInfo> */ __um(Weapon);                                   // 0x00D8   (0x0050)  
	SDK_UNDEFINED(80,972) /* TMap<FString, FSMaterialDebugInfo> */ __um(Hulu);                                     // 0x0128   (0x0050)  
};

/// Class /Game/Aki/Render/RuntimeBP/Effect/BPI_EffectInterface.BPI_EffectInterface_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPI_EffectInterface_C : public UInterface
{ 
public:
	// void RemoveHandle();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetHandle(int32_t Handle);                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void GetHandle(int32_t& Handle);                                                                                         // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/Data/EffectModelGroup.EffectModelGroup_C
/// Size: 0x0548 (1352 bytes) (0x000058 - 0x0005A0) align 8 pad: 0x0000
class UEffectModelGroup_C : public UEffectModelBase
{ 
public:
	SDK_UNDEFINED(80,973) /* TMap<UEffectModelBase*, float> */ __um(EffectData);                                   // 0x0058   (0x0050)  
	FKuroCurveVector                                   Location;                                                   // 0x00A8   (0x01A8)  
	FKuroCurveVector                                   Rotation;                                                   // 0x0250   (0x01A8)  
	FKuroCurveVector                                   Scale;                                                      // 0x03F8   (0x01A8)  
};

/// Class /Game/Aki/Core/Fight/BulletCampType.BulletCampType_C
/// Size: 0x0004 (4 bytes) (0x000038 - 0x00003C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBulletCampType_C : public UPrimaryDataAsset
{ 
public:
	int32_t                                            _5_;                                                        // 0x0038   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Render/RuntimeBP/Interaction/SKuroInteractionLimbsConfig.SKuroInteractionLimbsConfig
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 8 pad: 0x0000
struct FSKuroInteractionLimbsConfig
{ 
	FName                                              _c_i_TW__;                                                  // 0x0000   (0x000C)  
	FVector                                            _v__MOn__;                                                  // 0x000C   (0x000C)  
	float                                              JS___;                                                      // 0x0018   (0x0004)  
	float                                              JS___0;                                                     // 0x001C   (0x0004)  
	FSoftObjectPath                                    _N_NM_n__;                                                  // 0x0020   (0x0020)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Effect/WaterInteraction/SWaterEffectObject.SWaterEffectObject
/// Size: 0x00AC (172 bytes) (0x000000 - 0x0000AC) align 16 pad: 0x000C
#pragma pack(push, 0x1)
struct FSWaterEffectObject
{ 
	float                                              Radius_22_17F3D6B6442F4CA6C4EDAF9D624C7497;                 // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0xC];                                       // 0x0004   (0x000C)  MISSED
	FTransform                                         Transform_23_6C11AE9A4E3937F99FA86A8FB8A8A129;              // 0x0010   (0x0030)  
	SDK_UNDEFINED(48,974) /* TWeakObjectPtr<UEffectModelBase*> */ __um(Effect_57_4E5CF9D8490C25797E8CC0BFCEE5D983); // 0x0040   (0x0030)  
	bool                                               TriggerOnce_31_5812DF7046286E7C0528CBA4CD21A810;            // 0x0070   (0x0001)  
	bool                                               EnableSurfaceEffect_42_51D905A341688290E799958E968DF25F;    // 0x0071   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x0072   (0x0006)  MISSED
	SDK_UNDEFINED(48,975) /* TWeakObjectPtr<UEffectModelBase*> */ __um(WaterSurfaceEffect_58_9B115E3B49603AA9550967AA55544EAA); // 0x0078   (0x0030)  
	float                                              TimeAfterSurfaceEffectStop_56_05E050574AF588AEF44FDC80738DD506; // 0x00A8   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Core/Fight/BulletSceneInteraction.BulletSceneInteraction_C
/// Size: 0x00F8 (248 bytes) (0x000038 - 0x000130) align 16 pad: 0x0000
class UBulletSceneInteraction_C : public UPrimaryDataAsset
{ 
public:
	FSKuroInteractionLimbsConfig                       WaterInteraction;                                           // 0x0038   (0x0040)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0078   (0x0008)  MISSED
	FSWaterEffectObject                                WaterEffect;                                                // 0x0080   (0x00B0)  
};

/// Class /Game/Aki/CreatureTools/BPI_CreatureInterface.BPI_CreatureInterface_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPI_CreatureInterface_C : public UInterface
{ 
public:
	// int32_t GetEntityId();                                                                                                   // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_TaskMontage.BP_SM_TaskMontage_C
/// Size: 0x0018 (24 bytes) (0x000030 - 0x000048) align 8 pad: 0x0000
class UBP_SM_TaskMontage_C : public UASMTask
{ 
public:
	FString                                            MontageName;                                                // 0x0030   (0x0010)  
	bool                                               _R___g__;                                                   // 0x0040   (0x0001)  
	bool                                               AQ__;                                                       // 0x0041   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0042   (0x0002)  MISSED
	int32_t                                            BlendInTime;                                                // 0x0044   (0x0004)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStateTag.BP_SM_BindStateTag_C
/// Size: 0x000C (12 bytes) (0x000030 - 0x00003C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_SM_BindStateTag_C : public UASMBindState
{ 
public:
	FGameplayTag                                       Tag;                                                        // 0x0030   (0x000C)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_TaskRandomMontage.BP_SM_TaskRandomMontage_C
/// Size: 0x0018 (24 bytes) (0x000030 - 0x000048) align 8 pad: 0x0000
class UBP_SM_TaskRandomMontage_C : public UASMTask
{ 
public:
	TArray<FString>                                    MontageNames;                                               // 0x0030   (0x0010)  
	bool                                               _R___g__;                                                   // 0x0040   (0x0001)  
	bool                                               AQ__;                                                       // 0x0041   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0042   (0x0002)  MISSED
	int32_t                                            BlendInTime;                                                // 0x0044   (0x0004)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStateBuff.BP_SM_BindStateBuff_C
/// Size: 0x0008 (8 bytes) (0x000030 - 0x000038) align 8 pad: 0x0000
class UBP_SM_BindStateBuff_C : public UASMBindState
{ 
public:
	int64_t                                            BuffID;                                                     // 0x0030   (0x0008)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_TaskSkillByName.BP_SM_TaskSkillByName_C
/// Size: 0x0011 (17 bytes) (0x000030 - 0x000041) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UBP_SM_TaskSkillByName_C : public UASMTask
{ 
public:
	FString                                            SkillName;                                                  // 0x0030   (0x0010)  
	bool                                               AQ__;                                                       // 0x0040   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStateBoneCollision.BP_SM_BindStateBoneCollision_C
/// Size: 0x0016 (22 bytes) (0x000030 - 0x000046) align 8 pad: 0x0006
#pragma pack(push, 0x1)
class UBP_SM_BindStateBoneCollision_C : public UASMBindState
{ 
public:
	FString                                            ___;                                                        // 0x0030   (0x0010)  
	bool                                               ___c;                                                       // 0x0040   (0x0001)  
	bool                                               ___c0;                                                      // 0x0041   (0x0001)  
	bool                                               ___c1;                                                      // 0x0042   (0x0001)  
	bool                                               null;                                                       // 0x0043   (0x0001)  
	bool                                               null2;                                                      // 0x0044   (0x0001)  
	bool                                               null3;                                                      // 0x0045   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStateMeshVisible.BP_SM_BindStateMeshVisible_C
/// Size: 0x0012 (18 bytes) (0x000030 - 0x000042) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class UBP_SM_BindStateMeshVisible_C : public UASMBindState
{ 
public:
	FString                                            Tag;                                                        // 0x0030   (0x0010)  
	bool                                               _f;                                                         // 0x0040   (0x0001)  
	bool                                               _S_T_b_;                                                    // 0x0041   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStateDisableCollision.BP_SM_BindStateDisableCollision_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBP_SM_BindStateDisableCollision_C : public UASMBindState
{ 
public:
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStateCollisionChannel.BP_SM_BindStateCollisionChannel_C
/// Size: 0x0010 (16 bytes) (0x000030 - 0x000040) align 8 pad: 0x0000
class UBP_SM_BindStateCollisionChannel_C : public UASMBindState
{ 
public:
	SDK_UNDEFINED(16,976) /* TArray<TEnumAsByte<ECollisionChannel>> */ __um(IgnoreChannels);                       // 0x0030   (0x0010)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStateSkillCounter.BP_SM_BindStateSkillCounter_C
/// Size: 0x0029 (41 bytes) (0x000030 - 0x000059) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UBP_SM_BindStateSkillCounter_C : public UASMBindState
{ 
public:
	TArray<int32_t>                                    SkillIds;                                                   // 0x0030   (0x0010)  
	FString                                            ___gK;                                                      // 0x0040   (0x0010)  
	int32_t                                            _X_R_P;                                                     // 0x0050   (0x0004)  
	int32_t                                            _X_R_P0;                                                    // 0x0054   (0x0004)  
	bool                                               __;                                                         // 0x0058   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionAttribute.BP_SM_ConditionAttribute_C
/// Size: 0x000C (12 bytes) (0x000038 - 0x000044) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_SM_ConditionAttribute_C : public UASMConditionBase
{ 
public:
	TEnumAsByte<EAttributeType>                        ____;                                                       // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0039   (0x0003)  MISSED
	int32_t                                            Min;                                                        // 0x003C   (0x0004)  
	int32_t                                            Max;                                                        // 0x0040   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStateBoneVisible.BP_SM_BindStateBoneVisible_C
/// Size: 0x0011 (17 bytes) (0x000030 - 0x000041) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UBP_SM_BindStateBoneVisible_C : public UASMBindState
{ 
public:
	FString                                            ___;                                                        // 0x0030   (0x0010)  
	bool                                               _f;                                                         // 0x0040   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStateCue.BP_SM_BindStateCue_C
/// Size: 0x0011 (17 bytes) (0x000030 - 0x000041) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UBP_SM_BindStateCue_C : public UASMBindState
{ 
public:
	TArray<int64_t>                                    CueIds;                                                     // 0x0030   (0x0010)  
	bool                                               _R___g__;                                                   // 0x0040   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStateAiHateConfig.BP_SM_BindStateAiHateConfig_C
/// Size: 0x0004 (4 bytes) (0x000030 - 0x000034) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_SM_BindStateAiHateConfig_C : public UASMBindState
{ 
public:
	int32_t                                            configId;                                                   // 0x0030   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_TaskSkill.BP_SM_TaskSkill_C
/// Size: 0x0005 (5 bytes) (0x000030 - 0x000035) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UBP_SM_TaskSkill_C : public UASMTask
{ 
public:
	int32_t                                            skillId;                                                    // 0x0030   (0x0004)  
	bool                                               AQ__;                                                       // 0x0034   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ActionResetPart.BP_SM_ActionResetPart_C
/// Size: 0x0012 (18 bytes) (0x000030 - 0x000042) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class UBP_SM_ActionResetPart_C : public UASMAction
{ 
public:
	FString                                            __M;                                                        // 0x0030   (0x0010)  
	bool                                               __n_;                                                       // 0x0040   (0x0001)  
	bool                                               __n_0;                                                      // 0x0041   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionBuffStack.BP_SM_ConditionBuffStack_C
/// Size: 0x0010 (16 bytes) (0x000038 - 0x000048) align 8 pad: 0x0000
class UBP_SM_ConditionBuffStack_C : public UASMConditionBase
{ 
public:
	int64_t                                            BuffID;                                                     // 0x0038   (0x0008)  
	int32_t                                            Min;                                                        // 0x0040   (0x0004)  
	int32_t                                            Max;                                                        // 0x0044   (0x0004)  
};

/// Class /Game/Aki/Character/BaseCharacter/Abilities/GB/BP_BulletLogicBase.BP_BulletLogicBase_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBP_BulletLogicBase_C : public UObject
{ 
public:
	// void P_9____(class UObject* P_, float _8TD_);                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void gb(class ATsBaseCharacter_C* _e_, class ATsBaseCharacter_C* _S_, FSBulletDataMain P_9_, class UObject* P_);         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataBase.LogicDataBase_C
/// Size: 0x0001 (1 bytes) (0x000038 - 0x000039) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class ULogicDataBase_C : public UKuroBpDataAsset
{ 
public:
	TEnumAsByte<EBulletLogicStage>                     ExecuteStage;                                               // 0x0038   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataDestroyOtherBullet.LogicDataDestroyOtherBullet_C
/// Size: 0x0019 (25 bytes) (0x000039 - 0x000052) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class ULogicDataDestroyOtherBullet_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0039   (0x0007)  MISSED
	FString                                            BulletId;                                                   // 0x0040   (0x0010)  
	bool                                               SummonChildBullet;                                          // 0x0050   (0x0001)  
	TEnumAsByte<ECamp>                                 Camp;                                                       // 0x0051   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataWhirlpool.LogicDataWhirlpool_C
/// Size: 0x000B (11 bytes) (0x000039 - 0x000044) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ULogicDataWhirlpool_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x3];                                       // 0x0039   (0x0003)  MISSED
	float                                              WeightLimit;                                                // 0x003C   (0x0004)  
	float                                              MoveTime;                                                   // 0x0040   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataManipulatableTagsChange.LogicDataManipulatableTagsChange_C
/// Size: 0x0087 (135 bytes) (0x000039 - 0x0000C0) align 8 pad: 0x0000
class ULogicDataManipulatableTagsChange_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0039   (0x0007)  MISSED
	FGameplayTagContainer                              ExistTagsCondition;                                         // 0x0040   (0x0020)  
	FGameplayTagContainer                              UnExistTagsCondition;                                       // 0x0060   (0x0020)  
	FGameplayTagContainer                              AddTags;                                                    // 0x0080   (0x0020)  
	FGameplayTagContainer                              RemoveTags;                                                 // 0x00A0   (0x0020)  
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataManipulatableCreateBullet.LogicDataManipulatableCreateBullet_C
/// Size: 0x0059 (89 bytes) (0x000039 - 0x000092) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class ULogicDataManipulatableCreateBullet_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0039   (0x0007)  MISSED
	FGameplayTagContainer                              ExistTagsCondition;                                         // 0x0040   (0x0020)  
	FGameplayTagContainer                              UnExistTagsCondition;                                       // 0x0060   (0x0020)  
	TArray<FString>                                    CreateBulletRowName;                                        // 0x0080   (0x0010)  
	TEnumAsByte<EBulletObject>                         BulletOwner;                                                // 0x0090   (0x0001)  
	TEnumAsByte<EBulletObject>                         BulletTransform;                                            // 0x0091   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataSpawnObstacles.LogicDataSpawnObstacles_C
/// Size: 0x002E (46 bytes) (0x000039 - 0x000067) align 8 pad: 0x0007
#pragma pack(push, 0x1)
class ULogicDataSpawnObstacles_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x3];                                       // 0x0039   (0x0003)  MISSED
	FName                                              ProfileName;                                                // 0x003C   (0x000C)  
	bool                                               ShowModel;                                                  // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0049   (0x0007)  MISSED
	class UStaticMesh*                                 Mesh;                                                       // 0x0050   (0x0008)  
	FVector                                            Size;                                                       // 0x0058   (0x000C)  
	bool                                               NeedAttach;                                                 // 0x0064   (0x0001)  
	bool                                               CanStandOn;                                                 // 0x0065   (0x0001)  
	TEnumAsByte<EBulletLogicObstacles>                 Model;                                                      // 0x0066   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataSuiGuang.LogicDataSuiGuang_C
/// Size: 0x001F (31 bytes) (0x000039 - 0x000058) align 8 pad: 0x0000
class ULogicDataSuiGuang_C : public ULogicDataBase_C
{ 
public:
	bool                                               IncludeBullet;                                              // 0x0039   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x003A   (0x0002)  MISSED
	FGameplayTag                                       NeedTag;                                                    // 0x003C   (0x000C)  
	FString                                            NewBulletId;                                                // 0x0048   (0x0010)  
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataShowMesh.LogicDataShowMesh_C
/// Size: 0x0027 (39 bytes) (0x000039 - 0x000060) align 8 pad: 0x0000
class ULogicDataShowMesh_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0039   (0x0007)  MISSED
	FSoftObjectPath                                    MaterialEffect;                                             // 0x0040   (0x0020)  
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataShakeScreen.LogicDataShakeScreen_C
/// Size: 0x005F (95 bytes) (0x000039 - 0x000098) align 8 pad: 0x0000
class ULogicDataShakeScreen_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x3];                                       // 0x0039   (0x0003)  MISSED
	float                                              Count;                                                      // 0x003C   (0x0004)  
	FString                                            Epicenter;                                                  // 0x0040   (0x0010)  
	float                                              Falloff;                                                    // 0x0050   (0x0004)  
	float                                              InnerRadius;                                                // 0x0054   (0x0004)  
	float                                              interval;                                                   // 0x0058   (0x0004)  
	bool                                               OrientShakeTowardsEpicenter;                                // 0x005C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x005D   (0x0003)  MISSED
	float                                              OuterRadius;                                                // 0x0060   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0064   (0x0004)  MISSED
	SDK_UNDEFINED(48,977) /* TWeakObjectPtr<UClass*> */ __um(Shake);                                               // 0x0068   (0x0030)  
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataSplineMovement.LogicDataSplineMovement_C
/// Size: 0x0090 (144 bytes) (0x000039 - 0x0000C9) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class ULogicDataSplineMovement_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x3];                                       // 0x0039   (0x0003)  MISSED
	float                                              Duration;                                                   // 0x003C   (0x0004)  
	SDK_UNDEFINED(48,978) /* TWeakObjectPtr<UEffectModelBase*> */ __um(EffectOnReach);                             // 0x0040   (0x0030)  
	float                                              Height;                                                     // 0x0070   (0x0004)  
	bool                                               IsDestroyReach;                                             // 0x0074   (0x0001)  
	bool                                               IsForwardTangent;                                           // 0x0075   (0x0001)  
	bool                                               IsSummonOnReach;                                            // 0x0076   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1];                                       // 0x0077   (0x0001)  MISSED
	float                                              Length;                                                     // 0x0078   (0x0004)  
	float                                              MaxSpeed;                                                   // 0x007C   (0x0004)  
	float                                              MinSpeed;                                                   // 0x0080   (0x0004)  
	float                                              rotate;                                                     // 0x0084   (0x0004)  
	float                                              SelfHeight;                                                 // 0x0088   (0x0004)  
	float                                              SelfLength;                                                 // 0x008C   (0x0004)  
	float                                              SelfRotate;                                                 // 0x0090   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0094   (0x0004)  MISSED
	SDK_UNDEFINED(48,979) /* TWeakObjectPtr<UClass*> */ __um(SplineTrace);                                         // 0x0098   (0x0030)  
	bool                                               UseTargetLocation;                                          // 0x00C8   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataSupport.LogicDataSupport_C
/// Size: 0x0040 (64 bytes) (0x000039 - 0x000079) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class ULogicDataSupport_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x3];                                       // 0x0039   (0x0003)  MISSED
	FGameplayTag                                       Tag;                                                        // 0x003C   (0x000C)  
	SDK_UNDEFINED(48,980) /* TWeakObjectPtr<UEffectModelBase*> */ __um(Effect);                                    // 0x0048   (0x0030)  
	TEnumAsByte<ECamp>                                 Camp;                                                       // 0x0078   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/Camera/SFloatCurve.SFloatCurve
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 8 pad: 0x0000
struct FSFloatCurve
{ 
	class UCurveFloat*                                 FloatCurve_7_359BA05547FEF437AB4D5FA2DFC1F098;              // 0x0000   (0x0008)  
};

/// Struct /Game/Aki/Character/BaseCharacter/Camera/SCameraModifier_Lens.SCameraModifier_Lens
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 4 pad: 0x0000
struct FSCameraModifier_Lens
{ 
	float                                              StartFStop_22_2AE41BCC4091518F84A145BB74DE1484;             // 0x0000   (0x0004)  
	float                                              EndFStop_24_9ACD9C10479EA8CE3B0D498E1D40FE1D;               // 0x0004   (0x0004)  
	float                                              RadialBlurStartIntensity_17_489DCA6F4E415B5242297EB8E070B416; // 0x0008   (0x0004)  
	float                                              RadialBlurEndIntensity_19_B5497B4A4630D7B38E0AC49FAC4A0D9A; // 0x000C   (0x0004)  
	FVector2D                                          RadialBlurCenter_6_9B288F0547473F71093BEEA3E37782F3;        // 0x0010   (0x0008)  
	float                                              RadialBlurRadius_9_DF54853044DAF80EBD76EA96BEB2D255;        // 0x0018   (0x0004)  
	float                                              RadialBlurHardness_11_36F4281F4305AAA87E4E4F92C403BB67;     // 0x001C   (0x0004)  
	float                                              RadialBlurPassNumber_13_28C543494EE741E1D7FBF38619D85057;   // 0x0020   (0x0004)  
	float                                              RadialBlurSampleNumber_15_3B432AD74740E2D8A277E5AA019FC441; // 0x0024   (0x0004)  
};

/// Struct /Game/Aki/Character/BaseCharacter/Camera/SCameraModifier_Settings.SCameraModifier_Settings
/// Size: 0x00E8 (232 bytes) (0x000000 - 0x0000E8) align 8 pad: 0x0000
struct FSCameraModifier_Settings
{ 
	int32_t                                            Priority_101_E74404724F7BCD1A815B9E8ECCEE64EC;              // 0x0000   (0x0004)  
	bool                                               IsModifiedArmLength_73_1686AE5842DD198072484BB2D855CAEB;    // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0005   (0x0003)  MISSED
	float                                              ArmLength_74_192752C04380D5CAF2EB7E910DC5C9C5;              // 0x0008   (0x0004)  
	float                                              ArmLengthAdditional_75_3ED4AAB647CA6863AC2F9F9C1D48D229;    // 0x000C   (0x0004)  
	bool                                               IsModifiedArmRotation_76_570606324FC53E504274BDA6F59BD5C3;  // 0x0010   (0x0001)  
	bool                                               IsModifiedArmRotationRoll_93_6CBBDC9043D8BF5E4EC3AB8E5473C625; // 0x0011   (0x0001)  
	bool                                               IsModifiedArmRotationPitch_94_6C16441D44C806A072B75DA882811D0C; // 0x0012   (0x0001)  
	bool                                               IsModifiedArmRotationYaw_95_FBE820DB4C8D5B75CEF242854F6F3774; // 0x0013   (0x0001)  
	FRotator                                           ArmRotation_77_B66F0D944DE7F4829886B997E0B1B89F;            // 0x0014   (0x000C)  
	FRotator                                           ArmRotationAdditional_78_A62C514641B680F97462AFB1C30145B6;  // 0x0020   (0x000C)  
	bool                                               IsModifyArmRotationBasedOnActorRotation_116_BEFC838C4104D109C6F38D82C10E3603; // 0x002C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x002D   (0x0003)  MISSED
	float                                              FocusCameraRelativeYaw_84_A1176B774431A0E9E231989EF65C2767; // 0x0030   (0x0004)  
	bool                                               IsModifiedCameraOffset_79_43F688EC4B642A9CB92B0A8548187E16; // 0x0034   (0x0001)  
	bool                                               IsModifiedCameraOffsetX_96_CCEBEC98498BB408B5BA0AB0BD15F414; // 0x0035   (0x0001)  
	bool                                               IsModifiedCameraOffsetY_97_F5766DB146F88618F570C4A1F04A00F7; // 0x0036   (0x0001)  
	bool                                               IsModifiedCameraOffsetZ_98_E6E0795348BE5A8749FB348FAD18D836; // 0x0037   (0x0001)  
	FVector                                            CameraOffset_80_EB37D424428EBE421F9AAEB064701EAD;           // 0x0038   (0x000C)  
	FVector                                            CameraOffsetAdditional_81_DABDCE1243662E3E72DB62A0B56CEA53; // 0x0044   (0x000C)  
	bool                                               IsModifiedCameraFov_53_1A8D869C4A5886B266452BBCB07BA93A;    // 0x0050   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0051   (0x0003)  MISSED
	float                                              CameraFov_63_A418591F41F5EF0F2D3D19B8F9967FC9;              // 0x0054   (0x0004)  
	bool                                               OverrideCameraInput_59_0083E3164D765950CF70528078BF8218;    // 0x0058   (0x0001)  
	bool                                               StopModifyOnMontageEnd_61_E5E58E644EDFAC8B5A53C08F375C0567; // 0x0059   (0x0001)  
	bool                                               ResetFinalArmRotation_70_56DCE7204671EC361892799BE39735C5;  // 0x005A   (0x0001)  
	bool                                               ResetFinalArmLength_72_0D8B0AFC4AA34A5415C9C6AC3D25FE4E;    // 0x005B   (0x0001)  
	bool                                               IsLockInput_86_CDDE4FA4418F23E40016969CB0D3623C;            // 0x005C   (0x0001)  
	bool                                               IsLerpArmLocation_111_5A5B00E645FAC54E063E8A93C1764D62;     // 0x005D   (0x0001)  
	unsigned char                                      UnknownData03_6[0x2];                                       // 0x005E   (0x0002)  MISSED
	float                                              MaxLookTargetAngle_108_B7453209457235E304455B91D84BDB4E;    // 0x0060   (0x0004)  
	float                                              MaxLookTargetAngleSpeed_110_32C2C0AE4FC4D3A9B189AE84953EB88A; // 0x0064   (0x0004)  
	bool                                               IsSwitchModifier_113_0BCB940D4AB7A06EB3485D98E853EC0A;      // 0x0068   (0x0001)  
	bool                                               IsUseArmLengthFloatCurve_145_52D03678481BE2CC47BAA09BB214D15F; // 0x0069   (0x0001)  
	unsigned char                                      UnknownData04_6[0x6];                                       // 0x006A   (0x0006)  MISSED
	FSFloatCurve                                       ArmLengthFloatCurve_146_2D69FECF4D82AFC253FA71B87883C047;   // 0x0070   (0x0008)  
	bool                                               IsUseArmRotationFloatCurve_147_A8AAAED54FF2147DFE0679962E192D84; // 0x0078   (0x0001)  
	unsigned char                                      UnknownData05_6[0x7];                                       // 0x0079   (0x0007)  MISSED
	FSFloatCurve                                       ArmRotationFloatCurve_148_68D46B3A4AF5A1E5882134A1981EBD80; // 0x0080   (0x0008)  
	bool                                               IsUseFovFloatCurve_149_C20764494AB9E116CE38FAA7715D45A5;    // 0x0088   (0x0001)  
	unsigned char                                      UnknownData06_6[0x7];                                       // 0x0089   (0x0007)  MISSED
	FSFloatCurve                                       FovFloatCurve_150_743C892B48A7416DE017A7BB65D2A494;         // 0x0090   (0x0008)  
	bool                                               IsModifiedCameraLens_165_4CA316F7450454A95F4B8BAFC6D2C306;  // 0x0098   (0x0001)  
	bool                                               IsUseLensFloatCurve_160_94D8F5374B9F5984B7E397801C0F5C78;   // 0x0099   (0x0001)  
	unsigned char                                      UnknownData07_6[0x6];                                       // 0x009A   (0x0006)  MISSED
	FSFloatCurve                                       LensFloatCurve_162_5C23EC1E47E31D144B2F018C6CF0C2D4;        // 0x00A0   (0x0008)  
	FSCameraModifier_Lens                              CameraLens_168_CC7FDCB54DB07FE211EE92BCF33EE2A0;            // 0x00A8   (0x0028)  
	bool                                               ResetFinalArmRotationToFocus_172_43F64407465FF68A8BA3B68991CCADAD; // 0x00D0   (0x0001)  
	unsigned char                                      UnknownData08_6[0x7];                                       // 0x00D1   (0x0007)  MISSED
	FString                                            Name_175_28D975324D4AEC9BFBFF84B8F8633373;                  // 0x00D8   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SCounterAttackCamera.SCounterAttackCamera
/// Size: 0x0118 (280 bytes) (0x000000 - 0x000118) align 8 pad: 0x0000
struct FSCounterAttackCamera
{ 
	FGameplayTag                                       Tag_26_5F7910584795619EF6679EB61BB46FF8;                    // 0x0000   (0x000C)  
	float                                              _c___e___;                                                  // 0x000C   (0x0004)  
	float                                              _meQ_e___;                                                  // 0x0010   (0x0004)  
	float                                              _m_Q_e___;                                                  // 0x0014   (0x0004)  
	float                                              Sb_e_m_Q_e___;                                              // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FString                                            CameraAttachSocket_18_6C5DA6F14E99C3E47A533BAC2B020FBD;     // 0x0020   (0x0010)  
	FSCameraModifier_Settings                          Dd_P_gM_n__;                                                // 0x0030   (0x00E8)  
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataRebound.LogicDataRebound_C
/// Size: 0x01AB (427 bytes) (0x000039 - 0x0001E4) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ULogicDataRebound_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0039   (0x0007)  MISSED
	TArray<FString>                                    BulletRowName;                                              // 0x0040   (0x0010)  
	SDK_UNDEFINED(48,981) /* TWeakObjectPtr<UEffectModelBase*> */ __um(EffectRebound);                             // 0x0050   (0x0030)  
	FVector                                            PositionOffset;                                             // 0x0080   (0x000C)  
	FRotator                                           RotationOffset;                                             // 0x008C   (0x000C)  
	SDK_UNDEFINED(48,982) /* TWeakObjectPtr<UClass*> */ __um(ScreenShake);                                         // 0x0098   (0x0030)  
	FSCounterAttackCamera                              CameraModified;                                             // 0x00C8   (0x0118)  
	int32_t                                            ReboundBitMask;                                             // 0x01E0   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataFreeze.LogicDataFreeze_C
/// Size: 0x002C (44 bytes) (0x000039 - 0x000065) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class ULogicDataFreeze_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0039   (0x0007)  MISSED
	FGameplayTagContainer                              Tags;                                                       // 0x0040   (0x0020)  
	float                                              FreezeTime;                                                 // 0x0060   (0x0004)  
	TEnumAsByte<EBulletObject>                         Target;                                                     // 0x0064   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataAdditiveAccelerate.LogicDataAdditiveAccelerate_C
/// Size: 0x0017 (23 bytes) (0x000039 - 0x000050) align 8 pad: 0x0000
class ULogicDataAdditiveAccelerate_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x3];                                       // 0x0039   (0x0003)  MISSED
	FVector                                            Acceleration;                                               // 0x003C   (0x000C)  
	class UCurveVector*                                AccelerationCurve;                                          // 0x0048   (0x0008)  
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataSpeedReduce.LogicDataSpeedReduce_C
/// Size: 0x000F (15 bytes) (0x000039 - 0x000048) align 8 pad: 0x0000
class ULogicDataSpeedReduce_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x3];                                       // 0x0039   (0x0003)  MISSED
	float                                              SpeedDampingRatio;                                          // 0x003C   (0x0004)  
	bool                                               IsNotThroughObstacles;                                      // 0x0040   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0041   (0x0003)  MISSED
	float                                              MinSpeed;                                                   // 0x0044   (0x0004)  
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataForce.LogicDataForce_C
/// Size: 0x005F (95 bytes) (0x000039 - 0x000098) align 8 pad: 0x0000
class ULogicDataForce_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x3];                                       // 0x0039   (0x0003)  MISSED
	float                                              ForceBase;                                                  // 0x003C   (0x0004)  
	float                                              ForceDampingRatio;                                          // 0x0040   (0x0004)  
	float                                              InnerRadius;                                                // 0x0044   (0x0004)  
	float                                              OuterRadius;                                                // 0x0048   (0x0004)  
	int32_t                                            LimitWeight;                                                // 0x004C   (0x0004)  
	bool                                               ConstantForce;                                              // 0x0050   (0x0001)  
	bool                                               TowardsBullet;                                              // 0x0051   (0x0001)  
	bool                                               HaveTopArea;                                                // 0x0052   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1];                                       // 0x0053   (0x0001)  MISSED
	float                                              TopAreaHeight;                                              // 0x0054   (0x0004)  
	float                                              ContinueTime;                                               // 0x0058   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x005C   (0x0004)  MISSED
	class UCurveFloat*                                 ContinueTimeCurve;                                          // 0x0060   (0x0008)  
	bool                                               IsLaunching;                                                // 0x0068   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0069   (0x0007)  MISSED
	FGameplayTagContainer                              WorkHaveTag;                                                // 0x0070   (0x0020)  
	bool                                               IsResetOnLast;                                              // 0x0090   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x0091   (0x0003)  MISSED
	int32_t                                            Group;                                                      // 0x0094   (0x0004)  
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataDestroyBullet.LogicDataDestroyBullet_C
/// Size: 0x0019 (25 bytes) (0x000039 - 0x000052) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class ULogicDataDestroyBullet_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0039   (0x0007)  MISSED
	FString                                            DestroyBulletRowName;                                       // 0x0040   (0x0010)  
	bool                                               SummonChildBullet;                                          // 0x0050   (0x0001)  
	TEnumAsByte<EBulletObject>                         BulletOwner;                                                // 0x0051   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/LogicDataClass/LogicDataCreateBullet.LogicDataCreateBullet_C
/// Size: 0x003A (58 bytes) (0x000039 - 0x000073) align 8 pad: 0x0003
#pragma pack(push, 0x1)
class ULogicDataCreateBullet_C : public ULogicDataBase_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0039   (0x0007)  MISSED
	FString                                            CreateBulletRowName;                                        // 0x0040   (0x0010)  
	FString                                            AttachToBoneName;                                           // 0x0050   (0x0010)  
	FString                                            FlashBulletRowName;                                         // 0x0060   (0x0010)  
	TEnumAsByte<EBulletObject>                         BulletOwner;                                                // 0x0070   (0x0001)  
	TEnumAsByte<EBulletObject>                         BulletTransform;                                            // 0x0071   (0x0001)  
	TEnumAsByte<EBulletObject>                         AttachToActor;                                              // 0x0072   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Interaction/PDA_InteractionGlobalConfigParameters.PDA_InteractionGlobalConfigParameters_C
/// Size: 0x002C (44 bytes) (0x000038 - 0x000064) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UPDA_InteractionGlobalConfigParameters_C : public UPrimaryDataAsset
{ 
public:
	bool                                               _T_u_i;                                                     // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0039   (0x0003)  MISSED
	float                                              _i___N;                                                     // 0x003C   (0x0004)  
	bool                                               _T_u4l;                                                     // 0x0040   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0041   (0x0003)  MISSED
	float                                              _4lb__N;                                                    // 0x0044   (0x0004)  
	float                                              _4lb__N_N;                                                  // 0x0048   (0x0004)  
	float                                              _4l_l___Pb;                                                 // 0x004C   (0x0004)  
	float                                              _i__b_;                                                     // 0x0050   (0x0004)  
	float                                              _4l_l__i;                                                   // 0x0054   (0x0004)  
	float                                              _4l_l___;                                                   // 0x0058   (0x0004)  
	float                                              _4l_;                                                       // 0x005C   (0x0004)  
	float                                              _4l_l_;                                                     // 0x0060   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Interaction/PDA_InteractionGlobalConfig.PDA_InteractionGlobalConfig_C
/// Size: 0x01BA (442 bytes) (0x000038 - 0x0001F2) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class UPDA_InteractionGlobalConfig_C : public UPrimaryDataAsset
{ 
public:
	bool                                               O____b_g4l;                                                 // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
	FSoftObjectPath                                    _i__b_;                                                     // 0x0040   (0x0020)  
	FSoftObjectPath                                    _i___N_N;                                                   // 0x0060   (0x0020)  
	FSoftObjectPath                                    _i____;                                                     // 0x0080   (0x0020)  
	FSoftObjectPath                                    _4lb__l__;                                                  // 0x00A0   (0x0020)  
	FSoftObjectPath                                    _4lb__l__0;                                                 // 0x00C0   (0x0020)  
	FSoftObjectPath                                    ___e_j;                                                     // 0x00E0   (0x0020)  
	FSoftObjectPath                                    _4lb__l__1;                                                 // 0x0100   (0x0020)  
	FSoftObjectPath                                    _i___N;                                                     // 0x0120   (0x0020)  
	FSoftObjectPath                                    _i___N_N2;                                                  // 0x0140   (0x0020)  
	FSoftObjectPath                                    _4lb__N;                                                    // 0x0160   (0x0020)  
	FSoftObjectPath                                    _4lb__N_N4;                                                 // 0x0180   (0x0020)  
	FSoftObjectPath                                    _4lb__N_N43;                                                // 0x01A0   (0x0020)  
	FSoftObjectPath                                    _4lb__N_N44;                                                // 0x01C0   (0x0020)  
	bool                                               O____b_gI_;                                                 // 0x01E0   (0x0001)  
	bool                                               _Pbk4;                                                      // 0x01E1   (0x0001)  
	bool                                               _PbkI;                                                      // 0x01E2   (0x0001)  
	unsigned char                                      UnknownData01_6[0x5];                                       // 0x01E3   (0x0005)  MISSED
	class UPDA_InteractionGlobalConfigParameters_C*    _N_N;                                                       // 0x01E8   (0x0008)  
	bool                                               __6R_T_;                                                    // 0x01F0   (0x0001)  
	bool                                               __6R_T_5;                                                   // 0x01F1   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Interaction/PDA_InteractionActorConfig.PDA_InteractionActorConfig_C
/// Size: 0x00B8 (184 bytes) (0x000038 - 0x0000F0) align 8 pad: 0x0000
class UPDA_InteractionActorConfig_C : public UPrimaryDataAsset
{ 
public:
	bool                                               _T_u4l;                                                     // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0039   (0x0003)  MISSED
	float                                              _4lb__N;                                                    // 0x003C   (0x0004)  
	float                                              _4lb__N_;                                                   // 0x0040   (0x0004)  
	float                                              _4lb__N_N;                                                  // 0x0044   (0x0004)  
	float                                              _e____;                                                     // 0x0048   (0x0004)  
	float                                              _4lb__N_N0;                                                 // 0x004C   (0x0004)  
	float                                              _4lb__N_N1;                                                 // 0x0050   (0x0004)  
	float                                              _4lb__N_N2;                                                 // 0x0054   (0x0004)  
	FKuroCurveFloat                                    _N_N_____;                                                  // 0x0058   (0x0090)  
	float                                              _N_N__;                                                     // 0x00E8   (0x0004)  
	float                                              _N_NMO;                                                     // 0x00EC   (0x0004)  
};

/// Class /Game/Aki/Audio/AkTools/WorldPointSound/Audio_Multi_Base.Audio_Multi_Base_C
/// Size: 0x0055 (85 bytes) (0x0002A8 - 0x0002FD) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class AAudio_Multi_Base_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class UInstancedStaticMeshComponent*               I;                                                          // 0x02B0   (0x0008)  
	class UAkComponent*                                Ak;                                                         // 0x02B8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C0   (0x0008)  
	class UAkAudioEvent*                               Event;                                                      // 0x02C8   (0x0008)  
	float                                              _Q_____e;                                                   // 0x02D0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02D4   (0x0004)  MISSED
	TArray<FTransform>                                 MultiPos;                                                   // 0x02D8   (0x0010)  
	float                                              Am__;                                                       // 0x02E8   (0x0004)  
	float                                              _Y_p_Q___;                                                  // 0x02EC   (0x0004)  
	FVector                                            Pg__;                                                       // 0x02F0   (0x000C)  
	bool                                               _f_T_W;                                                     // 0x02FC   (0x0001)  
	// void Hide();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Show();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Gameplay();                                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _____();                                                                                                            // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void _f_yAm();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___S_(FVector& _N_);                                                                                                // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void Sb();                                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void p__QJS____(float& p__Q);                                                                                            // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void Stop();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Play();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _nd__();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Am____();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _9hnc_Q____();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _S_();                                                                                                              // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_Audio_Multi_Base(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/AI/AIMoveSplineCount/CommonEffectMoveSpline2.CommonEffectMoveSpline2_C
/// Size: 0x0008 (8 bytes) (0x0002A8 - 0x0002B0) align 8 pad: 0x0000
class ACommonEffectMoveSpline2_C : public AActor
{ 
public:
	class UKuroMoveSplineComponent*                    KuroMoveSpline;                                             // 0x02A8   (0x0008)  
};

/// Class /Game/Aki/Render/RuntimeBP/Scene/Destructible/BP_KuroDestructibleActor.BP_KuroDestructibleActor_C
/// Size: 0x00A0 (160 bytes) (0x0002C0 - 0x000360) align 8 pad: 0x0000
class ABP_KuroDestructibleActor_C : public ADestructibleActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02C0   (0x0008)  
	class UStaticMeshComponent*                        ProxyMesh;                                                  // 0x02C8   (0x0008)  
	class UCharRenderingComponent_C*                   CharRenderingComponent;                                     // 0x02D0   (0x0008)  
	SDK_UNDEFINED(48,983) /* TWeakObjectPtr<UEffectModelBase*> */ __um(EffectDataAsset);                           // 0x02D8   (0x0030)  
	FCollisionResponseContainer                        OnDestoryReponses;                                          // 0x0308   (0x0020)  
	bool                                               IsDebug;                                                    // 0x0328   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0329   (0x0003)  MISSED
	float                                              Impluse;                                                    // 0x032C   (0x0004)  
	float                                              ImpluseFactor;                                              // 0x0330   (0x0004)  
	float                                              DamageRadius;                                               // 0x0334   (0x0004)  
	class UPD_CharacterControllerData_C*               MaterialControllerData;                                     // 0x0338   (0x0008)  
	FVector                                            OriginOffset;                                               // 0x0340   (0x000C)  
	float                                              BaseForce;                                                  // 0x034C   (0x0004)  
	bool                                               IgnoreBullet;                                               // 0x0350   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0351   (0x0003)  MISSED
	FVector                                            HurtOrigin;                                                 // 0x0354   (0x000C)  
	// bool IsMobile();                                                                                                         // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ModifiedCollison();                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ApplyDamage(FVector& HurtOrigin, FVector SpeedDirection);                                                           // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void OnFractureEvent(FVector& HitPoint, FVector& HitDirection);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void PlayDestruction(FVector& HurtOrigin, float Impluse, bool IsZeroImpluse);                                            // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_KuroDestructibleActor(int32_t EntryPoint);                                                      // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Data/Fight/AssestStruct/BP_SplineMoveConfig.BP_SplineMoveConfig_C
/// Size: 0x0018 (24 bytes) (0x000038 - 0x000050) align 8 pad: 0x0000
class UBP_SplineMoveConfig_C : public UPrimaryDataAsset
{ 
public:
	float                                              TurnRate;                                                   // 0x0038   (0x0004)  
	float                                              AirControl;                                                 // 0x003C   (0x0004)  
	float                                              JumpHeightRate;                                             // 0x0040   (0x0004)  
	float                                              JumpTimeScale;                                              // 0x0044   (0x0004)  
	float                                              MaxFlySpeed;                                                // 0x0048   (0x0004)  
	float                                              AnsAccel;                                                   // 0x004C   (0x0004)  
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/SceneItem/BaseItem/TsBaseItem.TsBaseItem_C
/// Size: 0x0010 (16 bytes) (0x0002A8 - 0x0002B8) align 8 pad: 0x0000
class ATsBaseItem_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	// FString GetTagDebugStrings();                                                                                            // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsBaseItem(int32_t EntryPoint);                                                                    // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/Item/BP_BaseItem.BP_BaseItem_C
/// Size: 0x0024 (36 bytes) (0x0002B8 - 0x0002DC) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ABP_BaseItem_C : public ATsBaseItem_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B8   (0x0008)  
	class USphereComponent*                            DetectSphere;                                               // 0x02C0   (0x0008)  
	class UStaticMeshComponent*                        StaticMesh;                                                 // 0x02C8   (0x0008)  
	class USceneComponent*                             Scene;                                                      // 0x02D0   (0x0008)  
	int32_t                                            EntityID;                                                   // 0x02D8   (0x0004)  
	// int32_t GetEntityId();                                                                                                   // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ApplyEntityId(int32_t EntityID);                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_BaseItem(int32_t EntryPoint);                                                                   // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Scene/BlueprintLevel/BP_KuroISMGroup.BP_KuroISMGroup_C
/// Size: 0x0029 (41 bytes) (0x0002A8 - 0x0002D1) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class ABP_KuroISMGroup_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	bool                                               HideLogicallyOnBeginPlay;                                   // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02B9   (0x0003)  MISSED
	float                                              DitherProgress;                                             // 0x02BC   (0x0004)  
	float                                              Duration;                                                   // 0x02C0   (0x0004)  
	bool                                               IsTick;                                                     // 0x02C4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02C5   (0x0003)  MISSED
	float                                              DeltaSeconds;                                               // 0x02C8   (0x0004)  
	float                                              Time;                                                       // 0x02CC   (0x0004)  
	bool                                               IsShow;                                                     // 0x02D0   (0x0001)  
	// void Timer(float& ElapsedTime);                                                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void MaterialParameterGradient(float DeltalTime);                                                                        // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void SeyLogicallyShowForAllChildren();                                                                                   // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void SeyLogicallyHiddenForAllChildren();                                                                                 // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void EditorValidCheck();                                                                                                 // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void IsEditor(bool& IsEditor);                                                                                           // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_KuroISMGroup(int32_t EntryPoint);                                                               // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Scene/Light/BP_LightsGroup.BP_LightsGroup_C
/// Size: 0x0060 (96 bytes) (0x0002A8 - 0x000308) align 8 pad: 0x0000
class ABP_LightsGroup_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	bool                                               IsTick;                                                     // 0x02B8   (0x0001)  
	bool                                               TurnOffOrOn;                                                // 0x02B9   (0x0001)  
	bool                                               UseSimpleToggle;                                            // 0x02BA   (0x0001)  
	bool                                               UseColorChange;                                             // 0x02BB   (0x0001)  
	float                                              Time;                                                       // 0x02BC   (0x0004)  
	float                                              Duration;                                                   // 0x02C0   (0x0004)  
	float                                              DeltaSeconds;                                               // 0x02C4   (0x0004)  
	TArray<float>                                      LightsIntensity;                                            // 0x02C8   (0x0010)  
	FLinearColor                                       ColorOriginal;                                              // 0x02D8   (0x0010)  
	FLinearColor                                       ColorTarget;                                                // 0x02E8   (0x0010)  
	FString                                            Test;                                                       // 0x02F8   (0x0010)  
	// void LightsColorChange(float ElapsedTime, FLinearColor ColorOriginal, FLinearColor ColorTarget);                         // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ToggleLightsColorChange();                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void GetLightsIntensity();                                                                                               // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void Timer(float& ElapsedTime);                                                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void TurnOnLights(float ElapsedTime);                                                                                    // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void TurnOffLights(float ElapsedTime);                                                                                   // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ToggleLightsIntensity();                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ToggleLights(bool InEnable);                                                                                        // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_LightsGroup(int32_t EntryPoint);                                                                // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/BaseCharacter/BP_CharacterData.BP_CharacterData_C
/// Size: 0x0050 (80 bytes) (0x000038 - 0x000088) align 8 pad: 0x0000
class UBP_CharacterData_C : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(80,984) /* TMap<TEnumAsByte<ECharacterState>, FGameplayTagContainer> */ __um(CharacterStateTags); // 0x0038   (0x0050)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SClimbInfo.SClimbInfo
/// Size: 0x0019 (25 bytes) (0x000000 - 0x000019) align 4 pad: 0x0001
#pragma pack(push, 0x1)
struct FSClimbInfo
{ 
	FVector                                            null;                                                       // 0x0000   (0x000C)  
	bool                                               null0;                                                      // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
	FVector2D                                          null1;                                                      // 0x0010   (0x0008)  
	bool                                               null2;                                                      // 0x0018   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SClimbState.SClimbState
/// Size: 0x0003 (3 bytes) (0x000000 - 0x000003) align 1 pad: 0x0000
struct FSClimbState
{ 
	TEnumAsByte<EClimbState>                           null;                                                       // 0x0000   (0x0001)  
	TEnumAsByte<EEnterClimb>                           __eQ;                                                       // 0x0001   (0x0001)  
	TEnumAsByte<EExitClimb>                            null0;                                                      // 0x0002   (0x0001)  
};

/// Class /Game/Aki/Character/BaseCharacter/BP_ABPLogicParams.BP_ABPLogicParams_C
/// Size: 0x00B4 (180 bytes) (0x000030 - 0x0000E4) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_ABPLogicParams_C : public UObject
{ 
public:
	bool                                               AcceptedNewBeHitRef;                                        // 0x0030   (0x0001)  
	TEnumAsByte<EHitAnim>                              BeHitAnimRef;                                               // 0x0031   (0x0001)  
	bool                                               EnterFkRef;                                                 // 0x0032   (0x0001)  
	bool                                               DoubleHitInAirRef;                                          // 0x0033   (0x0001)  
	FVector                                            BeHitDirectRef;                                             // 0x0034   (0x000C)  
	FVector                                            BeHitLocationRef;                                           // 0x0040   (0x000C)  
	TEnumAsByte<ECharState>                            CharMoveStateRef;                                           // 0x004C   (0x0001)  
	TEnumAsByte<ECharParentMoveState>                  CharPositionStateRef;                                       // 0x004D   (0x0001)  
	TEnumAsByte<ECharViewDirectionState>               CharCameraStateRef;                                         // 0x004E   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x004F   (0x0001)  MISSED
	float                                              BattleIdleTimeRef;                                          // 0x0050   (0x0004)  
	float                                              DegMovementSlopeRef;                                        // 0x0054   (0x0004)  
	FVector                                            SightDirectRef;                                             // 0x0058   (0x000C)  
	bool                                               RagQuitStateRef;                                            // 0x0064   (0x0001)  
	bool                                               IsJumpRef;                                                  // 0x0065   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x0066   (0x0002)  MISSED
	FVector                                            AccelerationRef;                                            // 0x0068   (0x000C)  
	bool                                               IsMovingRef;                                                // 0x0074   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0075   (0x0003)  MISSED
	float                                              SpeedRef;                                                   // 0x0078   (0x0004)  
	FVector                                            InputDirectRef;                                             // 0x007C   (0x000C)  
	bool                                               IsFallingIntoWaterRef;                                      // 0x0088   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0089   (0x0003)  MISSED
	float                                              GroundedTimeRef;                                            // 0x008C   (0x0004)  
	bool                                               HasMoveInputRef;                                            // 0x0090   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x0091   (0x0003)  MISSED
	FSClimbInfo                                        ClimbInfoRef;                                               // 0x0094   (0x001C)  
	FSClimbState                                       ClimbStateRef;                                              // 0x00B0   (0x0003)  
	unsigned char                                      UnknownData05_6[0x1];                                       // 0x00B3   (0x0001)  MISSED
	float                                              ClimbRadiusRef;                                             // 0x00B4   (0x0004)  
	FRotator                                           InputRotatorRef;                                            // 0x00B8   (0x000C)  
	float                                              ClimbOnWallAngleRef;                                        // 0x00C4   (0x0004)  
	float                                              SprintSwimOffsetRef;                                        // 0x00C8   (0x0004)  
	float                                              SprintSwimOffsetLerpSpeedRef;                               // 0x00CC   (0x0004)  
	FVector                                            SlideForwardRef;                                            // 0x00D0   (0x000C)  
	bool                                               SlideSwitchThisFrameRef;                                    // 0x00DC   (0x0001)  
	bool                                               SlideStandModeRef;                                          // 0x00DD   (0x0001)  
	unsigned char                                      UnknownData06_6[0x2];                                       // 0x00DE   (0x0002)  MISSED
	float                                              JumpUpRateRef;                                              // 0x00E0   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyAddBuff.TsAnimNotifyAddBuff_C
/// Size: 0x0008 (8 bytes) (0x000048 - 0x000050) align 8 pad: 0x0000
class UTsAnimNotifyAddBuff_C : public UKuroAnimNotify
{ 
public:
	int64_t                                            BuffID;                                                     // 0x0048   (0x0008)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateAddBuff.TsAnimNotifyStateAddBuff_C
/// Size: 0x0009 (9 bytes) (0x000048 - 0x000051) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsAnimNotifyStateAddBuff_C : public UKuroAnimNotifyState
{ 
public:
	int64_t                                            BuffID;                                                     // 0x0048   (0x0008)  
	TEnumAsByte<ESkillBehaviorBuffTargetType>          _e_R;                                                       // 0x0050   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Module/UiComponent/Effect/TsUiBlur.TsUiBlur_C
/// Size: 0x0008 (8 bytes) (0x0000E8 - 0x0000F0) align 8 pad: 0x0000
class UTsUiBlur_C : public ULGUIBehaviour
{ 
public:
	class AActor*                                      OverrideItem;                                               // 0x00E8   (0x0008)  
};

/// Class /Game/Aki/Data/PathLine/BP_Miaozhunxian_Bullet.BP_Miaozhunxian_Bullet_C
/// Size: 0x0008 (8 bytes) (0x0002A8 - 0x0002B0) align 8 pad: 0x0000
class ABP_Miaozhunxian_Bullet_C : public AActor
{ 
public:
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02A8   (0x0008)  
};

/// Class /Game/Aki/Render/RuntimeBP/RenderData/ItemMaterialControllerMPCData.ItemMaterialControllerMPCData_C
/// Size: 0x00A0 (160 bytes) (0x000038 - 0x0000D8) align 8 pad: 0x0000
class UItemMaterialControllerMPCData_C : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(80,985) /* TMap<FString, FLinearColor> */ __um(Vector);                                          // 0x0038   (0x0050)  
	SDK_UNDEFINED(80,986) /* TMap<FString, float> */   __um(Scalar);                                               // 0x0088   (0x0050)  
};

/// Class /Game/Aki/TypeScript/Game/Module/UiNavigation/New/TsUiNavigationTextChangeListener.TsUiNavigationTextChangeListener_C
/// Size: 0x0008 (8 bytes) (0x0000F0 - 0x0000F8) align 8 pad: 0x0000
class UTsUiNavigationTextChangeListener_C : public UUINavigationTextChangeListener
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00F0   (0x0008)  
	// void OnNotifyTextChangeBP(FString NotifyText);                                                                           // [0x13db470] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void AwakeBP();                                                                                                          // [0x13db470] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void StartBP();                                                                                                          // [0x13db470] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsUiNavigationTextChangeListener(int32_t EntryPoint);                                              // [0x13db470] Final|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Render/RuntimeBP/Effect/Debug/PDA_EffectPaths.PDA_EffectPaths_C
/// Size: 0x0010 (16 bytes) (0x000038 - 0x000048) align 8 pad: 0x0000
class UPDA_EffectPaths_C : public UPrimaryDataAsset
{ 
public:
	TArray<FString>                                    BasePaths;                                                  // 0x0038   (0x0010)  
};

/// Class /Game/Aki/TypeScript/Game/Module/UiNavigation/TsUiHotKeyActorComponent.TsUiHotKeyActorComponent_C
/// Size: 0x001C (28 bytes) (0x0000E8 - 0x000104) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UTsUiHotKeyActorComponent_C : public ULGUIBehaviour
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00E8   (0x0008)  
	FString                                            Mode;                                                       // 0x00F0   (0x0010)  
	int32_t                                            Index;                                                      // 0x0100   (0x0004)  
	// void OnDestroyBP();                                                                                                      // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void StartBP();                                                                                                          // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void AwakeBP();                                                                                                          // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnEnableBP();                                                                                                       // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnDisableBP();                                                                                                      // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsUiHotKeyActorComponent(int32_t EntryPoint);                                                      // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Module/UiNavigation/New/TsUiNavigationPlatformChangeListener.TsUiNavigationPlatformChangeListener_C
/// Size: 0x0008 (8 bytes) (0x0000E8 - 0x0000F0) align 8 pad: 0x0000
class UTsUiNavigationPlatformChangeListener_C : public ULGUIBehaviour
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00E8   (0x0008)  
	// void AwakeBP();                                                                                                          // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnDestroyBP();                                                                                                      // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsUiNavigationPlatformChangeListener(int32_t EntryPoint);                                          // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionListenBeHit.BP_SM_ConditionListenBeHit_C
/// Size: 0x000C (12 bytes) (0x000038 - 0x000044) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_SM_ConditionListenBeHit_C : public UASMConditionBase
{ 
public:
	bool                                               _e_S_;                                                      // 0x0038   (0x0001)  
	bool                                               __;                                                         // 0x0039   (0x0001)  
	bool                                               __0;                                                        // 0x003A   (0x0001)  
	bool                                               _Q;                                                         // 0x003B   (0x0001)  
	bool                                               _Q1;                                                        // 0x003C   (0x0001)  
	bool                                               __9;                                                        // 0x003D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x003E   (0x0002)  MISSED
	int32_t                                            V_eu_;                                                      // 0x0040   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionPartLife.BP_SM_ConditionPartLife_C
/// Size: 0x001C (28 bytes) (0x000038 - 0x000054) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_SM_ConditionPartLife_C : public UASMConditionBase
{ 
public:
	FString                                            __M;                                                        // 0x0038   (0x0010)  
	bool                                               _f_T_;                                                      // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0049   (0x0003)  MISSED
	int32_t                                            Min;                                                        // 0x004C   (0x0004)  
	int32_t                                            Max;                                                        // 0x0050   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionListenEvent.BP_SM_ConditionListenEvent_C
/// Size: 0x0010 (16 bytes) (0x000038 - 0x000048) align 8 pad: 0x0000
class UBP_SM_ConditionListenEvent_C : public UASMConditionBase
{ 
public:
	FString                                            _v_T_;                                                      // 0x0038   (0x0010)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionCheckPartActivated.BP_SM_ConditionCheckPartActivated_C
/// Size: 0x0010 (16 bytes) (0x000038 - 0x000048) align 8 pad: 0x0000
class UBP_SM_ConditionCheckPartActivated_C : public UASMConditionBase
{ 
public:
	FString                                            __M;                                                        // 0x0038   (0x0010)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionMontageTimeRemaining.BP_SM_ConditionMontageTimeRemaining_C
/// Size: 0x0004 (4 bytes) (0x000038 - 0x00003C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_SM_ConditionMontageTimeRemaining_C : public UASMConditionBase
{ 
public:
	int32_t                                            Time;                                                       // 0x0038   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionTaskFinish.BP_SM_ConditionTaskFinish_C
/// Size: 0x0000 (0 bytes) (0x000038 - 0x000038) align 8 pad: 0x0000
class UBP_SM_ConditionTaskFinish_C : public UASMConditionBase
{ 
public:
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionCheckInstState.BP_SM_ConditionCheckInstState_C
/// Size: 0x000C (12 bytes) (0x000038 - 0x000044) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_SM_ConditionCheckInstState_C : public UASMConditionBase
{ 
public:
	FGameplayTag                                       Tag;                                                        // 0x0038   (0x000C)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionTag.BP_SM_ConditionTag_C
/// Size: 0x000D (13 bytes) (0x000038 - 0x000045) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UBP_SM_ConditionTag_C : public UASMConditionBase
{ 
public:
	FGameplayTag                                       Tag;                                                        // 0x0038   (0x000C)  
	bool                                               IsClient;                                                   // 0x0044   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionHate.BP_SM_ConditionHate_C
/// Size: 0x0000 (0 bytes) (0x000038 - 0x000038) align 8 pad: 0x0000
class UBP_SM_ConditionHate_C : public UASMConditionBase
{ 
public:
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionCheckState.BP_SM_ConditionCheckState_C
/// Size: 0x0010 (16 bytes) (0x000038 - 0x000048) align 8 pad: 0x0000
class UBP_SM_ConditionCheckState_C : public UASMConditionBase
{ 
public:
	FString                                            _h_g;                                                       // 0x0038   (0x0010)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionAttributeRate.BP_SM_ConditionAttributeRate_C
/// Size: 0x000C (12 bytes) (0x000038 - 0x000044) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_SM_ConditionAttributeRate_C : public UASMConditionBase
{ 
public:
	TEnumAsByte<EAttributeType>                        _R;                                                         // 0x0038   (0x0001)  
	TEnumAsByte<EAttributeType>                        _R0;                                                        // 0x0039   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x003A   (0x0002)  MISSED
	int32_t                                            Min;                                                        // 0x003C   (0x0004)  
	int32_t                                            Max;                                                        // 0x0040   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionTrue.BP_SM_ConditionTrue_C
/// Size: 0x0000 (0 bytes) (0x000038 - 0x000038) align 8 pad: 0x0000
class UBP_SM_ConditionTrue_C : public UASMConditionBase
{ 
public:
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStatePartPanelVisible.BP_SM_BindStatePartPanelVisible_C
/// Size: 0x0011 (17 bytes) (0x000030 - 0x000041) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UBP_SM_BindStatePartPanelVisible_C : public UASMBindState
{ 
public:
	FString                                            __M;                                                        // 0x0030   (0x0010)  
	bool                                               _r__a;                                                      // 0x0040   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStateDisableActor.BP_SM_BindStateDisableActor_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBP_SM_BindStateDisableActor_C : public UASMBindState
{ 
public:
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStateAiSenseEnable.BP_SM_BindStateAiSenseEnable_C
/// Size: 0x0004 (4 bytes) (0x000030 - 0x000034) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_SM_BindStateAiSenseEnable_C : public UASMBindState
{ 
public:
	int32_t                                            configId;                                                   // 0x0030   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_TaskMoveToTarget.BP_SM_TaskMoveToTarget_C
/// Size: 0x0016 (22 bytes) (0x000030 - 0x000046) align 8 pad: 0x0006
#pragma pack(push, 0x1)
class UBP_SM_TaskMoveToTarget_C : public UASMTask
{ 
public:
	int32_t                                            _y_R;                                                       // 0x0030   (0x0004)  
	bool                                               ____;                                                       // 0x0034   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0035   (0x0003)  MISSED
	int32_t                                            _Pbk;                                                       // 0x0038   (0x0004)  
	int32_t                                            l__T;                                                       // 0x003C   (0x0004)  
	int32_t                                            _f_e__;                                                     // 0x0040   (0x0004)  
	bool                                               ___g_e_;                                                    // 0x0044   (0x0001)  
	bool                                               AQ__;                                                       // 0x0045   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_TaskLeaveFight.BP_SM_TaskLeaveFight_C
/// Size: 0x0019 (25 bytes) (0x000030 - 0x000049) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UBP_SM_TaskLeaveFight_C : public UASMTask
{ 
public:
	int32_t                                            ___gPW_;                                                    // 0x0030   (0x0004)  
	int32_t                                            null;                                                       // 0x0034   (0x0004)  
	int32_t                                            US_k;                                                       // 0x0038   (0x0004)  
	bool                                               _f_T;                                                       // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x003D   (0x0003)  MISSED
	int32_t                                            null0;                                                      // 0x0040   (0x0004)  
	int32_t                                            _1__b_w;                                                    // 0x0044   (0x0004)  
	bool                                               _f_T_O_u;                                                   // 0x0048   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ActionStopMontage.BP_SM_ActionStopMontage_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBP_SM_ActionStopMontage_C : public UASMAction
{ 
public:
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ActionDispatchEvent.BP_SM_ActionDispatchEvent_C
/// Size: 0x0010 (16 bytes) (0x000030 - 0x000040) align 8 pad: 0x0000
class UBP_SM_ActionDispatchEvent_C : public UASMAction
{ 
public:
	FString                                            _m_S_;                                                      // 0x0030   (0x0010)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ActionActivateSkillGroup.BP_SM_ActionActivateSkillGroup_C
/// Size: 0x0005 (5 bytes) (0x000030 - 0x000035) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UBP_SM_ActionActivateSkillGroup_C : public UASMAction
{ 
public:
	int32_t                                            configId;                                                   // 0x0030   (0x0004)  
	bool                                               _o;                                                         // 0x0034   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ActionActivatePart.BP_SM_ActionActivatePart_C
/// Size: 0x0011 (17 bytes) (0x000030 - 0x000041) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UBP_SM_ActionActivatePart_C : public UASMAction
{ 
public:
	FString                                            __M;                                                        // 0x0030   (0x0010)  
	bool                                               _o;                                                         // 0x0040   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ActionCue.BP_SM_ActionCue_C
/// Size: 0x0010 (16 bytes) (0x000030 - 0x000040) align 8 pad: 0x0000
class UBP_SM_ActionCue_C : public UASMAction
{ 
public:
	TArray<int64_t>                                    CueIds;                                                     // 0x0030   (0x0010)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ActionChangeInstState.BP_SM_ActionChangeInstState_C
/// Size: 0x000C (12 bytes) (0x000030 - 0x00003C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_SM_ActionChangeInstState_C : public UASMAction
{ 
public:
	FGameplayTag                                       Tag;                                                        // 0x0030   (0x000C)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ActionEnterFight.BP_SM_ActionEnterFight_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBP_SM_ActionEnterFight_C : public UASMAction
{ 
public:
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ActionResetStatus.BP_SM_ActionResetStatus_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBP_SM_ActionResetStatus_C : public UASMAction
{ 
public:
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ActionRemoveBuff.BP_SM_ActionRemoveBuff_C
/// Size: 0x0008 (8 bytes) (0x000030 - 0x000038) align 8 pad: 0x0000
class UBP_SM_ActionRemoveBuff_C : public UASMAction
{ 
public:
	int64_t                                            BuffID;                                                     // 0x0030   (0x0008)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ActionAddBuff.BP_SM_ActionAddBuff_C
/// Size: 0x0008 (8 bytes) (0x000030 - 0x000038) align 8 pad: 0x0000
class UBP_SM_ActionAddBuff_C : public UASMAction
{ 
public:
	int64_t                                            BuffID;                                                     // 0x0030   (0x0008)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_FSM_Node.BP_FSM_Node_C
/// Size: 0x0048 (72 bytes) (0x0000A8 - 0x0000F0) align 8 pad: 0x0000
class UBP_FSM_Node_C : public UKuroStateMachineBase
{ 
public:
	int32_t                                            _b__;                                                       // 0x00A8   (0x0004)  
	float                                              _c__;                                                       // 0x00AC   (0x0004)  
	TArray<int64_t>                                    ____B;                                                      // 0x00B0   (0x0010)  
	TArray<int64_t>                                    __eQ_e_m_;                                                  // 0x00C0   (0x0010)  
	TArray<int64_t>                                    null;                                                       // 0x00D0   (0x0010)  
	TArray<FGameplayTag>                               ____T;                                                      // 0x00E0   (0x0010)  
};

/// Class /Game/Aki/TypeScript/Game/Effect/TsEffectActor.TsEffectActor_C
/// Size: 0x0010 (16 bytes) (0x0002A8 - 0x0002B8) align 8 pad: 0x0000
class ATsEffectActor_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	// void GetHandle(int32_t& Handle);                                                                                         // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetEffectPath();                                                                                                 // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetHandle(int32_t Handle);                                                                                          // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void RemoveHandle();                                                                                                     // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsEffectActor(int32_t EntryPoint);                                                                 // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionTimer.BP_SM_ConditionTimer_C
/// Size: 0x0008 (8 bytes) (0x000038 - 0x000040) align 8 pad: 0x0000
class UBP_SM_ConditionTimer_C : public UASMConditionBase
{ 
public:
	int32_t                                            MinTime;                                                    // 0x0038   (0x0004)  
	int32_t                                            MaxTime;                                                    // 0x003C   (0x0004)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_ConditionLeaveFight.BP_SM_ConditionLeaveFight_C
/// Size: 0x0000 (0 bytes) (0x000038 - 0x000038) align 8 pad: 0x0000
class UBP_SM_ConditionLeaveFight_C : public UASMConditionBase
{ 
public:
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_FSM_ConditionTag.BP_FSM_ConditionTag_C
/// Size: 0x000D (13 bytes) (0x000038 - 0x000045) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UBP_FSM_ConditionTag_C : public UKuroStateMachineConditionBase
{ 
public:
	FGameplayTag                                       Tag;                                                        // 0x0038   (0x000C)  
	bool                                               CheckExist;                                                 // 0x0044   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_FSM_ConditionCheckState.BP_FSM_ConditionCheckState_C
/// Size: 0x0011 (17 bytes) (0x000038 - 0x000049) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UBP_FSM_ConditionCheckState_C : public UKuroStateMachineConditionBase
{ 
public:
	TArray<FString>                                    States;                                                     // 0x0038   (0x0010)  
	bool                                               Activated;                                                  // 0x0048   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_FSM_ConditionSkillEnd.BP_FSM_ConditionSkillEnd_C
/// Size: 0x0000 (0 bytes) (0x000038 - 0x000038) align 8 pad: 0x0000
class UBP_FSM_ConditionSkillEnd_C : public UKuroStateMachineConditionBase
{ 
public:
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_FSM_ConditionHate.BP_FSM_ConditionHate_C
/// Size: 0x0001 (1 bytes) (0x000038 - 0x000039) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UBP_FSM_ConditionHate_C : public UKuroStateMachineConditionBase
{ 
public:
	bool                                               HasHateTarget;                                              // 0x0038   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/Monster/Common/SAiAttributeRate.SAiAttributeRate
/// Size: 0x0014 (20 bytes) (0x000000 - 0x000014) align 4 pad: 0x0000
struct FSAiAttributeRate
{ 
	TEnumAsByte<EAttributeType>                        Numerator_2_879CECAC4C2242972A16E48082373253;               // 0x0000   (0x0001)  
	TEnumAsByte<EAttributeType>                        Denominator_4_A5C33DA14A9006589C5057B0992CD995;             // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0002   (0x0002)  MISSED
	FFloatRange                                        Range_7_0B0B5A33484A82C4743B49A6F8BE3937;                   // 0x0004   (0x0010)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_FSM_ConditionAttributeRate.BP_FSM_ConditionAttributeRate_C
/// Size: 0x0010 (16 bytes) (0x000038 - 0x000048) align 8 pad: 0x0000
class UBP_FSM_ConditionAttributeRate_C : public UKuroStateMachineConditionBase
{ 
public:
	TArray<FSAiAttributeRate>                          AttributeRates;                                             // 0x0038   (0x0010)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_FSM_ConditionAttribute.BP_FSM_ConditionAttribute_C
/// Size: 0x0050 (80 bytes) (0x000038 - 0x000088) align 8 pad: 0x0000
class UBP_FSM_ConditionAttribute_C : public UKuroStateMachineConditionBase
{ 
public:
	SDK_UNDEFINED(80,987) /* TMap<TEnumAsByte<EAttributeType>, FFloatRange> */ __um(Attributes);                   // 0x0038   (0x0050)  
};

/// Class /Game/Aki/Render/RuntimeBP/Effect/Scene/SceneEffectStatePostVolume.SceneEffectStatePostVolume_C
/// Size: 0x0018 (24 bytes) (0x0002A8 - 0x0002C0) align 8 pad: 0x0000
class ASceneEffectStatePostVolume_C : public AActor
{ 
public:
	class UKuroPostProcessComponent*                   KuroPostProcess;                                            // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	bool                                               Enabled;                                                    // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02B9   (0x0003)  MISSED
	float                                              Value;                                                      // 0x02BC   (0x0004)  
	// void SetToxicFog_Debug();                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetWall_Debug();                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetEffect(float Value);                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void DisableVolume();                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EnableVolume();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetToxicFog(float Value);                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetAirWall(float Value);                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/NPC/Animal/BPI_AnimalEcological.BPI_AnimalEcological_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPI_AnimalEcological_C : public UInterface
{ 
public:
	// void SystemUiEnd();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SystemUiStart();                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void FeedStart(FGameplayTag GameplayTag);                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void GetCurrentActionTime(float& ActionTime);                                                                            // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void NoneStateEnd();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void NoneStateStart();                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void StateMachineInitializationComplete();                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void InteractEnd();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void InteractStart();                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void IdleEnd();                                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void IdleStart();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UnderAttackEnd();                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UnderAttackStart();                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AlertEnd();                                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AlertStart();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void TakeOffEnd();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void TakeOffStart();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
};

/// Struct /Game/Aki/Render/RuntimeBP/StateMachineEffect/SEffectStateInfo.SEffectStateInfo
/// Size: 0x0150 (336 bytes) (0x000000 - 0x000150) align 8 pad: 0x0000
struct FSEffectStateInfo
{ 
	float                                              StateTransitionTime_67_3DD750234A75325489136994A0DCED5C;    // 0x0000   (0x0004)  
	float                                              PreLoopTime_11_72CEC72C4ED64385654C5AB966B95978;            // 0x0004   (0x0004)  
	float                                              LoopTime_31_224DE317481D8C3195F97692EED77972;               // 0x0008   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(80,988) /* TMap<FName, FSEffectStateFloatCurve> */ __um(FloatInfos_44_A616367C4DA7C9CCD35BADA15FF37CE2); // 0x0010   (0x0050)  
	SDK_UNDEFINED(80,989) /* TMap<FName, FSEffectStateLinearColorCurve> */ __um(LinearColorInfos_45_94E48AED44A9A6653B2A4D978AB58D25); // 0x0060   (0x0050)  
	SDK_UNDEFINED(80,990) /* TMap<FName, FSStateBasedEffectFloatCurveSection> */ __um(StaticMeshFloatInfo_63_D63F21AB4EBFA038D23445A837CB06EF); // 0x00B0   (0x0050)  
	SDK_UNDEFINED(80,991) /* TMap<FName, FSStateBasedEffectLinearColorCurveSection> */ __um(StaticMeshLinearColorInfo_64_D16C51EF4274DE1AFD95799268A1AE50); // 0x0100   (0x0050)  
};

/// Class /Game/Aki/Render/RuntimeBP/StateMachineEffect/PD_StateMachineEffect.PD_StateMachineEffect_C
/// Size: 0x06D0 (1744 bytes) (0x000038 - 0x000708) align 8 pad: 0x0000
class UPD_StateMachineEffect_C : public UPrimaryDataAsset
{ 
public:
	FSEffectStateInfo                                  state1;                                                     // 0x0038   (0x0150)  
	FSEffectStateInfo                                  State2;                                                     // 0x0188   (0x0150)  
	FSEffectStateInfo                                  State3;                                                     // 0x02D8   (0x0150)  
	FSEffectStateInfo                                  State4;                                                     // 0x0428   (0x0150)  
	FSEffectStateInfo                                  State5;                                                     // 0x0578   (0x0150)  
	TArray<class UStaticMesh*>                         StaticMeshes;                                               // 0x06C8   (0x0010)  
	TArray<class UNiagaraSystem*>                      NiagaraSystems;                                             // 0x06D8   (0x0010)  
	TArray<FTransform>                                 StaticMeshTransform;                                        // 0x06E8   (0x0010)  
	TArray<FTransform>                                 NiagaraParticleTransform;                                   // 0x06F8   (0x0010)  
	// void GetStateInfo(TEnumAsByte<EEffectState> InputState, FSEffectStateInfo& Ret);                                         // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Module/Photograph/TsPhotographerSource.TsPhotographerSource_C
/// Size: 0x0008 (8 bytes) (0x0002A8 - 0x0002B0) align 8 pad: 0x0000
class ATsPhotographerSource_C : public AActor
{ 
public:
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02A8   (0x0008)  
};

/// Class /Game/Aki/TypeScript/Game/Module/Photograph/TsPhotographer.TsPhotographer_C
/// Size: 0x0018 (24 bytes) (0x0002A8 - 0x0002C0) align 8 pad: 0x0000
class ATsPhotographer_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USpringArmComponent*                         CameraArm;                                                  // 0x02B0   (0x0008)  
	class UCapsuleComponent*                           CapsuleCollision;                                           // 0x02B8   (0x0008)  
	// void RefreshDitherEffect();                                                                                              // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void Initialize();                                                                                                       // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void SetPlayerSourceLocation(FVector Location);                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void AddSourcePitchInput(float Pitch);                                                                                   // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void ResetCamera();                                                                                                      // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// float GetFov();                                                                                                          // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetFov(float Length);                                                                                               // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// FTransform GetCameraInitializeTransform();                                                                               // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetCameraInitializeTransform(FTransform Transform);                                                                 // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void AddSourceYawInput(float Yaw);                                                                                       // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveDestroyed();                                                                                                 // [0x13db470] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x13db470] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsPhotographer(int32_t EntryPoint);                                                                // [0x13db470] Final|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/World/Debug/TsEntityDebugInfoManager.TsEntityDebugInfoManager_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UTsEntityDebugInfoManager_C : public UObject
{ 
public:
	// class AActor* GetDebugEntityActor(int32_t EntityID);                                                                     // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetDebugBaseInfo(int32_t EntityID);                                                                              // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetSelectedEntityId(FString Label);                                                                              // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetEntityPbDataId(int32_t EntityID);                                                                             // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetEntityCommonTagDebugString(int32_t EntityID);                                                                 // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetDebugEntityName(int32_t EntityID);                                                                            // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// TArray<FString> GetDebugEntityNameList();                                                                                // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetInteractionDebugInfos(int32_t entityId1);                                                                     // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/GamePlay/StaticSceneInteraction/BP_GlobalGameplayPostProcess.BP_GlobalGameplayPostProcess_C
/// Size: 0x0010 (16 bytes) (0x0002A8 - 0x0002B8) align 8 pad: 0x0000
class ABP_GlobalGameplayPostProcess_C : public AActor
{ 
public:
	class UKuroPostProcessComponent*                   KuroPostProcess;                                            // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	// void UpdateVignette(float VignetteIntensity);                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Render/Scene/Item/MaterialController/ItemMaterialDataMap.ItemMaterialDataMap_C
/// Size: 0x0058 (88 bytes) (0x0002A8 - 0x000300) align 8 pad: 0x0000
class AItemMaterialDataMap_C : public AActor
{ 
public:
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02A8   (0x0008)  
	SDK_UNDEFINED(80,992) /* TMap<float, UItemMaterialControllerActorData_C*> */ __um(Map);                        // 0x02B0   (0x0050)  
};

/// Class /Game/Aki/TypeScript/Game/Module/Scene3DUI/TsSceneUiTag.TsSceneUiTag_C
/// Size: 0x0038 (56 bytes) (0x0002A8 - 0x0002E0) align 8 pad: 0x0000
class ATsSceneUiTag_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	bool                                               CalculateCamera;                                            // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02B9   (0x0007)  MISSED
	TArray<class ATsSceneUiTag_C*>                     BindUiTagArray;                                             // 0x02C0   (0x0010)  
	FString                                            SceneUiTag;                                                 // 0x02D0   (0x0010)  
	// bool OnCanTick();                                                                                                        // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x13db470] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x13db470] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsSceneUiTag(int32_t EntryPoint);                                                                  // [0x13db470] Final|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Module/Scene3DUI/TsSceneDecorativeUiActor.TsSceneDecorativeUiActor_C
/// Size: 0x0005 (5 bytes) (0x0002E0 - 0x0002E5) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class ATsSceneDecorativeUiActor_C : public ATsSceneUiTag_C
{ 
public:
	float                                              ShowDistance;                                               // 0x02E0   (0x0004)  
	bool                                               IsFaceToCharacter;                                          // 0x02E4   (0x0001)  
	// void DrawDistance();                                                                                                     // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void Destroy3dUi();                                                                                                      // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void Create3dUi();                                                                                                       // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Recorder/TsAnimNotifyStateAddMaterialController.TsAnimNotifyStateAddMaterialController_C
/// Size: 0x0010 (16 bytes) (0x000048 - 0x000058) align 8 pad: 0x0000
class UTsAnimNotifyStateAddMaterialController_C : public UKuroAnimNotifyState
{ 
public:
	class UPD_CharacterControllerData_C*               ControllerData;                                             // 0x0048   (0x0008)  
	class UObject*                                     UserData;                                                   // 0x0050   (0x0008)  
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Recorder/TsAnimNotifyStateAddCharRendering.TsAnimNotifyStateAddCharRendering_C
/// Size: 0x0001 (1 bytes) (0x000048 - 0x000049) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsAnimNotifyStateAddCharRendering_C : public UKuroAnimNotifyState
{ 
public:
	TEnumAsByte<ECharacterRenderingType>               renderType;                                                 // 0x0048   (0x0001)  
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Recorder/TsAnimNotifyAddCharRendering.TsAnimNotifyAddCharRendering_C
/// Size: 0x0001 (1 bytes) (0x000048 - 0x000049) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsAnimNotifyAddCharRendering_C : public UKuroAnimNotify
{ 
public:
	TEnumAsByte<ECharacterRenderingType>               renderType;                                                 // 0x0048   (0x0001)  
	// bool Received_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                        // [0x13db470] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Recorder/TsRecordGameplayCue.TsRecordGameplayCue_C
/// Size: 0x0020 (32 bytes) (0x0002A8 - 0x0002C8) align 8 pad: 0x0000
class ATsRecordGameplayCue_C : public AKuroRecordEffect
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	int32_t                                            configId;                                                   // 0x02B8   (0x0004)  
	FVector                                            Position0;                                                  // 0x02BC   (0x000C)  
	// void OnPlay();                                                                                                           // [0x13db470] Event|Public|BlueprintCallable|BlueprintEvent 
	// void OnStop();                                                                                                           // [0x13db470] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsRecordGameplayCue(int32_t EntryPoint);                                                           // [0x13db470] Final|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Recorder/TsRecordEffect.TsRecordEffect_C
/// Size: 0x0030 (48 bytes) (0x0002A8 - 0x0002D8) align 8 pad: 0x0000
class ATsRecordEffect_C : public AKuroRecordEffect
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	class UEffectModelBase*                            EffectModelData;                                            // 0x02B8   (0x0008)  
	int32_t                                            LifeTimeType;                                               // 0x02C0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02C4   (0x0004)  MISSED
	FString                                            EffectModelDataPath;                                        // 0x02C8   (0x0010)  
	// void TryAddEffectView();                                                                                                 // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void OnStop();                                                                                                           // [0x13db470] Event|Public|BlueprintCallable|BlueprintEvent 
	// void OnPlay();                                                                                                           // [0x13db470] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x13db470] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x13db470] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x13db470] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsRecordEffect(int32_t EntryPoint);                                                                // [0x13db470] Final|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/AnimNotify/AnimNotifyStateGhost.AnimNotifyStateGhost_C
/// Size: 0x0040 (64 bytes) (0x000048 - 0x000088) align 8 pad: 0x0000
class UAnimNotifyStateGhost_C : public UKuroAnimNotifyState
{ 
public:
	float                                              SpawnRate;                                                  // 0x0048   (0x0004)  
	float                                              GhostLifeTime;                                              // 0x004C   (0x0004)  
	SDK_UNDEFINED(48,993) /* TWeakObjectPtr<UEffectModelBase*> */ __um(EffectDataAssetRef);                        // 0x0050   (0x0030)  
	bool                                               UseSpawnRate;                                               // 0x0080   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0081   (0x0003)  MISSED
	float                                              SpawnInterval;                                              // 0x0084   (0x0004)  
	// bool K2_ValidateAssets();                                                                                                // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/AnimNotify/AnimNotifyStateEffect.AnimNotifyStateEffect_C
/// Size: 0x00BC (188 bytes) (0x000080 - 0x00013C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UAnimNotifyStateEffect_C : public UKuroEffectMakerANS
{ 
public:
	bool                                               UseSocketTransform;                                         // 0x0080   (0x0001)  
	bool                                               UseClipboardTransform;                                      // 0x0081   (0x0001)  
	bool                                               DetachWhenSkillEnd;                                         // 0x0082   (0x0001)  
	TEnumAsByte<ESkillEffectType>                      WhenSkillEnd;                                               // 0x0083   (0x0001)  
	bool                                               FasterStop;                                                 // 0x0084   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0085   (0x0003)  MISSED
	SDK_UNDEFINED(48,994) /* TWeakObjectPtr<UEffectModelBase*> */ __um(EffectDataAssetRef);                        // 0x0088   (0x0030)  
	float                                              AutoDetachTime;                                             // 0x00B8   (0x0004)  
	bool                                               PlayOnEnd;                                                  // 0x00BC   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x00BD   (0x0003)  MISSED
	FGameplayTagContainer                              WithoutTag;                                                 // 0x00C0   (0x0020)  
	bool                                               NeedAnyTag;                                                 // 0x00E0   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x00E1   (0x0007)  MISSED
	SDK_UNDEFINED(80,995) /* TMap<FGameplayTag, bool> */ __um(PlayNeedTags);                                       // 0x00E8   (0x0050)  
	bool                                               IsWeaponEffect;                                             // 0x0138   (0x0001)  
	bool                                               RecycleWhenEnd;                                             // 0x0139   (0x0001)  
	bool                                               AlwaysLoop;                                                 // 0x013A   (0x0001)  
	bool                                               NeedDelayTrigger;                                           // 0x013B   (0x0001)  
	// void AttachEffectToWeapon(class USkeletalMeshComponent* MeshComp, class AActor* Outer, float effectHandle);              // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void CacheEffectHandle(class USkeletalMeshComponent* MeshComp, float effectHandle);                                      // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_PostChangeProperty(FName PropertyName);                                                                          // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_ValidateAssets();                                                                                                // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Effect/Statistics/UEffectStatisticsEntryData.UEffectStatisticsEntryData_C
/// Size: 0x0049 (73 bytes) (0x000030 - 0x000079) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UUEffectStatisticsEntryData_C : public UObject
{ 
public:
	FString                                            Name;                                                       // 0x0030   (0x0010)  
	float                                              ExistingTime;                                               // 0x0040   (0x0004)  
	float                                              DistanceToCamera;                                           // 0x0044   (0x0004)  
	int32_t                                            Importance;                                                 // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
	FString                                            Author;                                                     // 0x0050   (0x0010)  
	int32_t                                            TickCount;                                                  // 0x0060   (0x0004)  
	int32_t                                            CheckType;                                                  // 0x0064   (0x0004)  
	int32_t                                            FactoryType;                                                // 0x0068   (0x0004)  
	FVector                                            Position;                                                   // 0x006C   (0x000C)  
	bool                                               IsPlaying;                                                  // 0x0078   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Render/Effect/Data/EffectModelDecal.EffectModelDecal_C
/// Size: 0x05A8 (1448 bytes) (0x000058 - 0x000600) align 8 pad: 0x0000
class UEffectModelDecal_C : public UEffectModelBase
{ 
public:
	FKuroCurveVector                                   Location;                                                   // 0x0058   (0x01A8)  
	FKuroCurveVector                                   Rotation;                                                   // 0x0200   (0x01A8)  
	FKuroCurveVector                                   Scale;                                                      // 0x03A8   (0x01A8)  
	SDK_UNDEFINED(80,996) /* TMap<FName, FKuroCurveFloat> */ __um(MaterialFloatParameters);                        // 0x0550   (0x0050)  
	SDK_UNDEFINED(80,997) /* TMap<FName, FKuroCurveLinearColor> */ __um(MaterialColorParameters);                  // 0x05A0   (0x0050)  
	class UMaterialInterface*                          DecalMaterialRef;                                           // 0x05F0   (0x0008)  
	float                                              ZFadingFactor;                                              // 0x05F8   (0x0004)  
	float                                              ZFadingPower;                                               // 0x05FC   (0x0004)  
};

/// Class /Game/Aki/Core/Fight/Manager/BP_ActorManager.BP_ActorManager_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBP_ActorManager_C : public UObject
{ 
public:
};

/// Class /Game/Aki/Core/BPI_Tick.BPI_Tick_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPI_Tick_C : public UInterface
{ 
public:
	// void Tick(float DeltaSeconds);                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Sequence/Seq_BP/ABP_Common_NPC_Seq.ABP_Common_NPC_Seq_C
/// Size: 0x0768 (1896 bytes) (0x000378 - 0x000AE0) align 16 pad: 0x0000
class UABP_Common_NPC_Seq_C : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0378   (0x0008)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0380   (0x0008)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0388   (0x0038)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose;                              // 0x03C0   (0x0138)  
	FAnimNode_Slot                                     AnimGraphNode_Slot;                                         // 0x04F8   (0x0060)  
	FAnimNode_CurveSource                              AnimGraphNode_CurveSource;                                  // 0x0558   (0x0040)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace;                        // 0x0598   (0x0020)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone;                                   // 0x05B8   (0x0110)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone0;                                  // 0x06C8   (0x0110)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone1;                                  // 0x07D8   (0x0110)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace;                        // 0x08E8   (0x0020)  
	FAnimNode_Slot                                     AnimGraphNode_Slot2;                                        // 0x0908   (0x0060)  
	FAnimNode_CurveFix                                 AnimGraphNode_CurveFix;                                     // 0x0968   (0x0030)  
	FAnimNode_Slot                                     AnimGraphNode_Slot3;                                        // 0x0998   (0x0060)  
	FAnimNode_CombineCurves                            AnimGraphNode_CombineCurves;                                // 0x09F8   (0x0060)  
	FAnimNode_CombineCurves                            AnimGraphNode_CombineCurves4;                               // 0x0A58   (0x0060)  
	FRotator                                           Add_Bip_001Head;                                            // 0x0AB8   (0x000C)  
	FRotator                                           Add_Bip_001Neck;                                            // 0x0AC4   (0x000C)  
	FRotator                                           Add_Bip_001Spine_2;                                         // 0x0AD0   (0x000C)  
	float                                              MouthAlpha;                                                 // 0x0ADC   (0x0004)  
	// void AnimGraph(FPoseLink InPose, FPoseLink& AnimGraph);                                                                  // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_ABP_Common_NPC_Seq(int32_t EntryPoint);                                                            // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Input/ControlMonster/ICM_AutomaticFlight_DataBase.ICM_AutomaticFlight_DataBase_C
/// Size: 0x0028 (40 bytes) (0x000038 - 0x000060) align 8 pad: 0x0000
class UICM_AutomaticFlight_DataBase_C : public UKuroBpDataAsset
{ 
public:
	float                                              NO__L;                                                      // 0x0038   (0x0004)  
	float                                              _h_Q__;                                                     // 0x003C   (0x0004)  
	float                                              ____L;                                                      // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
	class UCurveVector*                                ______;                                                     // 0x0048   (0x0008)  
	float                                              MR_Tt___e;                                                  // 0x0050   (0x0004)  
	int32_t                                            MR_Tt___e0;                                                 // 0x0054   (0x0004)  
	float                                              _T_Tt___e;                                                  // 0x0058   (0x0004)  
	int32_t                                            _T_Tt___e1;                                                 // 0x005C   (0x0004)  
};

/// Class /Game/Aki/Render/RuntimeBP/ScreenEffect/Controller/SE_ControllerInterface.SE_ControllerInterface_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class USE_ControllerInterface_C : public UInterface
{ 
public:
	// void ApplyEnvironmentFactor(float EnvironmentFactor);                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BeforeStart();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ApplyVisibility(bool Visibility);                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ApplyAlpha(float ALPHA);                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void End(float Time);                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Loop(float Time);                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Start(float Time);                                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Character/Common/Blueprint/Utils/TsControlBlueprintFunctionLibrary.TsControlBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UTsControlBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// void SetUseControllerRotationRoll(int32_t EntityID, bool Value, class UObject* __WorldContext);                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetUseControllerRotationYaw(int32_t EntityID, bool Value, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetUseControllerRotationPitch(int32_t EntityID, bool Value, class UObject* __WorldContext);                         // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void BpInputReceiveEndPlay(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void StopKuroForceFeedback(class UKuroForceFeedbackEffect* forceFeedbackEffect1, FName tag1, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void PlayKuroForceFeedback(class UKuroForceFeedbackEffect* ForceFeedbackEffect, FName Tag, bool bLooping, bool bIgnoreTimeDilation, bool bPlayWhilePaused, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FVector2D GetMoveDirection(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FVector2D GetMoveVector(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FVector2D GetWorldMoveDirectionCache(int32_t EntityID, class UObject* __WorldContext);                                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FVector2D GetMoveDirectionCache(int32_t EntityID, class UObject* __WorldContext);                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FVector2D GetMoveVectorCache(int32_t EntityID, class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Render/Scene/Item/MaterialController/ItemMaterialControllerGlobalData.ItemMaterialControllerGlobalData_C
/// Size: 0x0D98 (3480 bytes) (0x000038 - 0x000DD0) align 8 pad: 0x0000
class UItemMaterialControllerGlobalData_C : public UPrimaryDataAsset
{ 
public:
	float                                              StartTime;                                                  // 0x0038   (0x0004)  
	float                                              LoopTime;                                                   // 0x003C   (0x0004)  
	float                                              EndTime;                                                    // 0x0040   (0x0004)  
	bool                                               EnableBaseColorScale;                                       // 0x0044   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0045   (0x0003)  MISSED
	FKuroCurveFloat                                    BaseColorScale;                                             // 0x0048   (0x0090)  
	bool                                               EnableAddEmissionColor;                                     // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
	FKuroCurveLinearColor                              AddEmissionColor;                                           // 0x00E0   (0x0220)  
	bool                                               EnableRimLight;                                             // 0x0300   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0301   (0x0007)  MISSED
	FKuroCurveLinearColor                              AddRimLightColor;                                           // 0x0308   (0x0220)  
	bool                                               EnableScanningOutline;                                      // 0x0528   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0529   (0x0007)  MISSED
	FKuroCurveLinearColor                              ScanningOutlineColor;                                       // 0x0530   (0x0220)  
	FKuroCurveFloat                                    ScanningOutlineWidth;                                       // 0x0750   (0x0090)  
	FKuroCurveFloat                                    RimWidth;                                                   // 0x07E0   (0x0090)  
	FKuroCurveFloat                                    RimPower;                                                   // 0x0870   (0x0090)  
	FKuroCurveFloat                                    RimMix;                                                     // 0x0900   (0x0090)  
	FKuroCurveLinearColor                              ScanningOutlineTexScaleOffset;                              // 0x0990   (0x0220)  
	FKuroCurveLinearColor                              ScanningBrokenTexScaleOffset;                               // 0x0BB0   (0x0220)  
};

/// Class /Game/Aki/TypeScript/Game/Render/AudioVisualization/AudioVisualizationInstanceBase.AudioVisualizationInstanceBase_C
/// Size: 0x0020 (32 bytes) (0x0002A8 - 0x0002C8) align 8 pad: 0x0000
class AAudioVisualizationInstanceBase_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	FString                                            Identifier;                                                 // 0x02B8   (0x0010)  
	// void MidiB3Off(char Velocity1);                                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiAs3Off(char Velocity1);                                                                                         // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiA3Off(char Velocity1);                                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiGs3Off(char Velocity1);                                                                                         // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiG3Off(char Velocity1);                                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiFs3Off(char Velocity1);                                                                                         // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiF3Off(char Velocity1);                                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiE3Off(char Velocity1);                                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiDs3Off(char Velocity1);                                                                                         // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiD3Off(char Velocity1);                                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiCs3Off(char Velocity1);                                                                                         // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiC3Off(char Velocity1);                                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiB3On(char Velocity1);                                                                                           // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiAs3On(char Velocity1);                                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiA3On(char Velocity1);                                                                                           // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiGs3On(char Velocity1);                                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiG3On(char Velocity1);                                                                                           // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiFs3On(char Velocity1);                                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiF3On(char Velocity1);                                                                                           // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiE3On(char Velocity1);                                                                                           // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiDs3On(char Velocity1);                                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiD3On(char Velocity1);                                                                                           // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiCs3On(char Velocity1);                                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiC3On(char Velocity1);                                                                                           // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void StartInternal();                                                                                                    // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void MidiBpm();                                                                                                          // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void CallBackInternal(class UAkCallbackInfo* CallbackInfo, EAkCallbackType CallbackType, FString State);                 // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void EndInternal();                                                                                                      // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x13db470] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_AudioVisualizationInstanceBase(int32_t EntryPoint);                                                // [0x13db470] Final|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Render/RuntimeBP/ScreenEffect/Controller/SE_ControllerBase.SE_ControllerBase_C
/// Size: 0x0008 (8 bytes) (0x0000C0 - 0x0000C8) align 8 pad: 0x0000
class USE_ControllerBase_C : public UActorComponent
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00C0   (0x0008)  
	// void ApplyVisibility(bool Visibility);                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BeforeStart();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void End(float Time);                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Start(float Time);                                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Loop(float Time);                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ApplyAlpha(float ALPHA);                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ApplyEnvironmentFactor(float EnvironmentFactor);                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_SE_ControllerBase(int32_t EntryPoint);                                                             // [0x25a7960] Final                
};

/// Class /Game/Aki/Render/RuntimeBP/ScreenEffect/Controller/SE_UISpriteController.SE_UISpriteController_C
/// Size: 0x0020 (32 bytes) (0x0000C8 - 0x0000E8) align 8 pad: 0x0000
class USE_UISpriteController_C : public USE_ControllerBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00C8   (0x0008)  
	class UPD_SE_ControllerCommonData_C*               Data;                                                       // 0x00D0   (0x0008)  
	TArray<class UMaterialInstanceDynamic*>            CachedMaterial;                                             // 0x00D8   (0x0010)  
	// void UpdateComponentAlpha(float ALPHA);                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateComponent(TEnumAsByte<E_SE_PlayState> State, float Time);                                                     // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void Start(float Time);                                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void End(float Time);                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Loop(float Time);                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ApplyAlpha(float ALPHA);                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_SE_UISpriteController(int32_t EntryPoint);                                                         // [0x25a7960] Final                
};

/// Struct /Game/Aki/Render/RuntimeBP/Character/MaterialController/SMaterialControllerFloatGroup.SMaterialControllerFloatGroup
/// Size: 0x01B0 (432 bytes) (0x000000 - 0x0001B0) align 8 pad: 0x0000
struct FSMaterialControllerFloatGroup
{ 
	FKuroCurveFloat                                    Start_19_BA8F63454A2DEDC93ED9DEA8D3925117;                  // 0x0000   (0x0090)  
	FKuroCurveFloat                                    Loop_20_269796ED40C12C1F3C6137AB71336D35;                   // 0x0090   (0x0090)  
	FKuroCurveFloat                                    End_21_B983B4EA4F04FBE1C1F527AC87EF2D7B;                    // 0x0120   (0x0090)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Character/MaterialController/SMaterialControllerFloatParameter.SMaterialControllerFloatParameter
/// Size: 0x01C0 (448 bytes) (0x000000 - 0x0001C0) align 8 pad: 0x0000
struct FSMaterialControllerFloatParameter
{ 
	FName                                              ParameterName_7_4E3CB6A64D4786B0B1770AB7227C091E;           // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FSMaterialControllerFloatGroup                     ParameterValue_9_DEF54BD34DD123D025B610860838C2B6;          // 0x0010   (0x01B0)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Character/MaterialController/SMaterialControllerColorGroup.SMaterialControllerColorGroup
/// Size: 0x0660 (1632 bytes) (0x000000 - 0x000660) align 8 pad: 0x0000
struct FSMaterialControllerColorGroup
{ 
	FKuroCurveLinearColor                              Start_22_BA8F63454A2DEDC93ED9DEA8D3925117;                  // 0x0000   (0x0220)  
	FKuroCurveLinearColor                              Loop_23_895EE8EE499792729D0174B5E037A717;                   // 0x0220   (0x0220)  
	FKuroCurveLinearColor                              End_24_466C50DC43B03432A8CC1D82264EAFB5;                    // 0x0440   (0x0220)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Character/MaterialController/SMaterialControllerColorParameter.SMaterialControllerColorParameter
/// Size: 0x0670 (1648 bytes) (0x000000 - 0x000670) align 8 pad: 0x0000
struct FSMaterialControllerColorParameter
{ 
	FName                                              ParameterName_2_63DBF67741F1C36DF997F194BA36AA4F;           // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FSMaterialControllerColorGroup                     ParameterValue_6_CC60B0BF4272CF87B5FE94AFE3803E42;          // 0x0010   (0x0660)  
};

/// Struct /Game/Aki/Render/RuntimeBP/ScreenEffect/Data/S_SE_ControllerCommon.S_SE_ControllerCommon
/// Size: 0x0021 (33 bytes) (0x000000 - 0x000021) align 8 pad: 0x0001
#pragma pack(push, 0x1)
struct FS_SE_ControllerCommon
{ 
	TArray<FSMaterialControllerFloatParameter>         CustomFloats_20_BEFE4A72466DBBF31C7BE88043697CC2;           // 0x0000   (0x0010)  
	TArray<FSMaterialControllerColorParameter>         CustomColors_23_D46E551F4EE49A33813738920A17A1A1;           // 0x0010   (0x0010)  
	bool                                               bActive_27_2CF94B2C45421EB008661E9B70C1D57E;                // 0x0020   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/ScreenEffect/Data/PD_SE_ControllerCommonData.PD_SE_ControllerCommonData_C
/// Size: 0x0028 (40 bytes) (0x000038 - 0x000060) align 8 pad: 0x0000
class UPD_SE_ControllerCommonData_C : public UPrimaryDataAsset
{ 
public:
	FS_SE_ControllerCommon                             Data;                                                       // 0x0038   (0x0028)  
};

/// Class /Game/Aki/Render/RuntimeBP/ScreenEffect/Controller/SE_UISpriteFadeController.SE_UISpriteFadeController_C
/// Size: 0x0008 (8 bytes) (0x0000E8 - 0x0000F0) align 8 pad: 0x0000
class USE_UISpriteFadeController_C : public USE_UISpriteController_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00E8   (0x0008)  
	// void ApplyVisibility(bool Visibility);                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_SE_UISpriteFadeController(int32_t EntryPoint);                                                     // [0x25a7960] Final                
};

/// Class /Game/Aki/TypeScript/Game/Controller/TsAxisHandle.TsAxisHandle_C
/// Size: 0x0018 (24 bytes) (0x000030 - 0x000048) align 8 pad: 0x0000
class UTsAxisHandle_C : public UObject
{ 
public:
	class ATsBasePlayerController_C*                   PlayerController;                                           // 0x0030   (0x0008)  
	FString                                            AxisName;                                                   // 0x0038   (0x0010)  
	// void OnInputAxis(float Value);                                                                                           // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Controller/TsActionHandle.TsActionHandle_C
/// Size: 0x0018 (24 bytes) (0x000030 - 0x000048) align 8 pad: 0x0000
class UTsActionHandle_C : public UObject
{ 
public:
	class ATsBasePlayerController_C*                   PlayerController;                                           // 0x0030   (0x0008)  
	FString                                            ActionName;                                                 // 0x0038   (0x0010)  
	// void OnReleaseAction(FKey Key);                                                                                          // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnPressAction(FKey Key);                                                                                            // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Character/Common/Blueprint/Utils/TsMeshAnimBlueprintFunctionLibrary.TsMeshAnimBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UTsMeshAnimBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// bool IsNpcTurning(int32_t EntityID, class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AnimTurnLog(int32_t EntityID, class UObject* __WorldContext);                                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void UpdateFootstepAudioEvent(int32_t EntityID, int32_t __r____VE, FSFootstepAudioEventParam Params, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetIsCurrentWeaponHideEffectPlaying(int32_t EntityID, class UObject* __WorldContext);                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ChangeTickOverlap(int32_t EntityID, bool Overlap, class UObject* __WorldContext);                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ChangeWeaponHangState(int32_t EntityID, int32_t WeaponState, float lerpTime, TArray<FName>& Sockets, TArray<FTransform>& Transforms, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdateAnimInfoMeshAnimRoleNpc(int32_t EntityID, class UBP_ABPLogicParams_C* animLogicParams, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void UpdateAnimInfoMeshAnim(int32_t EntityID, class UBP_ABPLogicParams_C* animLogicParams, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// class UAnimInstance* MainAnimInstance(int32_t EntityID, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetSightDirectEnable(int32_t EntityID, bool V, class UObject* __WorldContext);                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetTransformWithModelBuffer(int32_t EntityID, FTransform Transform, float TimeLength, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetWeaponBreachLevel(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetIkMeshOffset(int32_t EntityID, float Offset, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FString GetRoleFootStepState(int32_t EntityID, class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetDegMovementSlope(int32_t EntityID, class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ChangeMeshAnim(int32_t EntityID, class USkeletalMesh* meshClass, class UClass* AnimBlueprintClass, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void HideHulu(int32_t EntityID, bool bHidden, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void HideWeapon(int32_t EntityID, bool Hide, int32_t Index, bool HideEffect, bool useHighPriority, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetRandomStandActionIndex(int32_t EntityID, class UObject* __WorldContext);                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ChangeWeapon(int32_t EntityID, FSWeaponSocketItem weaponSocket, class UObject* __WorldContext);                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int32_t GetCurrentWeaponHangState(int32_t EntityID, class UObject* __WorldContext);                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void HideWeaponsWhenHideBones(int32_t EntityID, bool Hide, FName SocketName, class UObject* __WorldContext);             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void EnterBattleIdle(int32_t EntityID, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetBattleIdleTime(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// class UMeshComponent* GetHulu(int32_t EntityID, class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FVector GetSightDirect(int32_t EntityID, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Aki/TypeScript/Game/LevelGamePlay/LevelGamePlayBlueprintFunctionLibrary.LevelGamePlayBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class ULevelGamePlayBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// bool ApplyScanEffect(class AActor* InActor, class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetScanInteractionEffectMaxDistance(class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetScanMaxDistance(class UObject* __WorldContext);                                                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SceneInteractionBind(class AActor* Actor, FString seqName, FString EventName, class UObject* __WorldContext);       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ClearAllScanEffects(class UObject* __WorldContext);                                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Recorder/TsBpFxEffect.TsBpFxEffect_C
/// Size: 0x0020 (32 bytes) (0x0002A8 - 0x0002C8) align 8 pad: 0x0000
class ATsBpFxEffect_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	class ATsBpFxEffect_C*                             RecorderShadow;                                             // 0x02B8   (0x0008)  
	bool                                               IsRecorderActor;                                            // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02C1   (0x0003)  MISSED
	float                                              RecordTime;                                                 // 0x02C4   (0x0004)  
	// void TryRecord();                                                                                                        // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnRecordStop();                                                                                                     // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddAutoVectorTrack(FName PropertyName);                                                                             // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddAutoObjectTrack(FName PropertyName);                                                                             // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnRecordStart();                                                                                                    // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddAutoFloatTrack(FName PropertyName);                                                                              // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnRecordTick(float DeltaSeconds);                                                                                   // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsBpFxEffect(int32_t EntryPoint);                                                                  // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Render/RuntimeBP/Scene/Light/PD_HaloPointLightConfig.PD_HaloPointLightConfig_C
/// Size: 0x0088 (136 bytes) (0x000038 - 0x0000C0) align 16 pad: 0x0000
class UPD_HaloPointLightConfig_C : public UPrimaryDataAsset
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0038   (0x0008)  MISSED
	FVector4                                           PC_Halo_Type1;                                              // 0x0040   (0x0010)  
	FVector4                                           PC_Halo_Type2;                                              // 0x0050   (0x0010)  
	FVector4                                           PC_Halo_Type3;                                              // 0x0060   (0x0010)  
	FVector4                                           PC_Halo_Type4;                                              // 0x0070   (0x0010)  
	FVector4                                           Mobile_Halo_Type1;                                          // 0x0080   (0x0010)  
	FVector4                                           Mobile_Halo_Type2;                                          // 0x0090   (0x0010)  
	FVector4                                           Mobile_Halo_Type3;                                          // 0x00A0   (0x0010)  
	FVector4                                           Mobile_Halo_Type4;                                          // 0x00B0   (0x0010)  
};

/// Class /Game/Aki/Render/RuntimeBP/UI/BP_UiSceneRenderingComponent.BP_UiSceneRenderingComponent_C
/// Size: 0x0030 (48 bytes) (0x0000C0 - 0x0000F0) align 8 pad: 0x0000
class UBP_UiSceneRenderingComponent_C : public UActorComponent
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00C0   (0x0008)  
	class ABP_GlobalGI_C*                              BP_GlobalGI;                                                // 0x00C8   (0x0008)  
	bool                                               IsInUiSceneRenderingState;                                  // 0x00D0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00D1   (0x0007)  MISSED
	FString                                            CurUiScenePath;                                             // 0x00D8   (0x0010)  
	class UDirectionalLightComponent*                  MainLightComponent;                                         // 0x00E8   (0x0008)  
	// void OnKuroEndUiScene();                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnKuroStartUiScene(FString uiScenePath);                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Init(class ABP_GlobalGI_C* InGlobalGI);                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_UiSceneRenderingComponent(int32_t EntryPoint);                                                  // [0x25a7960] Final                
};

/// Class /Game/Aki/Render/RuntimeBP/Scene/Light/BP_LevelSequenceHalo.BP_LevelSequenceHalo_C
/// Size: 0x0098 (152 bytes) (0x0002A8 - 0x000340) align 8 pad: 0x0000
class ABP_LevelSequenceHalo_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class UKuroHaloComponent*                          KuroHalo;                                                   // 0x02B0   (0x0008)  
	class UMaterialInstanceDynamic*                    DynamicMaterialInstance;                                    // 0x02B8   (0x0008)  
	bool                                               Enable;                                                     // 0x02C0   (0x0001)  
	bool                                               bAcceptGI;                                                  // 0x02C1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x02C2   (0x0002)  MISSED
	float                                              SizeScale;                                                  // 0x02C4   (0x0004)  
	float                                              IntensityScale;                                             // 0x02C8   (0x0004)  
	float                                              LightExponent;                                              // 0x02CC   (0x0004)  
	float                                              FadeStartRadius;                                            // 0x02D0   (0x0004)  
	float                                              FadeEndRadius;                                              // 0x02D4   (0x0004)  
	class UKuroHaloComponent*                          HaloComponent;                                              // 0x02D8   (0x0008)  
	float                                              DepthFadeDistance;                                          // 0x02E0   (0x0004)  
	float                                              AspectRatio;                                                // 0x02E4   (0x0004)  
	TEnumAsByte<E_BillboardMode>                       FaceCameraMode;                                             // 0x02E8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x02E9   (0x0007)  MISSED
	class UStaticMesh*                                 HaloMesh;                                                   // 0x02F0   (0x0008)  
	float                                              MinDrawDistance;                                            // 0x02F8   (0x0004)  
	float                                              MaxDrawDistance;                                            // 0x02FC   (0x0004)  
	float                                              MinDrawRange;                                               // 0x0300   (0x0004)  
	float                                              MaxDrawRange;                                               // 0x0304   (0x0004)  
	float                                              UseShapeTex;                                                // 0x0308   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x030C   (0x0004)  MISSED
	class UTexture2D*                                  VolumeTex;                                                  // 0x0310   (0x0008)  
	class UPD_HaloPointLightConfig_C*                  HaloPointConfig;                                            // 0x0318   (0x0008)  
	KuroFeatureLevel                                   CurrentFeatureLevel;                                        // 0x0320   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0321   (0x0003)  MISSED
	float                                              LightIntensity;                                             // 0x0324   (0x0004)  
	FLinearColor                                       LightColor;                                                 // 0x0328   (0x0010)  
	float                                              LightAttenRadius;                                           // 0x0338   (0x0004)  
	float                                              LightFalloffExponent;                                       // 0x033C   (0x0004)  
	// void UpdateEditor();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Update();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void GetHaloDrawParameters(float& MinDrawDistance, float& MaxDrawDistance, float& MinDrawRange, float& MaxDrawRange);    // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdateHaloParameter(bool UpdateComponent);                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_LevelSequenceHalo(int32_t EntryPoint);                                                          // [0x25a7960] Final                
};

/// Class /Game/Aki/Render/RuntimeBP/GI/BP_ControlTodTime.BP_ControlTodTime_C
/// Size: 0x0025 (37 bytes) (0x0002B8 - 0x0002DD) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class ABP_ControlTodTime_C : public AKuroEditorTickActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C0   (0x0008)  
	float                                              TodTime;                                                    // 0x02C8   (0x0004)  
	bool                                               EnableTodTime;                                              // 0x02CC   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02CD   (0x0003)  MISSED
	float                                              SunVerticalAngle;                                           // 0x02D0   (0x0004)  
	bool                                               EnableSunVerticalAngle;                                     // 0x02D4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02D5   (0x0003)  MISSED
	float                                              SunHorizontalAngle;                                         // 0x02D8   (0x0004)  
	bool                                               EnableSunHorizontalAngle;                                   // 0x02DC   (0x0001)  
	// void Update();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Protected|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_ControlTodTime(int32_t EntryPoint);                                                             // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Effect/BluePrint/Rain/BP_SnowActor.BP_SnowActor_C
/// Size: 0x0008 (8 bytes) (0x000438 - 0x000440) align 8 pad: 0x0000
class ABP_SnowActor_C : public AKuroRainActor
{ 
public:
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0438   (0x0008)  
};

/// Class /Game/Aki/TypeScript/Game/Module/Sequence/PlotBlueprintFunctionLibrary.PlotBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UPlotBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// void ShowLogo(float Time, class UObject* __WorldContext);                                                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OpenChapterUi(int32_t ChapterState, int32_t ChapterId, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void TriggerCutChange(class UObject* __WorldContext);                                                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteSequenceEvents(FString Key, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ChangePlotTimeOfDay(bool isInherit, int32_t startSecond, int32_t endSecond, int32_t tweenFrame, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void RemoveBurstEyeRenderingMaterial(bool isBoy, class UObject* __WorldContext);                                         // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AddBurstEyeRenderingMaterial(bool isBoy, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ShowNameInput(class UObject* __WorldContext);                                                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ChangePlotWeather(int32_t weatherId, bool isInherit, float TweenTime, class UObject* __WorldContext);               // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void TriggerBlackSequence(class UObject* __WorldContext);                                                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool IsInPerformingPlot(class UObject* __WorldContext);                                                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void StartPlotTs(FString inRes, class UObject* __WorldContext);                                                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void UseEnterMoveMode(class AActor* inCharacter1, class UObject* __WorldContext);                                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ResumeSequence(class UObject* __WorldContext);                                                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void PauseSequence(class UObject* __WorldContext);                                                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SkipCurrentSequence(class UObject* __WorldContext);                                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool IsInSequence(class UObject* __WorldContext);                                                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Character/SimpleNpc/Blueprint/SimpleHolographicComponent.SimpleHolographicComponent_C
/// Size: 0x0088 (136 bytes) (0x0000C0 - 0x000148) align 8 pad: 0x0000
class USimpleHolographicComponent_C : public UActorComponent
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00C0   (0x0008)  
	TArray<class UMaterialInstanceDynamic*>            OL_Materials;                                               // 0x00C8   (0x0010)  
	TArray<class UMaterialInstanceDynamic*>            Other_Materials;                                            // 0x00D8   (0x0010)  
	class UPD_HolographicEffect_C*                     Data;                                                       // 0x00E8   (0x0008)  
	float                                              TimeCounter;                                                // 0x00F0   (0x0004)  
	TEnumAsByte<EHolographicState>                     State;                                                      // 0x00F4   (0x0001)  
	bool                                               bCached;                                                    // 0x00F5   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x00F6   (0x0002)  MISSED
	SDK_UNDEFINED(80,998) /* TMap<USkeletalMeshComponent*, FSHolographicMaterialsCache> */ __um(ComponentMaterialsCache); // 0x00F8   (0x0050)  
	// void StartEffect();                                                                                                      // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void EndEffect();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateMaterialsWithDa(TArray<UMaterialInstanceDynamic*>& Materials, FSHolographicData& SHolographicData);           // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void RemoveNpcEffect();                                                                                                  // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void Clear();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void RevertMaterialParamters(FSMaterialParamCache MaterialCache, class UMaterialInstanceDynamic*& Result);               // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// class UMaterialInstanceDynamic* CacheAndReplace(FSHolographicData& SHolographicData, class UPrimitiveComponent* self2, int32_t ElementIndex, class UMaterialInstanceDynamic* Material, FSMaterialParamCache& CacheResult); // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void CacheMaterialParameters(TArray<FSMaterialControllerFloatParameter>& Floats, TArray<FSMaterialControllerColorParameter>& Colors, class UMaterialInstanceDynamic* Material, bool bReplaceMaterial, int32_t Index, FSMaterialParamCache& Result); // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_SimpleHolographicComponent(int32_t EntryPoint);                                                    // [0x25a7960] Final                
};

/// Class /Game/Aki/Data/Camera/Level/CS_Manipulate_Cast_Lv1.CS_Manipulate_Cast_Lv1_C
/// Size: 0x0000 (0 bytes) (0x000190 - 0x000190) align 16 pad: 0x0000
class UCS_Manipulate_Cast_Lv1_C : public UMatineeCameraShake
{ 
public:
};

/// Struct /Game/Aki/Core/Fight/SReBulletDataBase.SReBulletDataBase
/// Size: 0x01B2 (434 bytes) (0x000000 - 0x0001B2) align 8 pad: 0x0002
#pragma pack(push, 0x1)
struct FSReBulletDataBase
{ 
	TEnumAsByte<EBulletShape>                          P_9_b__r_;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	FVector                                            _R_Y_Y___;                                                  // 0x0004   (0x000C)  
	SDK_UNDEFINED(80,999) /* TMap<TEnumAsByte<EBulletBaseSpecificParam>, FString> */ __um(yr_k_Spe_);              // 0x0010   (0x0050)  
	TEnumAsByte<EPositionStandard>                     _Q_uMOn__W_Q_;                                              // 0x0060   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0061   (0x0007)  MISSED
	FString                                            _e_Q_____gK;                                                // 0x0068   (0x0010)  
	FVector                                            _Q_uMOn_OP_y_;                                              // 0x0078   (0x000C)  
	FVector                                            _N__MOn_OP_y_;                                              // 0x0084   (0x000C)  
	FVector                                            _Q_uMOn____g_;                                              // 0x0090   (0x000C)  
	FRotator                                           _R_Y_el__;                                                  // 0x009C   (0x000C)  
	FVector                                            P_6R_u_b___y_;                                              // 0x00A8   (0x000C)  
	float                                              _c___e___;                                                  // 0x00B4   (0x0004)  
	float                                              _x_d_R___e___;                                              // 0x00B8   (0x0004)  
	float                                              _x_d_R_______;                                              // 0x00BC   (0x0004)  
	TEnumAsByte<EHitType>                              _T_N_R_____W_;                                              // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x00C1   (0x0007)  MISSED
	SDK_UNDEFINED(48,1000) /* TWeakObjectPtr<UBulletCampType_C*> */ __um(_T_N_R_____W_____);                       // 0x00C8   (0x0030)  
	FGameplayTag                                       _T_N_R__T;                                                  // 0x00F8   (0x000C)  
	FGameplayTag                                       _ybk_T_NT;                                                  // 0x0104   (0x000C)  
	int32_t                                            _T_N_Npe_;                                                  // 0x0110   (0x0004)  
	int32_t                                            _k_NUSMO___O_u_kpe_;                                        // 0x0114   (0x0004)  
	int32_t                                            ___O_u_kpeP_6R_;                                            // 0x0118   (0x0004)  
	float                                              _O_u_____;                                                  // 0x011C   (0x0004)  
	bool                                               _O_u_____W_N_NSO_;                                          // 0x0120   (0x0001)  
	bool                                               qQ_N6rP_9__kpe_;                                            // 0x0121   (0x0001)  
	unsigned char                                      UnknownData03_6[0x2];                                       // 0x0122   (0x0002)  MISSED
	FName                                              ___QHe_g_;                                                  // 0x0124   (0x000C)  
	FName                                              _1__p___QHe_g_;                                             // 0x0130   (0x000C)  
	TEnumAsByte<EBulletRelativeDir>                    P_9__S_Q_e_T_;                                              // 0x013C   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x013D   (0x0003)  MISSED
	int64_t                                            _O__I;                                                      // 0x0140   (0x0008)  
	FRotator                                           P_9__e_Q_e_T_;                                              // 0x0148   (0x000C)  
	bool                                               _b_____g_f_T;                                               // 0x0154   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0x0155   (0x0003)  MISSED
	FGameplayTagContainer                              P_9_AQ___u_bT;                                              // 0x0158   (0x0020)  
	FGameplayTagContainer                              P_9__ybk_u_bT;                                              // 0x0178   (0x0020)  
	bool                                               _f_T_c___x_d_;                                              // 0x0198   (0x0001)  
	bool                                               _f_T4_0WP_9__;                                              // 0x0199   (0x0001)  
	bool                                               _N__M_aW___;                                                // 0x019A   (0x0001)  
	unsigned char                                      UnknownData06_6[0x1];                                       // 0x019B   (0x0001)  MISSED
	float                                              _4_0W_cKm___y_;                                             // 0x019C   (0x0004)  
	TEnumAsByte<EBulletSyncType>                       Q____Tek___W_;                                              // 0x01A0   (0x0001)  
	unsigned char                                      UnknownData07_6[0x3];                                       // 0x01A1   (0x0003)  MISSED
	FGameplayTag                                       P_9__h___;                                                  // 0x01A4   (0x000C)  
	bool                                               _f_T_T__Pg___S_Q__He_;                                      // 0x01B0   (0x0001)  
	bool                                               D;                                                          // 0x01B1   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Core/Fight/SReBulletDataLogic.SReBulletDataLogic
/// Size: 0x0030 (48 bytes) (0x000000 - 0x000030) align 8 pad: 0x0000
struct FSReBulletDataLogic
{ 
	SDK_UNDEFINED(48,1001) /* TWeakObjectPtr<UBulletLogicType_C*> */ __um(_____);                                  // 0x0000   (0x0030)  
};

/// Struct /Game/Aki/Core/Fight/SReBulletDataAimed.SReBulletDataAimed
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 4 pad: 0x0000
struct FSReBulletDataAimed
{ 
	bool                                               _________S___;                                              // 0x0000   (0x0001)  
	bool                                               _R_Y_el__f_Tb__T_v_h_;                                      // 0x0001   (0x0001)  
	bool                                               _w_Q_S___;                                                  // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x0003   (0x0001)  MISSED
	float                                              _w_QP_9_;                                                   // 0x0004   (0x0004)  
	float                                              _w_QP_9_0;                                                  // 0x0008   (0x0004)  
};

/// Struct /Game/Aki/Core/Fight/SReBulletDataMove.SReBulletDataMove
/// Size: 0x0128 (296 bytes) (0x000000 - 0x000128) align 8 pad: 0x0000
struct FSReBulletDataMove
{ 
	TEnumAsByte<EBulletFollowType>                     P_9________W_;                                              // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	FString                                            ____Q__hSO_TW__;                                            // 0x0008   (0x0010)  
	FName                                              _____TW__;                                                  // 0x0018   (0x000C)  
	bool                                               _f_T_______e_;                                              // 0x0024   (0x0001)  
	bool                                               _b_____g__d__________;                                      // 0x0025   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x0026   (0x0002)  MISSED
	FVector                                            ________P_6R_el__;                                          // 0x0028   (0x000C)  
	TEnumAsByte<EInitialVelocityDirection>             _Q_u_R_____e_T_W_Q_;                                        // 0x0034   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0035   (0x0003)  MISSED
	FString                                            _Q_u_R_____e_T_W_Q_Spe_;                                    // 0x0038   (0x0010)  
	bool                                               _R_____NZ;                                                  // 0x0048   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0049   (0x0003)  MISSED
	FRotator                                           _R____OP_y_e_T_;                                            // 0x004C   (0x000C)  
	FVector                                            _R_____e_T___g_;                                            // 0x0058   (0x000C)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x0064   (0x0004)  MISSED
	SDK_UNDEFINED(80,1002) /* TMap<TEnumAsByte<EBulletBeginVelocityLimit>, float> */ __um(_R________P_6R_);        // 0x0068   (0x0050)  
	float                                              _S___N_N____P_6R_;                                          // 0x00B8   (0x0004)  
	float                                              _y_R_____;                                                  // 0x00BC   (0x0004)  
	class UCurveFloat*                                 _y_R_____f___;                                              // 0x00C0   (0x0008)  
	TEnumAsByte<EMoveTrajectory>                       ___Rh______W_;                                              // 0x00C8   (0x0001)  
	unsigned char                                      UnknownData05_6[0x7];                                       // 0x00C9   (0x0007)  MISSED
	TArray<FVector>                                    ___Rh____Spepenc_;                                          // 0x00D0   (0x0010)  
	TArray<class UCurveVector*>                        ___Rh____Spe_f___;                                          // 0x00E0   (0x0010)  
	TEnumAsByte<EBulletTarget>                         ___Rh____Spe_v_h_;                                          // 0x00F0   (0x0001)  
	unsigned char                                      UnknownData06_6[0x7];                                       // 0x00F1   (0x0007)  MISSED
	FString                                            ___Rh____v_h___gK;                                          // 0x00F8   (0x0010)  
	TEnumAsByte<EBulletDestOffset>                     ___pOP_y_W_Q_g_T_;                                          // 0x0108   (0x0001)  
	unsigned char                                      UnknownData07_6[0x3];                                       // 0x0109   (0x0003)  MISSED
	FVector                                            ___pOP_y_;                                                  // 0x010C   (0x000C)  
	FString                                            ___Rh____v_h_____;                                          // 0x0118   (0x0010)  
};

/// Struct /Game/Aki/Core/Fight/SBulletEffectOnHitConf.SBulletEffectOnHitConf
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 4 pad: 0x0000
struct FSBulletEffectOnHitConf
{ 
	TEnumAsByte<EBulletEffectOnHitType>                ___W_;                                                      // 0x0000   (0x0001)  
	bool                                               _T_u___g_;                                                  // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0002   (0x0002)  MISSED
	FVector2D                                          _______g_;                                                  // 0x0004   (0x0008)  
	FVector                                            _Y_____e_;                                                  // 0x000C   (0x000C)  
};

/// Struct /Game/Aki/Core/Fight/SReBulletDataPerformance.SReBulletDataPerformance
/// Size: 0x0208 (520 bytes) (0x000000 - 0x000208) align 8 pad: 0x0000
struct FSReBulletDataPerformance
{ 
	bool                                               _cKb6rP_9__vyrHe_;                                          // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(48,1003) /* TWeakObjectPtr<UEffectModelBase*> */ __um(P_9_yrHeD);                                // 0x0008   (0x0030)  
	SDK_UNDEFINED(80,1004) /* TMap<TEnumAsByte<EBulletEffectParam>, FString> */ __um(P_9_yrHeD);                   // 0x0038   (0x0050)  
	SDK_UNDEFINED(80,1005) /* TMap<TEnumAsByte<EBulletSpecificEffect>, TWeakObjectPtr<UObject*>> */ __um(yr_kyrHeD); // 0x0088   (0x0050)  
	bool                                               P_9_;                                                       // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
	SDK_UNDEFINED(80,1006) /* TMap<TEnumAsByte<EBulletHitEffect>, TWeakObjectPtr<UObject*>> */ __um(_T_NyrHeD);    // 0x00E0   (0x0050)  
	SDK_UNDEFINED(48,1007) /* TWeakObjectPtr<UClass*> */ __um(_u_b_e_e_Q____O__);                                  // 0x0130   (0x0030)  
	SDK_UNDEFINED(48,1008) /* TWeakObjectPtr<UClass*> */ __um(_T_N_e_e_Q____O__);                                  // 0x0160   (0x0030)  
	SDK_UNDEFINED(48,1009) /* TWeakObjectPtr<UClass*> */ __um(_T_N_e_S_Q____O__);                                  // 0x0190   (0x0030)  
	SDK_UNDEFINED(48,1010) /* TWeakObjectPtr<UClass*> */ __um(_T_N1__p_e_e_Q____O__);                              // 0x01C0   (0x0030)  
	int32_t                                            null;                                                       // 0x01F0   (0x0004)  
	bool                                               __O_sQT_0R_S_U_Q_N_N_;                                      // 0x01F4   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x01F5   (0x0003)  MISSED
	TArray<FSBulletEffectOnHitConf>                    _T_NyrHeM_n__;                                              // 0x01F8   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/STimeScale.STimeScale
/// Size: 0x0014 (20 bytes) (0x000000 - 0x000014) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSTimeScale
{ 
	class UCurveFloat*                                 _e_______S_S_f___;                                          // 0x0000   (0x0008)  
	float                                              _e_______e___;                                              // 0x0008   (0x0004)  
	float                                              _e_______P_;                                                // 0x000C   (0x0004)  
	int32_t                                            _OHQ___;                                                    // 0x0010   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Core/Fight/SReBulletDataTime.SReBulletDataTime
/// Size: 0x0084 (132 bytes) (0x000000 - 0x000084) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSReBulletDataTime
{ 
	bool                                               _f_T_____e_Q_______;                                        // 0x0000   (0x0001)  
	bool                                               _e_Q______eu_e_Q___;                                        // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0002   (0x0006)  MISSED
	FSTimeScale                                        _e_Q_____;                                                  // 0x0008   (0x0018)  
	FSTimeScale                                        _S_Q_____;                                                  // 0x0020   (0x0018)  
	FSTimeScale                                        _T_N1__p_e_Q_______;                                        // 0x0038   (0x0018)  
	FSTimeScale                                        _T_N1__p_S_Q_______;                                        // 0x0050   (0x0018)  
	bool                                               __6Rq__T_S_W_QP_9__;                                        // 0x0068   (0x0001)  
	bool                                               _S_W_S_Q___e_______;                                        // 0x0069   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x006A   (0x0006)  MISSED
	FString                                            ____IN___d____USMOk;                                        // 0x0070   (0x0010)  
	float                                              _e______1YHe_;                                              // 0x0080   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Core/Fight/SReBulletDataExe.SReBulletDataExe
/// Size: 0x00B0 (176 bytes) (0x000000 - 0x0000B0) align 8 pad: 0x0000
struct FSReBulletDataExe
{ 
	FGameplayTag                                       _u_b_e___e_Q___S__G;                                        // 0x0000   (0x000C)  
	FGameplayTag                                       _T_N_T___e_Q___S__G;                                        // 0x000C   (0x000C)  
	FGameplayTag                                       _T_N_T___S_Q___S__G;                                        // 0x0018   (0x000C)  
	FGameplayTag                                       ___g_e___e_Q___S__G;                                        // 0x0024   (0x000C)  
	TArray<int64_t>                                    _T_N_T___e_Q_____uG;                                        // 0x0030   (0x0010)  
	TArray<int64_t>                                    _T_N_T___S_Q_____uG;                                        // 0x0040   (0x0010)  
	TArray<int64_t>                                    ____b__Y__G;                                                // 0x0050   (0x0010)  
	TArray<int64_t>                                    _T_N_T___W_W_N__r____u_vG;                                  // 0x0060   (0x0010)  
	TArray<int64_t>                                    _S_Q__a___eQ___u_vG;                                        // 0x0070   (0x0010)  
	SDK_UNDEFINED(48,1011) /* TWeakObjectPtr<UKuroBpDataAssetGroup*> */ __um(G);                                   // 0x0080   (0x0030)  
};

/// Struct /Game/Aki/Core/Fight/SReBulletDataScale.SReBulletDataScale
/// Size: 0x0019 (25 bytes) (0x000000 - 0x000019) align 8 pad: 0x0001
#pragma pack(push, 0x1)
struct FSReBulletDataScale
{ 
	FVector                                            ___e_P_s_;                                                  // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UCurveVector*                                ___e_P_s_f___;                                              // 0x0010   (0x0008)  
	bool                                               yr__b__r;                                                   // 0x0018   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Core/Fight/SReBulletDataEntity.SReBulletDataEntity
/// Size: 0x0005 (5 bytes) (0x000000 - 0x000005) align 4 pad: 0x0001
#pragma pack(push, 0x1)
struct FSReBulletDataEntity
{ 
	int32_t                                            __SOI;                                                      // 0x0000   (0x0004)  
	bool                                               _f_T__P_9_;                                                 // 0x0004   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Core/Fight/SReBulletDataChildren.SReBulletDataChildren
/// Size: 0x0016 (22 bytes) (0x000000 - 0x000016) align 8 pad: 0x0006
#pragma pack(push, 0x1)
struct FSReBulletDataChildren
{ 
	int64_t                                            _S_UP_9_I;                                                  // 0x0000   (0x0008)  
	float                                              _S_UP_9______;                                              // 0x0008   (0x0004)  
	int32_t                                            _S_UP_9_pe___;                                              // 0x000C   (0x0004)  
	float                                              _S_UP_9______0;                                             // 0x0010   (0x0004)  
	TEnumAsByte<EBulletChildrenType>                   _S_U___S_;                                                  // 0x0014   (0x0001)  
	bool                                               _1Y___f_T_Pbk_;                                             // 0x0015   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Core/Fight/SReBulletDataObstacles.SReBulletDataObstacles
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 4 pad: 0x0000
struct FSReBulletDataObstacles
{ 
	FVector                                            _hKmMOn__;                                                  // 0x0000   (0x000C)  
	float                                              _hKm___y_;                                                  // 0x000C   (0x0004)  
};

/// Struct /Game/Aki/Core/Fight/SReBulletDataInteraction.SReBulletDataInteraction
/// Size: 0x0030 (48 bytes) (0x000000 - 0x000030) align 8 pad: 0x0000
struct FSReBulletDataInteraction
{ 
	SDK_UNDEFINED(48,1012) /* TWeakObjectPtr<UBulletSceneInteraction_C*> */ __um(4lb__N_N_);                       // 0x0000   (0x0030)  
};

/// Struct /Game/Aki/Core/Fight/SReBulletDataMain.SReBulletDataMain
/// Size: 0x06E8 (1768 bytes) (0x000000 - 0x0006E8) align 8 pad: 0x0000
struct FSReBulletDataMain
{ 
	FName                                              P_9__T_y_;                                                  // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FSReBulletDataBase                                 _W_x__n__;                                                  // 0x0010   (0x01B8)  
	FSReBulletDataLogic                                ______n__;                                                  // 0x01C8   (0x0030)  
	FSReBulletDataAimed                                _w_Q__n__;                                                  // 0x01F8   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0204   (0x0004)  MISSED
	FSReBulletDataMove                                 _y_R__n__;                                                  // 0x0208   (0x0128)  
	FSReBulletDataPerformance                          h__sHe_g__n__;                                              // 0x0330   (0x0208)  
	FSReBulletDataTime                                 _e_______;                                                  // 0x0538   (0x0088)  
	FSReBulletDataExe                                  gbL______;                                                  // 0x05C0   (0x00B0)  
	FSReBulletDataScale                                ___e__n__;                                                  // 0x0670   (0x0020)  
	FSReBulletDataEntity                               _S_U__SO_;                                                  // 0x0690   (0x0008)  
	TArray<FSReBulletDataChildren>                     P_P_9___n__;                                                // 0x0698   (0x0010)  
	FSReBulletDataObstacles                            ___x_hKm_;                                                  // 0x06A8   (0x0010)  
	FSReBulletDataInteraction                          _s_X_N_N_;                                                  // 0x06B8   (0x0030)  
};

/// Class /Game/Aki/Character/BaseCharacter/Tools/BP_ActorBulletPreview.BP_ActorBulletPreview_C
/// Size: 0x0718 (1816 bytes) (0x0002A8 - 0x0009C0) align 8 pad: 0x0000
class ABP_ActorBulletPreview_C : public AActor
{ 
public:
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02A8   (0x0008)  
	FSReBulletDataMain                                 M_;                                                         // 0x02B0   (0x06E8)  
	float                                              ___;                                                        // 0x0998   (0x0004)  
	float                                              X__W;                                                       // 0x099C   (0x0004)  
	class AActor*                                      _S_;                                                        // 0x09A0   (0x0008)  
	float                                              ___0;                                                       // 0x09A8   (0x0004)  
	FVector                                            _Y;                                                         // 0x09AC   (0x000C)  
	class UPrimitiveComponent*                         _x_;                                                        // 0x09B8   (0x0008)  
	// void _N__MO();                                                                                                           // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void OnTick();                                                                                                           // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void _R_(FSReBulletDataMain M_, class AActor* _S_);                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void b__r_(TEnumAsByte<EBulletShape> b_);                                                                                // [0x25a7960] Private|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void (class USkeletalMeshComponent* MeshComp);                                                                           // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Effect/BluePrint/BP_FX_Common/BP_Fx_Scanning.BP_Fx_Scanning_C
/// Size: 0x008C (140 bytes) (0x0002C8 - 0x000354) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ABP_Fx_Scanning_C : public ATsBpFxEffect_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02C8   (0x0008)  
	class UPostProcessComponent*                       PostProcess;                                                // 0x02D0   (0x0008)  
	float                                              Timeline_0_heiping_353B1A7A4A9CB64DD0E9F4A743D43275;        // 0x02D8   (0x0004)  
	float                                              Timeline_0_LUT_353B1A7A4A9CB64DD0E9F4A743D43275;            // 0x02DC   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    Timeline_0__Direction_353B1A7A4A9CB64DD0E9F4A743D43275;     // 0x02E0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02E1   (0x0007)  MISSED
	class UTimelineComponent*                          Timeline;                                                   // 0x02E8   (0x0008)  
	float                                              __________51722C4C46877BE320D640A615DF102A;                 // 0x02F0   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    ______Direction_51722C4C46877BE320D640A615DF102A;           // 0x02F4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02F5   (0x0003)  MISSED
	class UTimelineComponent*                          p_;                                                         // 0x02F8   (0x0008)  
	float                                              __________4BA202604863CA55AF0FC0B49F86965B;                 // 0x0300   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    ______Direction_4BA202604863CA55AF0FC0B49F86965B;           // 0x0304   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0305   (0x0003)  MISSED
	class UTimelineComponent*                          n___;                                                       // 0x0308   (0x0008)  
	float                                              ______NewTrack_0_F355743F48DC9EB377A77A9C1115080C;          // 0x0310   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    _______Direction_F355743F48DC9EB377A77A9C1115080C;          // 0x0314   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0315   (0x0003)  MISSED
	class UTimelineComponent*                          kb_c_;                                                      // 0x0318   (0x0008)  
	float                                              _____NewTrack_0_06BB87C141833981013181AD8BBDFB4F;           // 0x0320   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    ______Direction_06BB87C141833981013181AD8BBDFB4F;           // 0x0324   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x0325   (0x0003)  MISSED
	class UTimelineComponent*                          kb_c;                                                       // 0x0328   (0x0008)  
	class UMaterialInterface*                          ScanMaterial;                                               // 0x0330   (0x0008)  
	bool                                               _S;                                                         // 0x0338   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0x0339   (0x0003)  MISSED
	float                                              Play_Time;                                                  // 0x033C   (0x0004)  
	class UMaterialInstanceDynamic*                    ScanMaterialMID;                                            // 0x0340   (0x0008)  
	float                                              PlaySpeed;                                                  // 0x0348   (0x0004)  
	bool                                               StartTicking;                                               // 0x034C   (0x0001)  
	bool                                               IsUsedForSeq;                                               // 0x034D   (0x0001)  
	unsigned char                                      UnknownData06_6[0x2];                                       // 0x034E   (0x0002)  MISSED
	float                                              SeqLifeCycle;                                               // 0x0350   (0x0004)  
	// void StartScanEffect();                                                                                                  // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void SetRevert();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void kb_c___V_();                                                                                                        // [0x25a7960] BlueprintEvent       
	// void kb_c_______();                                                                                                      // [0x25a7960] BlueprintEvent       
	// void n________();                                                                                                        // [0x25a7960] BlueprintEvent       
	// void p_();                                                                                                               // [0x25a7960] BlueprintEvent       
	// void Timeline_0__FinishedFunc();                                                                                         // [0x25a7960] BlueprintEvent       
	// void Timeline_0__UpdateFunc();                                                                                           // [0x25a7960] BlueprintEvent       
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_Fx_Scanning(int32_t EntryPoint);                                                                // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseSeqCharacter/BP_BaseHulu_Seq.BP_BaseHulu_Seq_C
/// Size: 0x0018 (24 bytes) (0x0002A8 - 0x0002C0) align 8 pad: 0x0000
class ABP_BaseHulu_Seq_C : public AActor
{ 
public:
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                      // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	class USkeletalMesh*                               HuluMesh;                                                   // 0x02B8   (0x0008)  
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/BaseSeqCharacter/ABPI_Seq_LevelB.ABPI_Seq_LevelB_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UABPI_Seq_LevelB_C : public UInterface
{ 
public:
	// void OnJumpFrame();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/BaseSeqCharacter/ABPC_Seq_Interface.ABPC_Seq_Interface_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UABPC_Seq_Interface_C : public UInterface
{ 
public:
	// void GetABPC_Body_V2(class UABPC_Seq_Body_V2_C*& ABPC_Body_V2);                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/BaseSeqCharacter/ABP_BaseRole_Seq_V2.ABP_BaseRole_Seq_V2_C
/// Size: 0x14DC (5340 bytes) (0x000378 - 0x001854) align 16 pad: 0x0004
#pragma pack(push, 0x1)
class UABP_BaseRole_Seq_V2_C : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0378   (0x0008)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0380   (0x0008)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0388   (0x0038)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose;                              // 0x03C0   (0x0138)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace;                        // 0x04F8   (0x0020)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0518   (0x0008)  MISSED
	FAnimNode_RBF                                      AnimGraphNode_RBF;                                          // 0x0520   (0x0150)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace;                        // 0x0670   (0x0020)  
	FAnimNode_Root                                     AnimGraphNode_Root0;                                        // 0x0690   (0x0038)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose1;                             // 0x06C8   (0x0138)  
	FAnimNode_CurveSource                              AnimGraphNode_CurveSource;                                  // 0x0800   (0x0040)  
	FAnimNode_CurveFix                                 AnimGraphNode_CurveFix;                                     // 0x0840   (0x0030)  
	FAnimNode_CombineCurves                            AnimGraphNode_CombineCurves;                                // 0x0870   (0x0060)  
	FAnimNode_Slot                                     AnimGraphNode_Slot;                                         // 0x08D0   (0x0060)  
	FAnimNode_CombineCurves                            AnimGraphNode_CombineCurves2;                               // 0x0930   (0x0060)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool;                              // 0x0990   (0x00B0)  
	FAnimNode_PoseSnapshot                             AnimGraphNode_PoseSnapshot;                                 // 0x0A40   (0x00B0)  
	FAnimNode_Slot                                     AnimGraphNode_Slot3;                                        // 0x0AF0   (0x0060)  
	FAnimNode_Root                                     AnimGraphNode_Root4;                                        // 0x0B50   (0x0038)  
	FAnimNode_Slot                                     AnimGraphNode_Slot5;                                        // 0x0B88   (0x0060)  
	FAnimNode_Slot                                     AnimGraphNode_Slot6;                                        // 0x0BE8   (0x0060)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend;                                  // 0x0C48   (0x00C8)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer;                               // 0x0D10   (0x0090)  
	FAnimNode_Root                                     AnimGraphNode_Root7;                                        // 0x0DA0   (0x0038)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose8;                             // 0x0DD8   (0x0138)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone;                                   // 0x0F10   (0x0110)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace9;                       // 0x1020   (0x0020)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace10;                      // 0x1040   (0x0020)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone11;                                 // 0x1060   (0x0110)  
	FAnimNode_RotationOffsetBlendSpace                 AnimGraphNode_RotationOffsetBlendSpace;                     // 0x1170   (0x01A8)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone12;                                 // 0x1318   (0x0110)  
	FAnimNode_MorphTargetModifier                      AnimGraphNode_MorphTargetModifier;                          // 0x1428   (0x0060)  
	FAnimNode_Root                                     AnimGraphNode_Root13;                                       // 0x1488   (0x0038)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer;                              // 0x14C0   (0x00C0)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer14;                            // 0x1580   (0x00C0)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer15;                            // 0x1640   (0x00C0)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer16;                            // 0x1700   (0x00C0)  
	FVector2D                                          LookXY;                                                     // 0x17C0   (0x0008)  
	FRotator                                           LookFixHead;                                                // 0x17C8   (0x000C)  
	FRotator                                           LookFixNeck;                                                // 0x17D4   (0x000C)  
	bool                                               Enable_AimOffset;                                           // 0x17E0   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x17E1   (0x0003)  MISSED
	FRotator                                           LookFixSpine;                                               // 0x17E4   (0x000C)  
	class UAimOffsetBlendSpace*                        AimOffset;                                                  // 0x17F0   (0x0008)  
	bool                                               Enable_Stand;                                               // 0x17F8   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x17F9   (0x0007)  MISSED
	class UAnimSequenceBase*                           Stand;                                                      // 0x1800   (0x0008)  
	bool                                               EnableSwitchPose;                                           // 0x1808   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x1809   (0x0007)  MISSED
	FPoseSnapshot                                      CachePose;                                                  // 0x1810   (0x0040)  
	float                                              SwitchPoseTime;                                             // 0x1850   (0x0004)  
	// void _O_(FPoseLink InPose, FPoseLink& _O_);                                                                              // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void b__(FPoseLink InPose, FPoseLink& b__);                                                                              // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void __S(FPoseLink& __S);                                                                                                // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ___(FPoseLink InPose, FPoseLink& ___);                                                                              // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_ABP_BaseRole_Seq_V2(int32_t EntryPoint);                                                           // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/Common/ABP_BaseRole.ABP_BaseRole_C
/// Size: 0x1E5A9 (124329 bytes) (0x0007D0 - 0x01ED79) align 16 pad: 0x0009
#pragma pack(push, 0x1)
class UABP_BaseRole_C : public UKuroAnimInstanceRole
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x07D0   (0x0008)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose;                                // 0x07D8   (0x0030)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0808   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult;                             // 0x0840   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult0;                            // 0x0868   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1;                            // 0x0890   (0x0028)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive;                                // 0x08B8   (0x00D0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose2;                               // 0x0988   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose3;                               // 0x09B8   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult;                                  // 0x09E8   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose4;                               // 0x0A20   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult5;                                 // 0x0A50   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult6;                                 // 0x0A88   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine;                                 // 0x0AC0   (0x0138)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0BF8   (0x0008)  MISSED
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose;                               // 0x0C00   (0x01B0)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose;                              // 0x0DB0   (0x0138)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose7;                             // 0x0EE8   (0x0138)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose8;                              // 0x1020   (0x01B0)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose9;                             // 0x11D0   (0x0138)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x1308   (0x0008)  MISSED
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose10;                             // 0x1310   (0x01B0)  
	FAnimNode_Root                                     AnimGraphNode_Root11;                                       // 0x14C0   (0x0038)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace;                        // 0x14F8   (0x0020)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace;                        // 0x1518   (0x0020)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose12;                            // 0x1538   (0x0138)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone;                                   // 0x1670   (0x0110)  
	FAnimNode_SightLock                                AnimGraphNode_SightLock;                                    // 0x1780   (0x01B8)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose13;                              // 0x1938   (0x0030)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool;                              // 0x1968   (0x00B0)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend;                                // 0x1A18   (0x0050)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose14;                              // 0x1A68   (0x0030)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult15;                           // 0x1A98   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult16;                           // 0x1AC0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult17;                           // 0x1AE8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult18;                           // 0x1B10   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult19;                           // 0x1B38   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult20;                           // 0x1B60   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult21;                           // 0x1B88   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult22;                           // 0x1BB0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult23;                           // 0x1BD8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult24;                           // 0x1C00   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult25;                           // 0x1C28   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult26;                           // 0x1C50   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult27;                           // 0x1C78   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult28;                           // 0x1CA0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult29;                           // 0x1CC8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult30;                           // 0x1CF0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult31;                           // 0x1D18   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult32;                           // 0x1D40   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose33;                              // 0x1D68   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose34;                              // 0x1D98   (0x0030)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend35;                              // 0x1DC8   (0x0050)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult36;                                // 0x1E18   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose37;                              // 0x1E50   (0x0030)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend38;                              // 0x1E80   (0x0050)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose39;                              // 0x1ED0   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult40;                                // 0x1F00   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose41;                              // 0x1F38   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose42;                              // 0x1F68   (0x0030)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend43;                              // 0x1F98   (0x0050)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult44;                                // 0x1FE8   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose45;                              // 0x2020   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose46;                              // 0x2050   (0x0030)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend47;                              // 0x2080   (0x0050)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult48;                                // 0x20D0   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose49;                              // 0x2108   (0x0030)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend50;                              // 0x2138   (0x0050)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose51;                              // 0x2188   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult52;                                // 0x21B8   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose53;                              // 0x21F0   (0x0030)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend54;                              // 0x2220   (0x0050)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose55;                              // 0x2270   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult56;                                // 0x22A0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine57;                               // 0x22D8   (0x0138)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose58;                              // 0x2410   (0x0030)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose59;                             // 0x2440   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose60;                             // 0x25F0   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose61;                             // 0x27A0   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose62;                             // 0x2950   (0x01B0)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose63;                            // 0x2B00   (0x0138)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose64;                            // 0x2C38   (0x0138)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose65;                            // 0x2D70   (0x0138)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose66;                            // 0x2EA8   (0x0138)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose67;                              // 0x2FE0   (0x0030)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose68;                             // 0x3010   (0x01B0)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend;                                  // 0x31C0   (0x00C8)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x3288   (0x0008)  MISSED
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose69;                             // 0x3290   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose70;                             // 0x3440   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose71;                             // 0x35F0   (0x01B0)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose72;                            // 0x37A0   (0x0138)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose73;                            // 0x38D8   (0x0138)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose74;                            // 0x3A10   (0x0138)  
	FAnimNode_Root                                     AnimGraphNode_Root75;                                       // 0x3B48   (0x0038)  
	FAnimNode_PoseSnapshot                             AnimGraphNode_PoseSnapshot;                                 // 0x3B80   (0x00B0)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool76;                            // 0x3C30   (0x00B0)  
	FAnimNode_Slot                                     AnimGraphNode_Slot;                                         // 0x3CE0   (0x0060)  
	FAnimNode_Slot                                     AnimGraphNode_Slot77;                                       // 0x3D40   (0x0060)  
	FAnimNode_Slot                                     AnimGraphNode_Slot78;                                       // 0x3DA0   (0x0060)  
	FAnimNode_Slot                                     AnimGraphNode_Slot79;                                       // 0x3E00   (0x0060)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose80;                            // 0x3E60   (0x0138)  
	FAnimNode_Root                                     AnimGraphNode_Root81;                                       // 0x3F98   (0x0038)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace82;                      // 0x3FD0   (0x0020)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone83;                                 // 0x3FF0   (0x0110)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone84;                                 // 0x4100   (0x0110)  
	FAnimNode_FeedbackRotate                           AnimGraphNode_FeedbackRotate;                               // 0x4210   (0x0308)  
	unsigned char                                      UnknownData03_6[0x8];                                       // 0x4518   (0x0008)  MISSED
	FAnimNode_KuroHumanIK                              AnimGraphNode_KuroHumanIK;                                  // 0x4520   (0x0200)  
	FAnimNode_Root                                     AnimGraphNode_Root85;                                       // 0x4720   (0x0038)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose86;                            // 0x4758   (0x0138)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose87;                             // 0x4890   (0x01B0)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose88;                            // 0x4A40   (0x0138)  
	unsigned char                                      UnknownData04_6[0x8];                                       // 0x4B78   (0x0008)  MISSED
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose89;                             // 0x4B80   (0x01B0)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose90;                            // 0x4D30   (0x0138)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose91;                            // 0x4E68   (0x0138)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose92;                            // 0x4FA0   (0x0138)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose93;                            // 0x50D8   (0x0138)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose94;                            // 0x5210   (0x0138)  
	unsigned char                                      UnknownData05_6[0x8];                                       // 0x5348   (0x0008)  MISSED
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose95;                             // 0x5350   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose96;                             // 0x5500   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose97;                             // 0x56B0   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose98;                             // 0x5860   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose99;                             // 0x5A10   (0x01B0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose100;                             // 0x5BC0   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose101;                             // 0x5BF0   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose102;                             // 0x5C20   (0x0030)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend103;                               // 0x5C50   (0x00C8)  
	unsigned char                                      UnknownData06_6[0x8];                                       // 0x5D18   (0x0008)  MISSED
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose104;                            // 0x5D20   (0x01B0)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult105;                          // 0x5ED0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult106;                          // 0x5EF8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult107;                          // 0x5F20   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult108;                          // 0x5F48   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult109;                          // 0x5F70   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult110;                          // 0x5F98   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult111;                          // 0x5FC0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult112;                          // 0x5FE8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult113;                          // 0x6010   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult114;                          // 0x6038   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult115;                          // 0x6060   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult116;                          // 0x6088   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult117;                          // 0x60B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult118;                          // 0x60D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult119;                          // 0x6100   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult120;                          // 0x6128   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult121;                          // 0x6150   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult122;                          // 0x6178   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult123;                          // 0x61A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult124;                          // 0x61C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult125;                          // 0x61F0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult126;                          // 0x6218   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult127;                          // 0x6240   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult128;                          // 0x6268   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose129;                             // 0x6290   (0x0030)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend130;                             // 0x62C0   (0x0050)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose131;                             // 0x6310   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose132;                             // 0x6340   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose133;                             // 0x6370   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult134;                               // 0x63A0   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose135;                             // 0x63D8   (0x0030)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend136;                             // 0x6408   (0x0050)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose137;                             // 0x6458   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose138;                             // 0x6488   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose139;                             // 0x64B8   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult140;                               // 0x64E8   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose141;                             // 0x6520   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose142;                             // 0x6550   (0x0030)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend143;                             // 0x6580   (0x0050)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose144;                             // 0x65D0   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose145;                             // 0x6600   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult146;                               // 0x6630   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose147;                             // 0x6668   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose148;                             // 0x6698   (0x0030)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend149;                             // 0x66C8   (0x0050)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose150;                             // 0x6718   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose151;                             // 0x6748   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult152;                               // 0x6778   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose153;                             // 0x67B0   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose154;                             // 0x67E0   (0x0030)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend155;                             // 0x6810   (0x0050)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose156;                             // 0x6860   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose157;                             // 0x6890   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult158;                               // 0x68C0   (0x0038)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend159;                             // 0x68F8   (0x0050)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose160;                             // 0x6948   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose161;                             // 0x6978   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose162;                             // 0x69A8   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose163;                             // 0x69D8   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult164;                               // 0x6A08   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine165;                              // 0x6A40   (0x0138)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool166;                           // 0x6B78   (0x00B0)  
	FAnimNode_Root                                     AnimGraphNode_Root167;                                      // 0x6C28   (0x0038)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose168;                           // 0x6C60   (0x0138)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose169;                           // 0x6D98   (0x0138)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose170;                            // 0x6ED0   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose171;                            // 0x7080   (0x01B0)  
	FAnimNode_Slot                                     AnimGraphNode_Slot172;                                      // 0x7230   (0x0060)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult173;                          // 0x7290   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult174;                          // 0x72B8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult175;                          // 0x72E0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult176;                          // 0x7308   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult177;                          // 0x7330   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult178;                          // 0x7358   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult179;                          // 0x7380   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult180;                          // 0x73A8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult181;                          // 0x73D0   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose182;                             // 0x73F8   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult183;                               // 0x7428   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult184;                          // 0x7460   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose185;                             // 0x7488   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult186;                               // 0x74B8   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose187;                             // 0x74F0   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose188;                             // 0x7520   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose189;                             // 0x7550   (0x0030)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer;                              // 0x7580   (0x00C0)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult190;                               // 0x7640   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine191;                              // 0x7678   (0x0138)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer;                               // 0x77B0   (0x0090)  
	FAnimNode_CombineCurves                            AnimGraphNode_CombineCurves;                                // 0x7840   (0x0060)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose192;                            // 0x78A0   (0x01B0)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose193;                           // 0x7A50   (0x0138)  
	FAnimNode_Inertialization                          AnimGraphNode_Inertialization;                              // 0x7B88   (0x0070)  
	unsigned char                                      UnknownData07_6[0x8];                                       // 0x7BF8   (0x0008)  MISSED
	FAnimNode_RBF                                      AnimGraphNode_RBF;                                          // 0x7C00   (0x0150)  
	FAnimNode_Root                                     AnimGraphNode_Root194;                                      // 0x7D50   (0x0038)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose195;                           // 0x7D88   (0x0138)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose196;                           // 0x7EC0   (0x0138)  
	unsigned char                                      UnknownData08_6[0x8];                                       // 0x7FF8   (0x0008)  MISSED
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose197;                            // 0x8000   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose198;                            // 0x81B0   (0x01B0)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose199;                           // 0x8360   (0x0138)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose200;                             // 0x8498   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose201;                             // 0x84C8   (0x0030)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose202;                           // 0x84F8   (0x0138)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose203;                            // 0x8630   (0x01B0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose204;                             // 0x87E0   (0x0030)  
	FAnimNode_AdditiveBoneBlend                        AnimGraphNode_AdditiveBoneBlend;                            // 0x8810   (0x01C0)  
	FAnimNode_Root                                     AnimGraphNode_Root205;                                      // 0x89D0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer206;                            // 0x8A08   (0x0090)  
	FAnimNode_Root                                     AnimGraphNode_Root207;                                      // 0x8A98   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult208;                          // 0x8AD0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult209;                          // 0x8AF8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult210;                          // 0x8B20   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult211;                          // 0x8B48   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult212;                          // 0x8B70   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult213;                          // 0x8B98   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult214;                          // 0x8BC0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult215;                          // 0x8BE8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult216;                          // 0x8C10   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult217;                          // 0x8C38   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult218;                          // 0x8C60   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer219;                            // 0x8C88   (0x0090)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer;                             // 0x8D18   (0x00F8)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive220;                             // 0x8E10   (0x00D0)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult221;                               // 0x8EE0   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose222;                             // 0x8F18   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult223;                               // 0x8F48   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult224;                          // 0x8F80   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult225;                          // 0x8FA8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult226;                          // 0x8FD0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult227;                          // 0x8FF8   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer228;                            // 0x9020   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult229;                               // 0x90B0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer230;                            // 0x90E8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult231;                               // 0x9178   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer232;                            // 0x91B0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult233;                               // 0x9240   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer234;                            // 0x9278   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult235;                               // 0x9308   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine236;                              // 0x9340   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult237;                               // 0x9478   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult238;                          // 0x94B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult239;                          // 0x94D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult240;                          // 0x9500   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult241;                          // 0x9528   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose242;                             // 0x9550   (0x0030)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer243;                            // 0x9580   (0x0090)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive244;                             // 0x9610   (0x00D0)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult245;                               // 0x96E0   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose246;                             // 0x9718   (0x0030)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer247;                            // 0x9748   (0x0090)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive248;                             // 0x97D8   (0x00D0)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult249;                               // 0x98A8   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose250;                             // 0x98E0   (0x0030)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose251;                             // 0x9910   (0x0030)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer252;                            // 0x9940   (0x0090)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend253;                               // 0x99D0   (0x00C8)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive254;                             // 0x9A98   (0x00D0)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult255;                               // 0x9B68   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine256;                              // 0x9BA0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult257;                               // 0x9CD8   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult258;                          // 0x9D10   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer259;                            // 0x9D38   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult260;                               // 0x9DC8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine261;                              // 0x9E00   (0x0138)  
	FAnimNode_Slot                                     AnimGraphNode_Slot262;                                      // 0x9F38   (0x0060)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer263;                          // 0x9F98   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult264;                               // 0xA090   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine265;                              // 0xA0C8   (0x0138)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose266;                           // 0xA200   (0x0138)  
	unsigned char                                      UnknownData09_6[0x8];                                       // 0xA338   (0x0008)  MISSED
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose267;                            // 0xA340   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose268;                            // 0xA4F0   (0x01B0)  
	FAnimNode_Root                                     AnimGraphNode_Root269;                                      // 0xA6A0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult270;                          // 0xA6D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult271;                          // 0xA700   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult272;                          // 0xA728   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult273;                          // 0xA750   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult274;                          // 0xA778   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult275;                          // 0xA7A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult276;                          // 0xA7C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult277;                          // 0xA7F0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult278;                          // 0xA818   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult279;                          // 0xA840   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult280;                          // 0xA868   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult281;                               // 0xA890   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer282;                            // 0xA8C8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult283;                               // 0xA958   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer284;                          // 0xA990   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult285;                               // 0xAA88   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer286;                          // 0xAAC0   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult287;                               // 0xABB8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine288;                              // 0xABF0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult289;                               // 0xAD28   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult290;                          // 0xAD60   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult291;                          // 0xAD88   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult292;                          // 0xADB0   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer293;                            // 0xADD8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult294;                               // 0xAE68   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult295;                          // 0xAEA0   (0x0028)  
	FAnimNode_BlendSpaceEvaluator                      AnimGraphNode_BlendSpaceEvaluator;                          // 0xAEC8   (0x0100)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult296;                               // 0xAFC8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer297;                            // 0xB000   (0x0090)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive298;                             // 0xB090   (0x00D0)  
	FAnimNode_BlendSpaceEvaluator                      AnimGraphNode_BlendSpaceEvaluator299;                       // 0xB160   (0x0100)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult300;                               // 0xB260   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine301;                              // 0xB298   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult302;                               // 0xB3D0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult303;                          // 0xB408   (0x0028)  
	FAnimNode_BlendSpaceEvaluator                      AnimGraphNode_BlendSpaceEvaluator304;                       // 0xB430   (0x0100)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult305;                               // 0xB530   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer306;                            // 0xB568   (0x0090)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive307;                             // 0xB5F8   (0x00D0)  
	FAnimNode_BlendSpaceEvaluator                      AnimGraphNode_BlendSpaceEvaluator308;                       // 0xB6C8   (0x0100)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult309;                               // 0xB7C8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine310;                              // 0xB800   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult311;                               // 0xB938   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine312;                              // 0xB970   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult313;                               // 0xBAA8   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult314;                          // 0xBAE0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult315;                          // 0xBB08   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult316;                          // 0xBB30   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult317;                          // 0xBB58   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult318;                          // 0xBB80   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult319;                          // 0xBBA8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult320;                          // 0xBBD0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult321;                          // 0xBBF8   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer322;                            // 0xBC20   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult323;                               // 0xBCB0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult324;                          // 0xBCE8   (0x0028)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer325;                          // 0xBD10   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult326;                               // 0xBE08   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult327;                               // 0xBE40   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer328;                            // 0xBE78   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult329;                               // 0xBF08   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer330;                          // 0xBF40   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult331;                               // 0xC038   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer332;                          // 0xC070   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult333;                               // 0xC168   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine334;                              // 0xC1A0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult335;                               // 0xC2D8   (0x0038)  
	FAnimNode_Slot                                     AnimGraphNode_Slot336;                                      // 0xC310   (0x0060)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer337;                            // 0xC370   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult338;                               // 0xC400   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult339;                          // 0xC438   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult340;                          // 0xC460   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult341;                          // 0xC488   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult342;                          // 0xC4B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult343;                          // 0xC4D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult344;                          // 0xC500   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult345;                          // 0xC528   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult346;                          // 0xC550   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult347;                          // 0xC578   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult348;                          // 0xC5A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult349;                          // 0xC5C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult350;                          // 0xC5F0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult351;                          // 0xC618   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult352;                          // 0xC640   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult353;                          // 0xC668   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult354;                          // 0xC690   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult355;                          // 0xC6B8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult356;                          // 0xC6E0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult357;                          // 0xC708   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult358;                          // 0xC730   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult359;                          // 0xC758   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult360;                          // 0xC780   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult361;                          // 0xC7A8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult362;                          // 0xC7D0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult363;                          // 0xC7F8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult364;                          // 0xC820   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult365;                          // 0xC848   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult366;                          // 0xC870   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult367;                          // 0xC898   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult368;                          // 0xC8C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult369;                          // 0xC8E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult370;                          // 0xC910   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult371;                          // 0xC938   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult372;                          // 0xC960   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult373;                          // 0xC988   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult374;                          // 0xC9B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult375;                          // 0xC9D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult376;                          // 0xCA00   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult377;                          // 0xCA28   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult378;                          // 0xCA50   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult379;                          // 0xCA78   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult380;                          // 0xCAA0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult381;                          // 0xCAC8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult382;                          // 0xCAF0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult383;                          // 0xCB18   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult384;                          // 0xCB40   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult385;                          // 0xCB68   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult386;                          // 0xCB90   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult387;                          // 0xCBB8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult388;                          // 0xCBE0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult389;                          // 0xCC08   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult390;                          // 0xCC30   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult391;                          // 0xCC58   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult392;                          // 0xCC80   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult393;                          // 0xCCA8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult394;                          // 0xCCD0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult395;                          // 0xCCF8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult396;                          // 0xCD20   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult397;                          // 0xCD48   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult398;                          // 0xCD70   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult399;                          // 0xCD98   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult400;                          // 0xCDC0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult401;                          // 0xCDE8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult402;                          // 0xCE10   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult403;                          // 0xCE38   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult404;                          // 0xCE60   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult405;                          // 0xCE88   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult406;                          // 0xCEB0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult407;                          // 0xCED8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult408;                          // 0xCF00   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult409;                          // 0xCF28   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult410;                          // 0xCF50   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult411;                          // 0xCF78   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult412;                          // 0xCFA0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult413;                          // 0xCFC8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult414;                          // 0xCFF0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult415;                          // 0xD018   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult416;                          // 0xD040   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult417;                          // 0xD068   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult418;                          // 0xD090   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult419;                          // 0xD0B8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult420;                          // 0xD0E0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult421;                          // 0xD108   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult422;                          // 0xD130   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult423;                          // 0xD158   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult424;                          // 0xD180   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult425;                          // 0xD1A8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult426;                          // 0xD1D0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult427;                          // 0xD1F8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult428;                          // 0xD220   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult429;                          // 0xD248   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult430;                          // 0xD270   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult431;                          // 0xD298   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult432;                          // 0xD2C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult433;                          // 0xD2E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult434;                          // 0xD310   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult435;                          // 0xD338   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult436;                          // 0xD360   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult437;                          // 0xD388   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult438;                          // 0xD3B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult439;                          // 0xD3D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult440;                          // 0xD400   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult441;                          // 0xD428   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult442;                          // 0xD450   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult443;                          // 0xD478   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult444;                          // 0xD4A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult445;                          // 0xD4C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult446;                          // 0xD4F0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult447;                          // 0xD518   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult448;                          // 0xD540   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult449;                          // 0xD568   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult450;                          // 0xD590   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult451;                          // 0xD5B8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult452;                          // 0xD5E0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult453;                          // 0xD608   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult454;                          // 0xD630   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult455;                          // 0xD658   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult456;                          // 0xD680   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult457;                          // 0xD6A8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult458;                          // 0xD6D0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult459;                          // 0xD6F8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult460;                          // 0xD720   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult461;                          // 0xD748   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult462;                          // 0xD770   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult463;                          // 0xD798   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult464;                          // 0xD7C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult465;                          // 0xD7E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult466;                          // 0xD810   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult467;                          // 0xD838   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult468;                          // 0xD860   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult469;                          // 0xD888   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult470;                          // 0xD8B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult471;                          // 0xD8D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult472;                          // 0xD900   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult473;                          // 0xD928   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult474;                          // 0xD950   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult475;                               // 0xD978   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult476;                          // 0xD9B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult477;                          // 0xD9D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult478;                          // 0xDA00   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer479;                            // 0xDA28   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult480;                               // 0xDAB8   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer481;                          // 0xDAF0   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult482;                               // 0xDBE8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer483;                            // 0xDC20   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult484;                               // 0xDCB0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine485;                              // 0xDCE8   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult486;                               // 0xDE20   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer487;                            // 0xDE58   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult488;                               // 0xDEE8   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult489;                               // 0xDF20   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult490;                          // 0xDF58   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult491;                          // 0xDF80   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult492;                          // 0xDFA8   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer493;                            // 0xDFD0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult494;                               // 0xE060   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer495;                            // 0xE098   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult496;                               // 0xE128   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer497;                            // 0xE160   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult498;                               // 0xE1F0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer499;                            // 0xE228   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult500;                               // 0xE2B8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine501;                              // 0xE2F0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult502;                               // 0xE428   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer503;                            // 0xE460   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult504;                               // 0xE4F0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult505;                          // 0xE528   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult506;                          // 0xE550   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult507;                          // 0xE578   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer508;                            // 0xE5A0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult509;                               // 0xE630   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer510;                            // 0xE668   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult511;                               // 0xE6F8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer512;                            // 0xE730   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult513;                               // 0xE7C0   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult514;                               // 0xE7F8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine515;                              // 0xE830   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult516;                               // 0xE968   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer517;                            // 0xE9A0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult518;                               // 0xEA30   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult519;                          // 0xEA68   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult520;                          // 0xEA90   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult521;                          // 0xEAB8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult522;                          // 0xEAE0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult523;                          // 0xEB08   (0x0028)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer524;                          // 0xEB30   (0x00F8)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive525;                             // 0xEC28   (0x00D0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer526;                            // 0xECF8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult527;                               // 0xED88   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer528;                          // 0xEDC0   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult529;                               // 0xEEB8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer530;                            // 0xEEF0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult531;                               // 0xEF80   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult532;                               // 0xEFB8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine533;                              // 0xEFF0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult534;                               // 0xF128   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer535;                            // 0xF160   (0x0090)  
	FAnimNode_BlendListByInt                           AnimGraphNode_BlendListByInt;                               // 0xF1F0   (0x00B0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer536;                            // 0xF2A0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult537;                               // 0xF330   (0x0038)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive538;                             // 0xF368   (0x00D0)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer539;                          // 0xF438   (0x00F8)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult540;                          // 0xF530   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult541;                          // 0xF558   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult542;                          // 0xF580   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult543;                          // 0xF5A8   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer544;                            // 0xF5D0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult545;                               // 0xF660   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer546;                            // 0xF698   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult547;                               // 0xF728   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult548;                               // 0xF760   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer549;                            // 0xF798   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult550;                               // 0xF828   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine551;                              // 0xF860   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult552;                               // 0xF998   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer553;                            // 0xF9D0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult554;                               // 0xFA60   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult555;                          // 0xFA98   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult556;                          // 0xFAC0   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer557;                            // 0xFAE8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult558;                               // 0xFB78   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer559;                            // 0xFBB0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult560;                               // 0xFC40   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult561;                               // 0xFC78   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine562;                              // 0xFCB0   (0x0138)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive563;                             // 0xFDE8   (0x00D0)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer564;                          // 0xFEB8   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult565;                               // 0xFFB0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer566;                            // 0xFFE8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult567;                               // 0x10078   (0x0038)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive568;                             // 0x100B0   (0x00D0)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer569;                          // 0x10180   (0x00F8)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult570;                          // 0x10278   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult571;                          // 0x102A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult572;                          // 0x102C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult573;                          // 0x102F0   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult574;                               // 0x10318   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer575;                            // 0x10350   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult576;                               // 0x103E0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer577;                            // 0x10418   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult578;                               // 0x104A8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer579;                            // 0x104E0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult580;                               // 0x10570   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine581;                              // 0x105A8   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult582;                               // 0x106E0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer583;                            // 0x10718   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult584;                               // 0x107A8   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult585;                          // 0x107E0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult586;                          // 0x10808   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult587;                          // 0x10830   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult588;                          // 0x10858   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult589;                          // 0x10880   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult590;                          // 0x108A8   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer591;                            // 0x108D0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult592;                               // 0x10960   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer593;                            // 0x10998   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult594;                               // 0x10A28   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer595;                            // 0x10A60   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult596;                               // 0x10AF0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer597;                            // 0x10B28   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult598;                               // 0x10BB8   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult599;                          // 0x10BF0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult600;                          // 0x10C18   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer601;                            // 0x10C40   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult602;                               // 0x10CD0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer603;                            // 0x10D08   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult604;                               // 0x10D98   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult605;                               // 0x10DD0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine606;                              // 0x10E08   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult607;                               // 0x10F40   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult608;                          // 0x10F78   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult609;                               // 0x10FA0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine610;                              // 0x10FD8   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult611;                               // 0x11110   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult612;                          // 0x11148   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult613;                          // 0x11170   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult614;                          // 0x11198   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult615;                          // 0x111C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult616;                          // 0x111E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult617;                          // 0x11210   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult618;                          // 0x11238   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult619;                          // 0x11260   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult620;                          // 0x11288   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer621;                            // 0x112B0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult622;                               // 0x11340   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult623;                               // 0x11378   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer624;                            // 0x113B0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult625;                               // 0x11440   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer626;                            // 0x11478   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult627;                               // 0x11508   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer628;                            // 0x11540   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult629;                               // 0x115D0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer630;                            // 0x11608   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult631;                               // 0x11698   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer632;                            // 0x116D0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult633;                               // 0x11760   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer634;                            // 0x11798   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult635;                               // 0x11828   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult636;                          // 0x11860   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer637;                            // 0x11888   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult638;                               // 0x11918   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine639;                              // 0x11950   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult640;                               // 0x11A88   (0x0038)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive641;                             // 0x11AC0   (0x00D0)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer642;                          // 0x11B90   (0x00F8)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult643;                          // 0x11C88   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult644;                          // 0x11CB0   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer645;                            // 0x11CD8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult646;                               // 0x11D68   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer647;                            // 0x11DA0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult648;                               // 0x11E30   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult649;                               // 0x11E68   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine650;                              // 0x11EA0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult651;                               // 0x11FD8   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult652;                          // 0x12010   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult653;                          // 0x12038   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult654;                          // 0x12060   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult655;                          // 0x12088   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult656;                          // 0x120B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult657;                          // 0x120D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult658;                          // 0x12100   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult659;                          // 0x12128   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult660;                          // 0x12150   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult661;                          // 0x12178   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult662;                          // 0x121A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult663;                          // 0x121C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult664;                          // 0x121F0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult665;                          // 0x12218   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult666;                          // 0x12240   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult667;                          // 0x12268   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult668;                          // 0x12290   (0x0028)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer669;                          // 0x122B8   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult670;                               // 0x123B0   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer671;                          // 0x123E8   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult672;                               // 0x124E0   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer673;                          // 0x12518   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult674;                               // 0x12610   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult675;                               // 0x12648   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer676;                            // 0x12680   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult677;                               // 0x12710   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer678;                            // 0x12748   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult679;                               // 0x127D8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer680;                            // 0x12810   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult681;                               // 0x128A0   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult682;                               // 0x128D8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine683;                              // 0x12910   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult684;                               // 0x12A48   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer685;                            // 0x12A80   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult686;                               // 0x12B10   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult687;                          // 0x12B48   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer688;                            // 0x12B70   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult689;                               // 0x12C00   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult690;                          // 0x12C38   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult691;                          // 0x12C60   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult692;                          // 0x12C88   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer693;                            // 0x12CB0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult694;                               // 0x12D40   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer695;                            // 0x12D78   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult696;                               // 0x12E08   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult697;                          // 0x12E40   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult698;                               // 0x12E68   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine699;                              // 0x12EA0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult700;                               // 0x12FD8   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult701;                          // 0x13010   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult702;                          // 0x13038   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult703;                          // 0x13060   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult704;                          // 0x13088   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult705;                          // 0x130B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult706;                          // 0x130D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult707;                          // 0x13100   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult708;                          // 0x13128   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult709;                               // 0x13150   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer710;                            // 0x13188   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult711;                               // 0x13218   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer712;                            // 0x13250   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult713;                               // 0x132E0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer714;                            // 0x13318   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult715;                               // 0x133A8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer716;                            // 0x133E0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult717;                               // 0x13470   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine718;                              // 0x134A8   (0x0138)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult719;                          // 0x135E0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult720;                          // 0x13608   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult721;                          // 0x13630   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult722;                          // 0x13658   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult723;                          // 0x13680   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult724;                          // 0x136A8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult725;                          // 0x136D0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult726;                          // 0x136F8   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult727;                               // 0x13720   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer728;                            // 0x13758   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult729;                               // 0x137E8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer730;                            // 0x13820   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult731;                               // 0x138B0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer732;                            // 0x138E8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult733;                               // 0x13978   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer734;                            // 0x139B0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult735;                               // 0x13A40   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine736;                              // 0x13A78   (0x0138)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult737;                          // 0x13BB0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult738;                          // 0x13BD8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult739;                          // 0x13C00   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult740;                          // 0x13C28   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult741;                          // 0x13C50   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult742;                          // 0x13C78   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult743;                          // 0x13CA0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult744;                          // 0x13CC8   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult745;                               // 0x13CF0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer746;                            // 0x13D28   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult747;                               // 0x13DB8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer748;                            // 0x13DF0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult749;                               // 0x13E80   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer750;                            // 0x13EB8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult751;                               // 0x13F48   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer752;                            // 0x13F80   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult753;                               // 0x14010   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine754;                              // 0x14048   (0x0138)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult755;                          // 0x14180   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult756;                          // 0x141A8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult757;                          // 0x141D0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult758;                          // 0x141F8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult759;                          // 0x14220   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult760;                          // 0x14248   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult761;                          // 0x14270   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult762;                          // 0x14298   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult763;                               // 0x142C0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer764;                            // 0x142F8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult765;                               // 0x14388   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer766;                            // 0x143C0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult767;                               // 0x14450   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer768;                            // 0x14488   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult769;                               // 0x14518   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer770;                            // 0x14550   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult771;                               // 0x145E0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine772;                              // 0x14618   (0x0138)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult773;                          // 0x14750   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult774;                          // 0x14778   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult775;                          // 0x147A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult776;                          // 0x147C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult777;                          // 0x147F0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult778;                          // 0x14818   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult779;                          // 0x14840   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult780;                          // 0x14868   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult781;                               // 0x14890   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer782;                            // 0x148C8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult783;                               // 0x14958   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer784;                            // 0x14990   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult785;                               // 0x14A20   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer786;                            // 0x14A58   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult787;                               // 0x14AE8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer788;                            // 0x14B20   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult789;                               // 0x14BB0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine790;                              // 0x14BE8   (0x0138)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult791;                          // 0x14D20   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult792;                          // 0x14D48   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult793;                          // 0x14D70   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult794;                          // 0x14D98   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult795;                          // 0x14DC0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult796;                          // 0x14DE8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult797;                          // 0x14E10   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult798;                          // 0x14E38   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult799;                               // 0x14E60   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer800;                            // 0x14E98   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult801;                               // 0x14F28   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer802;                            // 0x14F60   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult803;                               // 0x14FF0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer804;                            // 0x15028   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult805;                               // 0x150B8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer806;                            // 0x150F0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult807;                               // 0x15180   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine808;                              // 0x151B8   (0x0138)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult809;                          // 0x152F0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult810;                          // 0x15318   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult811;                          // 0x15340   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult812;                          // 0x15368   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult813;                          // 0x15390   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult814;                          // 0x153B8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult815;                          // 0x153E0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult816;                          // 0x15408   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult817;                               // 0x15430   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer818;                            // 0x15468   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult819;                               // 0x154F8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer820;                            // 0x15530   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult821;                               // 0x155C0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer822;                            // 0x155F8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult823;                               // 0x15688   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer824;                            // 0x156C0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult825;                               // 0x15750   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine826;                              // 0x15788   (0x0138)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult827;                          // 0x158C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult828;                          // 0x158E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult829;                          // 0x15910   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult830;                          // 0x15938   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult831;                          // 0x15960   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult832;                          // 0x15988   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult833;                          // 0x159B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult834;                          // 0x159D8   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult835;                               // 0x15A00   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer836;                            // 0x15A38   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult837;                               // 0x15AC8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer838;                            // 0x15B00   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult839;                               // 0x15B90   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer840;                            // 0x15BC8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult841;                               // 0x15C58   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer842;                            // 0x15C90   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult843;                               // 0x15D20   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine844;                              // 0x15D58   (0x0138)  
	FAnimNode_BlendListByInt                           AnimGraphNode_BlendListByInt845;                            // 0x15E90   (0x00B0)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult846;                               // 0x15F40   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult847;                          // 0x15F78   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer848;                            // 0x15FA0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult849;                               // 0x16030   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer850;                            // 0x16068   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult851;                               // 0x160F8   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult852;                          // 0x16130   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer853;                            // 0x16158   (0x0090)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive854;                             // 0x161E8   (0x00D0)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer855;                          // 0x162B8   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult856;                               // 0x163B0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer857;                            // 0x163E8   (0x0090)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive858;                             // 0x16478   (0x00D0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer859;                            // 0x16548   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult860;                               // 0x165D8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine861;                              // 0x16610   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult862;                               // 0x16748   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer863;                            // 0x16780   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult864;                               // 0x16810   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult865;                          // 0x16848   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult866;                               // 0x16870   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult867;                          // 0x168A8   (0x0028)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool868;                           // 0x168D0   (0x00B0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer869;                            // 0x16980   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer870;                            // 0x16A10   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer871;                            // 0x16AA0   (0x0090)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool872;                           // 0x16B30   (0x00B0)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult873;                               // 0x16BE0   (0x0038)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool874;                           // 0x16C18   (0x00B0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer875;                            // 0x16CC8   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer876;                            // 0x16D58   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer877;                            // 0x16DE8   (0x0090)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool878;                           // 0x16E78   (0x00B0)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult879;                               // 0x16F28   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult880;                          // 0x16F60   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer881;                            // 0x16F88   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer882;                            // 0x17018   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer883;                            // 0x170A8   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer884;                            // 0x17138   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer885;                            // 0x171C8   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer886;                            // 0x17258   (0x0090)  
	FAnimNode_BlendListByEnum                          AnimGraphNode_BlendListByEnum;                              // 0x172E8   (0x00C0)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult887;                               // 0x173A8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer888;                            // 0x173E0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult889;                               // 0x17470   (0x0038)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool890;                           // 0x174A8   (0x00B0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer891;                            // 0x17558   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer892;                            // 0x175E8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult893;                               // 0x17678   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult894;                          // 0x176B0   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer895;                            // 0x176D8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult896;                               // 0x17768   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult897;                          // 0x177A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult898;                          // 0x177C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult899;                          // 0x177F0   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult900;                               // 0x17818   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer901;                            // 0x17850   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult902;                               // 0x178E0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer903;                            // 0x17918   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult904;                               // 0x179A8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine905;                              // 0x179E0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult906;                               // 0x17B18   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult907;                          // 0x17B50   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult908;                          // 0x17B78   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult909;                          // 0x17BA0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult910;                          // 0x17BC8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult911;                          // 0x17BF0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult912;                          // 0x17C18   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult913;                          // 0x17C40   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult914;                          // 0x17C68   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult915;                          // 0x17C90   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult916;                          // 0x17CB8   (0x0028)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer917;                          // 0x17CE0   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult918;                               // 0x17DD8   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer919;                          // 0x17E10   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult920;                               // 0x17F08   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult921;                          // 0x17F40   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer922;                            // 0x17F68   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult923;                               // 0x17FF8   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult924;                               // 0x18030   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine925;                              // 0x18068   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult926;                               // 0x181A0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine927;                              // 0x181D8   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult928;                               // 0x18310   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult929;                          // 0x18348   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose930;                             // 0x18370   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult931;                               // 0x183A0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult932;                          // 0x183D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult933;                          // 0x18400   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult934;                          // 0x18428   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult935;                          // 0x18450   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult936;                          // 0x18478   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult937;                          // 0x184A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult938;                          // 0x184C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult939;                          // 0x184F0   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer940;                            // 0x18518   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult941;                               // 0x185A8   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult942;                          // 0x185E0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult943;                          // 0x18608   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult944;                          // 0x18630   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult945;                          // 0x18658   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult946;                          // 0x18680   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult947;                          // 0x186A8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult948;                          // 0x186D0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult949;                          // 0x186F8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult950;                          // 0x18720   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult951;                          // 0x18748   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult952;                          // 0x18770   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult953;                          // 0x18798   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult954;                          // 0x187C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult955;                          // 0x187E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult956;                          // 0x18810   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult957;                          // 0x18838   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult958;                               // 0x18860   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult959;                               // 0x18898   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult960;                          // 0x188D0   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer961;                            // 0x188F8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult962;                               // 0x18988   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer963;                            // 0x189C0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult964;                               // 0x18A50   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer965;                            // 0x18A88   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult966;                               // 0x18B18   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer967;                            // 0x18B50   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult968;                               // 0x18BE0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult969;                          // 0x18C18   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult970;                          // 0x18C40   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer971;                            // 0x18C68   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult972;                               // 0x18CF8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer973;                            // 0x18D30   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult974;                               // 0x18DC0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine975;                              // 0x18DF8   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult976;                               // 0x18F30   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer977;                            // 0x18F68   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult978;                               // 0x18FF8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer979;                            // 0x19030   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult980;                               // 0x190C0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine981;                              // 0x190F8   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult982;                               // 0x19230   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer983;                            // 0x19268   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult984;                               // 0x192F8   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult985;                          // 0x19330   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult986;                          // 0x19358   (0x0028)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend987;                               // 0x19380   (0x00C8)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer988;                            // 0x19448   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer989;                            // 0x194D8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult990;                               // 0x19568   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult991;                               // 0x195A0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine992;                              // 0x195D8   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult993;                               // 0x19710   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult994;                          // 0x19748   (0x0028)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend995;                               // 0x19770   (0x00C8)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend996;                               // 0x19838   (0x00C8)  
	FAnimNode_SequenceEvaluator                        AnimGraphNode_SequenceEvaluator;                            // 0x19900   (0x0060)  
	FAnimNode_SequenceEvaluator                        AnimGraphNode_SequenceEvaluator997;                         // 0x19960   (0x0060)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive998;                             // 0x199C0   (0x00D0)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer999;                          // 0x19A90   (0x00F8)  
	FAnimNode_ModifyCurve                              AnimGraphNode_ModifyCurve;                                  // 0x19B88   (0x0058)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend1000;                              // 0x19BE0   (0x00C8)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1001;                           // 0x19CA8   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1002;                           // 0x19D38   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1003;                              // 0x19DC8   (0x0038)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive1004;                            // 0x19E00   (0x00D0)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer1005;                         // 0x19ED0   (0x00F8)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1006;                         // 0x19FC8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1007;                         // 0x19FF0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1008;                         // 0x1A018   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1009;                         // 0x1A040   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1010;                         // 0x1A068   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1011;                           // 0x1A090   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1012;                              // 0x1A120   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1013;                              // 0x1A158   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1014;                           // 0x1A190   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1015;                              // 0x1A220   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer1016;                         // 0x1A258   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1017;                              // 0x1A350   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer1018;                         // 0x1A388   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1019;                              // 0x1A480   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine1020;                             // 0x1A4B8   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1021;                              // 0x1A5F0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1022;                         // 0x1A628   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1023;                         // 0x1A650   (0x0028)  
	FAnimNode_SequenceEvaluator                        AnimGraphNode_SequenceEvaluator1024;                        // 0x1A678   (0x0060)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool1025;                          // 0x1A6D8   (0x00B0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose1026;                            // 0x1A788   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1027;                              // 0x1A7B8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine1028;                             // 0x1A7F0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1029;                              // 0x1A928   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine1030;                             // 0x1A960   (0x0138)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1031;                         // 0x1AA98   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose1032;                            // 0x1AAC0   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1033;                              // 0x1AAF0   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1034;                              // 0x1AB28   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine1035;                             // 0x1AB60   (0x0138)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive1036;                            // 0x1AC98   (0x00D0)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer1037;                          // 0x1AD68   (0x00C0)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer1038;                         // 0x1AE28   (0x00F8)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer1039;                         // 0x1AF20   (0x00F8)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer1040;                         // 0x1B018   (0x00F8)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer1041;                         // 0x1B110   (0x00F8)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer1042;                         // 0x1B208   (0x00F8)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer1043;                         // 0x1B300   (0x00F8)  
	FAnimNode_TwoWayBlend                              AnimGraphNode_TwoWayBlend1044;                              // 0x1B3F8   (0x00C8)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1045;                           // 0x1B4C0   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1046;                           // 0x1B550   (0x0090)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer1047;                         // 0x1B5E0   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1048;                              // 0x1B6D8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine1049;                             // 0x1B710   (0x0138)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1050;                         // 0x1B848   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1051;                         // 0x1B870   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1052;                         // 0x1B898   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1053;                         // 0x1B8C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1054;                         // 0x1B8E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1055;                         // 0x1B910   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1056;                         // 0x1B938   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1057;                         // 0x1B960   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1058;                         // 0x1B988   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1059;                         // 0x1B9B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1060;                         // 0x1B9D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1061;                         // 0x1BA00   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1062;                         // 0x1BA28   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1063;                         // 0x1BA50   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1064;                         // 0x1BA78   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1065;                         // 0x1BAA0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1066;                         // 0x1BAC8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1067;                         // 0x1BAF0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1068;                         // 0x1BB18   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1069;                         // 0x1BB40   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1070;                         // 0x1BB68   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1071;                         // 0x1BB90   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1072;                         // 0x1BBB8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1073;                         // 0x1BBE0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1074;                         // 0x1BC08   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1075;                         // 0x1BC30   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1076;                         // 0x1BC58   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1077;                         // 0x1BC80   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1078;                         // 0x1BCA8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1079;                         // 0x1BCD0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1080;                         // 0x1BCF8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1081;                         // 0x1BD20   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1082;                         // 0x1BD48   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1083;                           // 0x1BD70   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1084;                              // 0x1BE00   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1085;                           // 0x1BE38   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1086;                              // 0x1BEC8   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1087;                         // 0x1BF00   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1088;                           // 0x1BF28   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1089;                              // 0x1BFB8   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1090;                         // 0x1BFF0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1091;                         // 0x1C018   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1092;                         // 0x1C040   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1093;                         // 0x1C068   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1094;                         // 0x1C090   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1095;                         // 0x1C0B8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1096;                         // 0x1C0E0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1097;                         // 0x1C108   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1098;                         // 0x1C130   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1099;                         // 0x1C158   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1100;                         // 0x1C180   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1101;                         // 0x1C1A8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1102;                         // 0x1C1D0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1103;                         // 0x1C1F8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1104;                         // 0x1C220   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1105;                         // 0x1C248   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1106;                              // 0x1C270   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1107;                              // 0x1C2A8   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1108;                         // 0x1C2E0   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1109;                           // 0x1C308   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1110;                              // 0x1C398   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1111;                           // 0x1C3D0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1112;                              // 0x1C460   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1113;                           // 0x1C498   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1114;                              // 0x1C528   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1115;                           // 0x1C560   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1116;                              // 0x1C5F0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1117;                         // 0x1C628   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1118;                         // 0x1C650   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1119;                           // 0x1C678   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1120;                              // 0x1C708   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1121;                           // 0x1C740   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1122;                              // 0x1C7D0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine1123;                             // 0x1C808   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1124;                              // 0x1C940   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1125;                         // 0x1C978   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1126;                              // 0x1C9A0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1127;                         // 0x1C9D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1128;                         // 0x1CA00   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1129;                         // 0x1CA28   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1130;                         // 0x1CA50   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1131;                         // 0x1CA78   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1132;                         // 0x1CAA0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1133;                         // 0x1CAC8   (0x0028)  
	FAnimNode_BlendListByInt                           AnimGraphNode_BlendListByInt1134;                           // 0x1CAF0   (0x00B0)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1135;                           // 0x1CBA0   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1136;                           // 0x1CC30   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1137;                           // 0x1CCC0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1138;                              // 0x1CD50   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1139;                           // 0x1CD88   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1140;                              // 0x1CE18   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1141;                           // 0x1CE50   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1142;                              // 0x1CEE0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1143;                           // 0x1CF18   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1144;                              // 0x1CFA8   (0x0038)  
	FAnimNode_SequenceEvaluator                        AnimGraphNode_SequenceEvaluator1145;                        // 0x1CFE0   (0x0060)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1146;                              // 0x1D040   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine1147;                             // 0x1D078   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1148;                              // 0x1D1B0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1149;                           // 0x1D1E8   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1150;                           // 0x1D278   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1151;                           // 0x1D308   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1152;                           // 0x1D398   (0x0090)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive1153;                            // 0x1D428   (0x00D0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose1154;                            // 0x1D4F8   (0x0030)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend1155;                            // 0x1D528   (0x0050)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1156;                              // 0x1D578   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1157;                           // 0x1D5B0   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1158;                           // 0x1D640   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1159;                           // 0x1D6D0   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer1160;                           // 0x1D760   (0x0090)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive1161;                            // 0x1D7F0   (0x00D0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose1162;                            // 0x1D8C0   (0x0030)  
	FAnimNode_MultiWayBlend                            AnimGraphNode_MultiWayBlend1163;                            // 0x1D8F0   (0x0050)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1164;                              // 0x1D940   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose1165;                            // 0x1D978   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1166;                              // 0x1D9A8   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose1167;                            // 0x1D9E0   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult1168;                              // 0x1DA10   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine1169;                             // 0x1DA48   (0x0138)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose1170;                           // 0x1DB80   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose1171;                           // 0x1DD30   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose1172;                           // 0x1DEE0   (0x01B0)  
	FAnimNode_Slot                                     AnimGraphNode_Slot1173;                                     // 0x1E090   (0x0060)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose1174;                           // 0x1E0F0   (0x01B0)  
	FAnimNode_Slot                                     AnimGraphNode_Slot1175;                                     // 0x1E2A0   (0x0060)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose1176;                            // 0x1E300   (0x0030)  
	FAnimNode_Root                                     AnimGraphNode_Root1177;                                     // 0x1E330   (0x0038)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer1178;                          // 0x1E368   (0x00C0)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer1179;                          // 0x1E428   (0x00C0)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer1180;                          // 0x1E4E8   (0x00C0)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer1181;                          // 0x1E5A8   (0x00C0)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer1182;                          // 0x1E668   (0x00C0)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose1183;                          // 0x1E728   (0x0138)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace1184;                    // 0x1E860   (0x0020)  
	FAnimNode_Root                                     AnimGraphNode_Root1185;                                     // 0x1E880   (0x0038)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer1186;                          // 0x1E8B8   (0x00C0)  
	FAnimNode_PoseSnapshot                             AnimGraphNode_PoseSnapshot1187;                             // 0x1E978   (0x00B0)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool1188;                          // 0x1EA28   (0x00B0)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer1189;                          // 0x1EAD8   (0x00C0)  
	class ATsBaseCharacter_C*                          __r_;                                                       // 0x1EB98   (0x0008)  
	float                                              ____;                                                       // 0x1EBA0   (0x0004)  
	FVector                                            teSO;                                                       // 0x1EBA4   (0x000C)  
	class USkeletalMeshComponent*                      __r_M;                                                      // 0x1EBB0   (0x0008)  
	FVector                                            teSOOP_y_;                                                  // 0x1EBB8   (0x000C)  
	bool                                               _f_T;                                                       // 0x1EBC4   (0x0001)  
	bool                                               _f_T_X;                                                     // 0x1EBC5   (0x0001)  
	unsigned char                                      UnknownData10_6[0x2];                                       // 0x1EBC6   (0x0002)  MISSED
	FHitResult                                         _____c;                                                     // 0x1EBC8   (0x0094)  
	FHitResult                                         _S___c;                                                     // 0x1EC5C   (0x0094)  
	bool                                               _f_T_SKb;                                                   // 0x1ECF0   (0x0001)  
	bool                                               FASLE;                                                      // 0x1ECF1   (0x0001)  
	unsigned char                                      UnknownData11_6[0x2];                                       // 0x1ECF2   (0x0002)  MISSED
	float                                              _____T;                                                     // 0x1ECF4   (0x0004)  
	char                                               _S_e_v;                                                     // 0x1ECF8   (0x0001)  
	unsigned char                                      UnknownData12_6[0x3];                                       // 0x1ECF9   (0x0003)  MISSED
	float                                              __ir_b;                                                     // 0x1ECFC   (0x0004)  
	int32_t                                            _Q_Q__;                                                     // 0x1ED00   (0x0004)  
	float                                              ____1190;                                                   // 0x1ED04   (0x0004)  
	bool                                               _r___;                                                      // 0x1ED08   (0x0001)  
	unsigned char                                      UnknownData13_6[0x3];                                       // 0x1ED09   (0x0003)  MISSED
	FVector2D                                          X;                                                          // 0x1ED0C   (0x0008)  
	bool                                               _n__;                                                       // 0x1ED14   (0x0001)  
	unsigned char                                      UnknownData14_6[0x3];                                       // 0x1ED15   (0x0003)  MISSED
	FVeloctiyBlend                                     _R__l;                                                      // 0x1ED18   (0x0010)  
	bool                                               X1191;                                                      // 0x1ED28   (0x0001)  
	bool                                               XAMovingUp;                                                 // 0x1ED29   (0x0001)  
	unsigned char                                      UnknownData15_6[0x6];                                       // 0x1ED2A   (0x0006)  MISSED
	FPoseSnapshot                                      CachePose;                                                  // 0x1ED30   (0x0040)  
	bool                                               EnableSwitchPose;                                           // 0x1ED70   (0x0001)  
	bool                                               C;                                                          // 0x1ED71   (0x0001)  
	unsigned char                                      UnknownData16_6[0x2];                                       // 0x1ED72   (0x0002)  MISSED
	float                                              SwitchPoseTime;                                             // 0x1ED74   (0x0004)  
	bool                                               _b___r__;                                                   // 0x1ED78   (0x0001)  
	// void InterfaceJumpPressed(float& Speed);                                                                                 // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _O_(FPoseLink InPose, FPoseLink& _O_);                                                                              // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _o_(FPoseLink InPose, FPoseLink& _o_);                                                                              // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _0Wb__z_z__(FPoseLink MR_, FPoseLink _T_, FPoseLink __MR_, FPoseLink _SMR_, FPoseLink ___T_, FPoseLink _S_T_, FPoseLink MR_1, FPoseLink& _0Wb__z_z__); // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void zz_N_(FPoseLink zz_N, FPoseLink zz_N1, FPoseLink zz_N___QB, FPoseLink& zz_N_);                                      // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _T_Y(FPoseLink InPose, FPoseLink& _T_Y);                                                                            // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _0Wb__z_z_(FPoseLink M, FPoseLink _, FPoseLink __, FPoseLink __1, FPoseLink _S, FPoseLink _S1, FPoseLink _Q, FPoseLink& _0Wb__z_z_); // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _m_(FPoseLink _W_xB, FPoseLink _S_RB, FPoseLink _Y_RB, FPoseLink& _m_);                                             // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _____m_(FPoseLink BaseLayer, FPoseLink OverlayLayer, FPoseLink BasePose, FPoseLink& _____m_);                       // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _W_x_(FPoseLink& _W_x_);                                                                                            // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _S_(FPoseLink __r_yr, FPoseLink& _S_);                                                                              // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _W_(FPoseLink& _W_);                                                                                                // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AnimGraph(FPoseLink SpeicalPose, FPoseLink& AnimGraph);                                                             // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void __0W_____();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void VelocityBlendLerp(FVeloctiyBlend From, FVeloctiyBlend To, float ALPHA, FVeloctiyBlend& Out);                        // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void X();                                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __n___(float _e_);                                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _Q_Q__();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ______(float __, float& _m);                                                                                        // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void CleanAnimVariable();                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void T(TArray<bool>& ValArrt_Bool, int32_t& Out);                                                                        // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _Rbc0Wb__y_R_();                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _f_e();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _R_Y_S();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _fbc__r__e_(class UABP_BaseRole_C* _R_Q__r_A);                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __n_4Y__(SightLockMode SightMode);                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _f_e_S();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_BlendListByBool_00A404344DA24364925BB5911B3A9132(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_AdditiveBoneBlend_4676B3AD44A9DBEF05557F9641B627BC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_KuroHumanIK_CE44DB2246935FC9B33889ACC4B3CAB0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_FeedbackRotate_E66596F54B01544EEA9DCA9968AEE1ED(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_ModifyBone_74BA0E594940EE66F7D4C2BEF987117E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_SightLock_638B6E0C416A57EB541CDAB0A678794E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_MultiWayBlend_EDBB38CF49A0B333E44D61BFE4548C04(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_E459BA5840FFD74EBAEBA29564D35E1C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5A8608844A1B7A2236FDAF8543D89E11(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_19A45D6E4F24D92C1C3A398F90190528(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_61E9501B4EEA76CF19AFEBBA2298516C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_1649CD1240CA7287D6B79B84FFF97AF5(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_8799B91549C90C8DAFBB0DA6AC0E3136(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_F214CA874BF14037373A0BAE463D884D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_9042651E4A10575C344AF9AEEF56F801(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5EF6764A42DC4DD1C05EC8ABD27E0A85(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_0B67C3E240088BA10FE067A25767278A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_8D82C6B74F286FB3ABCB6398B806AB78(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_A78C427F45CD11A037293E8E67F6B6D6(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_FEDE33FB4A11B516399C2FAC448BFC37(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5DD61A5947EB802B1124CCB61C616F21(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3CF6F47643B83662ACF789819BA271F1(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D8B0A8FF40F8B103C9C6CFAFB06ABB2B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_38F816CA4806E22E805384B9654A43FB(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_2A3EF5F64A25167A4C02719C660675E5(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_BA3B19BF4AA7856AB31525867433D254(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_F76A3CF14B2AC520814051BB64B5E83E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_0F0A6825477894E87E13B9A0BFC7E669(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_9256FF274CAA16983EDCBA8D02999781(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_53CE983E439C700B446248A7E8DECF04(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_6ABCA35C4A203D619FB4F69C17AC45A9(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_923AB28F49A483174C4975A5BD00A966(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_78D106DC4EA68B2BA026DA816DA8D28A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_A2834A4848800EF4BC3122AA4FA43E3D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D56840C24182B05914C1E4BB04AE53A2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_BA86F29F429296836F4F4E919C8022BE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_8CF71A5A46A74A3670F83385060EBE82(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_968B317E4E8E665C3A6363897F96E8F4(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D8DF6A9546F2C14399FB59972A2B8427(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_2E51F15A4767EBBBCB13808A96CEB232(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_92A5952F47C8E56D1B9EB6843BDA6D57(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3E6249454F53C1FD567B82BF83CD8B9C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_4AA67C5C4DD393DE4314398AC7B823EC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_C1308EEA4CD5E979475EE9A348213D3C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_54526EB045EFE016CE08FE8AAEA1999C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_A27B835B43085AE9872E12882F461914(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_6A68D02440E296B75EE7549462769532(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_BlendSpacePlayer_8F66354F4F1C951529B046A78AB11DCC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_BlendListByBool_A1E269B646FA7411591D9D896B367F07(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5381240F458B835432A44C91CA0A0A71(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_40E7B63746DE477722F11890500B1936(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5FD73B034D79CDCEAD38A2A0014F3A1E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_EA0E691143AD0CEE9979F5B5B938B6BB(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_ED9060204BD5BB0D5991BDB6725E4ED4(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TwoWayBlend_E23F742849EB43F3391A98BC103409ED(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TwoWayBlend_D88F65564B96D455B02D3DBF714F5427(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TwoWayBlend_367F3BFA428441F13649699AB8095D47(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_2F6F9426405AA473E26BB2B82D4FCC0C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_1957C270443FD65E03949FA7B1E5A9A0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_78F633964F9081C0BB2ED48363412CE8(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_FBFA19974409085366790085B0207065(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_ECF6BEE54562D2A5677AA7A7010D0110(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3A5E0C09481E9422584929A315DD24D8(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_A1D7BDAE418D5B3D8261D3980D2142F0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3EAA9D5E4873F9DFA864DC9E1F9C882D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_ED0665A34DDB8992C2B738A57D4F2F75(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_34D0ED024C01D732F9BF49A0AA5EEA05(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_11FDB7AE438F66B1CDE4CDA438C30FA8(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_64A6AE9E471421CE11611BBFDFB8687D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_B00F3D5B4D3155F8E7B229B80DF4CB0D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_739B3D93438FAA74FC6716BD67E482F6(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D9FBF48042E60B602FE40991992C1F19(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_0BD0E53B4D18241E4C8C09B48CD4C352(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5942570242BD10239FB7089FC438975A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_068A3ED14C80DBECE47835B9DA3DA077(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5004A6F846C693D29C1EDCA161C0D52D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_DF7487C548BB53158D5010B28BE29F77(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_8777C6244F654BF16D557DA2A42219E9(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_2ACCEACF4ED5937D41FAF3AB8ECD9301(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_746953CC42ABBF7AC3B70498DE243FC5(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_501E9A8C49485C7C47EADEA2F7157F52(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_710EA0F445B3FA3A93766F921B041C22(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_BlendListByEnum_0787DCAD442205E32E8F7B8A4F778799(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_00528A714396CB80E7A38393F6ACEDEC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5707EBFF425E03CD26295FAECFDFF839(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_CC4D24204D86F23DCCC8678486B747BF(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_04DC605B4FB46A53607C6DB4A1614775(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_11A055A34E6FDE4A0D46F9836912DC43(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_B04ECB2547AAA6FE54EE1AAC74FC2352(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_80C220C24ADD7BA1202E2C88EF831BC0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_93761EA54EFB4DB98A0F1F8C699E35A5(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_CE9ED2AB407A5A7C73DA4191ECBFC1A7(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_1FC74A3948ECDD16BD1EB38876743D2D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_47ECFD3E41A1805512A8F6A16E56028B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_CFE90ED94914725F32832CAE5469930F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D8AEBB2A46C39606666B94AC6DBB3E28(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_E515376F4F789DCADB6E248BD7E3634D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_094A5FCF45F68D0B73DF5FAE2EFCD730(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3FFE39E54C760E352A5D1DABD2A2E96D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3A76CABA41D3BFCB765D2988D455E5B3(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5AA1BEC944309BD8835C9585E5EC09B0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_B8753ED54AB8CE107A1E00B3F986B74F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_1EF7F3594479A99422F6288569188DD7(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_E7FBCCA7495E3FB9CE078AB337A666C4(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_E6B18C0542C914277D317F8BCB6511C6(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_6865D998486D44768881258A4922A95D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_620787DF4BEE820BC501228A35EE3D1E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_F874F6154EF4EE136654C0931917E3B3(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_585705764862D19B08615CB6B5A155F7(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_45C9CDCC48F5861345DDC8B864609B51(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_90F4E02C403AFC7663D2D0BFE67F9809(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_27C2EB5940A9167357EFC0B85DAABC36(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D94C87BA40F3B8ABEAAC73ACDB6CB68F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_BE3726F64FA2492A87125C9DB6DF0077(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_65E265FE470C10788BDA0E939439F0A0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_79892BF34DBEE7D3CE9AD981E0015D11(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_9ED577D848EBBAA043FCB1A63E6B903E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_8D69F09F415333DEA1BB148071CB9B8C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_161BCEB6421A3F32E6D9AE9E461E20A4(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_9AD508254FEC447622DA2494DB6982F3(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_498734EC4C07EE93F98A36A00B14DBEF(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_193B2E34496704515931AFB6B44D3CA3(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_07AFB3894B03C22BC50C0ABF80D79048(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_4A6A26E24B209196C3E19CAC98C77B45(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_BF2DABFF42FBB8AA6CF79E8D7D37EB10(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_C859F783496E293478C14BB717AEDF18(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_F35D51F14B73D2A6D86DB0AD43990576(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_96CF28534638EB320BA9E0A37D0F877B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_7CBBD3694A357C101AB63B9884E413CD(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3A9837194B2A930332CFF98E0C794358(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_EEE10E664368C9969D007EA3644099ED(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_DD4F37444631F84CCF97F19374400648(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_573EF894406A1FBF31CE86BB7E4AF229(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_4B0F746D42610C6E3AA06A84459798D0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_86CCC0384A0EBA59B70663B44B5F8974(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_B97BDE354E8416120BD38294D3A3DE16(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_F56ACF684E6D6216A22BF1A47A81CE0D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_A719057D4A66A7EA22EF58898F474930(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_DAB165044A6F27E1A2C8229DE6ABA02B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_FD8D82DA41F09D5A6E13F3851EADF8C2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_98B2218D40C691D7AB7AA78C032B2B57(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_C7E7E63B47600243F5DABC8F51F445FE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_1527A88341F2BC10D2DEDDA62929275F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_7808DCBD49EA9CA19F03A786294C2AFA(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_23496F7A49D53FF686D1E0B7959E25EA(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_0577C29C42BE7B5101551F80F23FD26B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_89B1D08A45DC1E1903B0F18432C51D06(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_C8538C5F4C977217758CA9B44E3F9466(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_B68695574941128040B14FABC8CF8D50(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_CB3518C94AF2F0B44870519103CC3E57(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_2D05156645D2C30772A9329E35B1AA40(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_243F5BBB4A9EEF950D89F2BBEB354FBE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_913118564B7B689D9AB6038B18F83FB3(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_43909DA64D43BF3A846E718AE5F5F96D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_092E59044955AECB2D481CB3DB5F1C67(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_6DA378EB4707AE76781DD0936C30EF96(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_22488D6448275C35C0D0CB9B0219AE24(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5740E4D449083A8FA5F19D9D417F2180(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_B0C0334E42F9402C186C3EB3B3700DA1(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_762E3A5149D014DD8300A1AEF46DA79E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_8BB628DC438367760C7BDFB58A1B00EC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_B9FD9717485B249C1F2EBFBF5EEDA011(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3536DD074C145E096CB187A81915223D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D0F5B8B84FD280D482C3F6931AF78D5D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_BE5BE99C4073CE715CDC67B81F84A69A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_4578F87F4691F9E3229747853316B5AE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_BlendListByInt_8E80968C47B72E731A00BDAC05DB1F84(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_F912FCC54AC0472EB847CD88A56644EC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_A3E6EC9347212C7C348DC6ACE302E8D0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D683C77043A485C1764423B81B84C77D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_F4DF01A048D88B77596DE6B7CB389D26(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_17C29C094E1CFB601391E8B7B3D88D8E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_4FE7DFFB46C350B9D38C0EA27B2EAA4C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_BACEA6834DD91F813AB0938F512E78F7(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_89EB59704750CD04591E7BBEF811ED64(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D3A0934D4E3F6A83401EBBB056E21F40(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_902FF3744891D091850A28BDE3B6BC6A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_F2B735D14C0E30B1EFCF4493C4BBCFE8(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_4865AA0F4D11C7A8A313FABD6D72C784(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_4C96AAAD4882846BC5EFC081B37E7962(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_BAEFF4BE4140CA9C8E75458B5D6D30EE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_C46A954342BD0E4BE464FFAF43C8AAFE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_80B3B5A1426640A5C417BFA58EE12C4C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_044EB84848D64F55FA366DBDC02048F2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_382034274F496236ACC6DC8B8023B273(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_DD0003184720684EC5AC52BFE89F454A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D1A56E2D44FF5CACF55E60BF94930868(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3D5CA3D44477367FF6E2758FE4ADBB3D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_DCF72A5645A3BFC2A6A54582814304A6(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_2FD262F44A2BFD9596395ABE59D0B2C6(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_6B29F69841FEC3B8494FF9A0E7ADCD3B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_A9DB6D05483D55BC9DEFCFA82F6B72BD(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_73FE595743970EA7D49E2FB8738544AE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_F33322EA4E4CFE3FB7D1DC99DA7FA9A1(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_6D7C0DD246D67B33CCCE889D745BA8CA(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_0B7D383543C5DE89E15335AE321312A9(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_B8A3FCE548C5AB267294E6A322688CDB(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_26DFD5644D574A8B3ACE038630B2C960(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_A675F0574C92E518F45CC4BFC0501AF6(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3DA3F4EF4F778131A05D2BA62FF9B65D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_108589EA40E2B386F7DA27A6470C6338(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_0FE351D141DB3D4A26642B9A0D23B1AF(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_42AF1C974AD7FE63E2F73BB8F6CC75A0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_6E16E00A4E885C85558AE88C38938455(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_A9E8A9EF4306B207FA5A83AC02F7796A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_2FC2AA05471892D171BA3AA3D844C22D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_9EDCBB46411D4EFECAB6958A2D572D06(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_2BDDBD174CE036DC77EEF0AB7D9AD058(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_62011102499F43F8B1A673B9CA2EB51E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_DFD1EC0744FC942B7A19C8A87CE75B5F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_E03F7E6945779483086C3892D28BCDC2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_1A2916C0413F70245520CBB1F427F4D6(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_EE08F56940C40EC59105AFAC75323199(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_60E6422148C68B017B2513BB9FE93992(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_897025994B76B75BAA1DA2AC465836D4(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_DC4E075648DD0C2CFE084696BD200CB7(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_C78918B844471D3B6402B7AA57688D95(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_8525255B4141CF3C87F7DF94D6F8128C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_4A711FDB4DD96D869AF22AB13FDD3E40(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_B16DDF974EF5346D0C56A0A9FA8B32DE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_FA532F81425F23066C84539039A473FB(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_AA8FD0D04189CFD1647769879AA0DABC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D33FE50B41BBF4131A6C59B40AFF917D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_FB10783F4130348FBA735D8947E35219(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_E5DA17C74E85996A56F17F8C289A011B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_A2A303FF4B73E6D45CDE2B888C4AB02A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D442A1954937184FB2E76D919A9564A1(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_B4711A834B93C5C9498BBFB53E410E57(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3A283EE643785B7C99D960ACECA12885(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_1E56AD4D4307172862620FB47BA89422(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5743A07849D8250E60F825B7FE28A3A9(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D92303DA44D5F02894C6D9B6596C2ECE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_8B202CBF4BC2EDE3BFF8A1B1078709BE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_FFF878EE4362E918DA30759EAEBA7D40(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_E523AEFE420159D90EA988B96C3CF45F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D31D44E041EE52D049EB44AE37BD1BB3(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_0EC2442B4DF18588A2AD01834287C51C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_AD33DC9749BFE671C5D3FD88F29FF9B3(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_975122DA43AF6CFF876B899FD39BC67C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_6572E6E14225720297A648B4D3F44E5B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_8201BFE640DA91480D66CD943830EDFD(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_823B1DC44898CC20E83B84A8D6C9A23A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_071EA6FE457FCEBB85E9E78886D4BD4F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_DD74CE3E4D27F22C3CD1408B0B2EF9D6(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_F8775E054638E35A1AB5A383F7926EDA(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_082CACF64792EDA8746190A64638F070(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_82545DAF4951468A66F66B845EBD7E74(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_58CA70EE4FDB5F66E5A26396A3F6940B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_A94D9F9C4B8CB264C4D2378B3E0F3B27(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_099F2DAE4B6AD2B21C284BB977E235C4(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_6C3CF77741D7527F231C5081197292EC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_789904AC47AC85D475AC6EB9E3B9EDCE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_520003034ACAD46EA32AC79BCCA4CF1A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_78D015164C26FD6E73C9FAB5DFEBC900(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_4D604EBF45A6DE47A18912806DFB7F4B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_E9375EA0445AE064965EF08DF6D4C4D9(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_CA01AC1F40B3FF3CA0DC618D3DD33D4B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_FA6488394F7F5545F7F78A82B291242A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_6A3416944942874A1EFB118B34636EC8(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_6D7174E34011CA83845F4087D65C0672(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_BDE17B1448FAEA08059741BFC7A578C7(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D1BC9A704D75D5A689E0C498861FA752(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_42DA59774411BD98F26F7BA08BBC5977(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_11DC0D3443A4E83BF5035E95B64A4844(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_9D43CDD54969751064D040A80532AA4F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3C16556E4EC018202AE82898092D4FF3(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_08D23568405B990178BA2BA607E3DF62(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_41AE836F460BE45BCAD8D7BD42453EDC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_55608B5C4F67090C2458B08EE3AEAFCC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_B5B1CD7548499F94B32852AD0BE836EA(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_6F7B53024CAFF29EFAB82AA0C4942BE2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_53025CF74309A800AC666BA43B692F38(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_53AA0AB44BBF0D76431F689EB32B4AD9(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_478570CC4D4A2BD142500B924657417C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_326BA2654767C947E5C62C97B7931574(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_04756E604299EFB1EC98D9828C7ED47B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_FB29EF51465B0E1AB1B41A8E9E5EB7F4(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3627B35841D3DAA7B24DCEAF388B7A98(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_7AE98C7C43EB1AA8DB3FAFB362FAD3FB(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_79E932274D10DA1B00F61D9AB3EBB7D2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_12DD9F4E43FB4B09AB15B39D27A109B5(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_439A33434645E4060154C28F82C26726(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_35E89D4746B11B860B6FCAA96194F3AC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D7FDA5F846CBA40173443CB2B54A574A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_4389F57949F954C1A26ED29B159D65B2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_C724A932431673569788CE8E1DB6EE1F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_BC08EDE94EF1B16D07D9049F2F873E03(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_224B0F6D42DBF17AB2403993579074E4(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_8D2A1E78495F1CB444003099012EBF2C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_DC2FAD594C2D658E440621AD7CCCE792(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5AB579664B2B5FF55A5AA2AA9165A000(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_805CD012474F541D3094859078A6F7D0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_0059E4A44A2E093126F2D5B78C1F166F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3B8499D841B6121A5FE955B93DE12EB2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5D33D4134E5089C433C722B9CB95DE7A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_6B222A0F4EED438C8E57009267C0D2CB(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_E92C9C154183602E7D1028A30578DB13(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_5F0D032040B0A8DB4212BBA6BCFCD4CB(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_4679FD0B4D249275D09179BCCD81D3A0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3BF32B814D45D155A458BB9F57C10F8C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_1C1D4784404C7A054DCE70B3D005D71E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_33E25DE24BE720E27BC9A49317330453(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_39F939DF4ED9CB8128A6BCAB82E678E3(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_ABAC73734BEDAD39CF8E0E84960D0FD3(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_2C90C7AD4E56597916A0AD860A88759F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_D305261A4AF95802EDBA24967DFC13A9(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_20D62F9D44832A26463EC18194CD77B7(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_F26B38214F0A3AAF0767BBA2C692B8D1(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_83C9AFCC4DBB4B2A160410AA9C50AD66(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_769339DA4DA19221FB7F069AC58459B0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_E11C80A144C3D81C3C91679BF6DB9B17(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_E0A69F7D489D13678C3D0092B6A2A380(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_20EB755F46F0BF64E4EE81AA6DC26503(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3E085E4042962FC67A9EA89936D45B94(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_FC39E741453367FCD88A6BB834BDB473(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_3B443B6D4F05EFCFAFB6ABAA551B13F8(); // [0x25a7960] BlueprintEvent       
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void TestFk();                                                                                                           // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void A();                                                                                                                // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseRole_AnimGraphNode_TransitionResult_7F3A04B04BD03C9E3E4396A86F12D1BE(); // [0x25a7960] BlueprintEvent       
	// void BlueprintInitializeAnimation();                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void _d_e(FSDynamicMontageParams _d_e);                                                                                  // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ClimbDash();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AnimNotify_EnterStand();                                                                                            // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_RHand();                                                                                                 // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_LHand();                                                                                                 // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnComponentStart();                                                                                                 // [0x25a7960] Event|Public|BlueprintEvent 
	// void MovementChanged(class ACharacter* Character, TEnumAsByte<EMovementMode> PrevMovementMode, char PreviousCustomMode); // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void InterfaceSimulateJump(float Speed);                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void InterfaceFixHookDirect(FVector Offset);                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ClearClimbDash();                                                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void InterfaceManipulateInteractDirection(float __);                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_ABP_BaseRole(int32_t EntryPoint);                                                                  // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Define/CounterAttackEffectData.CounterAttackEffectData_C
/// Size: 0x0040 (64 bytes) (0x000038 - 0x000078) align 8 pad: 0x0000
class UCounterAttackEffectData_C : public UKuroBpDataAsset
{ 
public:
	float                                              Pos;                                                        // 0x0038   (0x0004)  
	FVector                                            Offset;                                                     // 0x003C   (0x000C)  
	FVector                                            Scale;                                                      // 0x0048   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0054   (0x0004)  MISSED
	FSoftObjectPath                                    EffectDA;                                                   // 0x0058   (0x0020)  
};

/// Class /Game/Aki/TypeScript/Game/Define/CounterAttackCameraData.CounterAttackCameraData_C
/// Size: 0x0150 (336 bytes) (0x000038 - 0x000188) align 8 pad: 0x0000
class UCounterAttackCameraData_C : public UKuroBpDataAsset
{ 
public:
	FSCounterAttackCamera                              CameraData;                                                 // 0x0038   (0x0118)  
	FSTimeScale                                        AttackerTimeScale;                                          // 0x0150   (0x0018)  
	class UClass*                                      CameraShake;                                                // 0x0168   (0x0008)  
	FSTimeScale                                        VictimTimeScale;                                            // 0x0170   (0x0018)  
};

/// Struct /Game/Aki/TypeScript/Game/NewWorld/Character/SimpleNpc/Blueprint/SHolographicData.SHolographicData
/// Size: 0x0039 (57 bytes) (0x000000 - 0x000039) align 8 pad: 0x0001
#pragma pack(push, 0x1)
struct FSHolographicData
{ 
	class UMaterialInterface*                          ReplaceMaterial_9_B354D5EA4447D05E67D918A7744632B1;         // 0x0000   (0x0008)  
	bool                                               MobileUseDifferentMaterial_31_5905E221465EFC42C78F7D811D5BA6D7; // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0009   (0x0007)  MISSED
	class UMaterialInterface*                          ReplaceMaterialMobile_33_0AF68EE141764D319C90789212821796;  // 0x0010   (0x0008)  
	TArray<FSMaterialControllerFloatParameter>         CustomFloats_20_BEFE4A72466DBBF31C7BE88043697CC2;           // 0x0018   (0x0010)  
	TArray<FSMaterialControllerColorParameter>         CustomColors_23_D46E551F4EE49A33813738920A17A1A1;           // 0x0028   (0x0010)  
	bool                                               bActive_27_2CF94B2C45421EB008661E9B70C1D57E;                // 0x0038   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/NewWorld/Character/SimpleNpc/Blueprint/PD_HolographicEffect.PD_HolographicEffect_C
/// Size: 0x0090 (144 bytes) (0x000038 - 0x0000C8) align 8 pad: 0x0000
class UPD_HolographicEffect_C : public UPrimaryDataAsset
{ 
public:
	float                                              Start;                                                      // 0x0038   (0x0004)  
	float                                              Loop;                                                       // 0x003C   (0x0004)  
	float                                              End;                                                        // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
	FSHolographicData                                  OutlineData;                                                // 0x0048   (0x0040)  
	FSHolographicData                                  OtherData;                                                  // 0x0088   (0x0040)  
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/ClusteredStuff/EffectClusteredStuffSettings.EffectClusteredStuffSettings_C
/// Size: 0x0048 (72 bytes) (0x000038 - 0x000080) align 8 pad: 0x0000
class UEffectClusteredStuffSettings_C : public UPrimaryDataAsset
{ 
public:
	float                                              DensityChangeSpeed;                                         // 0x0038   (0x0004)  
	bool                                               AttachToActor;                                              // 0x003C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x003D   (0x0003)  MISSED
	FVector                                            AbsoluteWorldPosition;                                      // 0x0040   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x004C   (0x0004)  MISSED
	SDK_UNDEFINED(48,1013) /* TWeakObjectPtr<UEffectModelBase*> */ __um(EffectDataRef);                            // 0x0050   (0x0030)  
};

/// Class /Game/Aki/TypeScript/Game/Utils/GmDebugBlueprintFunctionLibrary.GmDebugBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UGmDebugBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// void TsSetAoeDestroyEnemyRange(float aoeDestroyEnemyRange, class UObject* __WorldContext);                               // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float TsGetAoeDestroyEnemyRange(class UObject* __WorldContext);                                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void TsSetAoeDestroyEnemyActivated(bool aoeDestroyEnemyActivated, class UObject* __WorldContext);                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool TsGetAoeDestroyEnemyActivated(class UObject* __WorldContext);                                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void TsCheatInputRequest(int32_t Type, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void TsGmStopGameCommandService(class UObject* __WorldContext);                                                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void TsGmStartGameCommandService(int32_t Port, class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OpenWbpDebugWin(class UObject* __WorldContext);                                                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool TsGmGetIsGameCommandServiceRunning(class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void TsGmShowEntityViewByPbDataId(int32_t pbDataId, class UObject* __WorldContext);                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float TsGmGetEntityPbDataIdByChildActor(class AActor* ChildActor, class UObject* __WorldContext);                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class AActor* TsGmGetEntityActorByChildActor(class AActor* ChildActor, class UObject* __WorldContext);                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool TsGetGmIsOpen(class UObject* __WorldContext);                                                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void TsRunGm(FString gmStr, class UObject* __WorldContext);                                                              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Controller/TsBasePlayerController.TsBasePlayerController_C
/// Size: 0x00B8 (184 bytes) (0x000670 - 0x000728) align 8 pad: 0x0000
class ATsBasePlayerController_C : public ABasePlayerController
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0670   (0x0008)  
	class UClass*                                      ActionHandleClass;                                          // 0x0678   (0x0008)  
	SDK_UNDEFINED(80,1014) /* TMap<FString, UTsActionHandle_C*> */ __um(ActionHandleMap);                          // 0x0680   (0x0050)  
	class UClass*                                      AxisHandleClass;                                            // 0x06D0   (0x0008)  
	SDK_UNDEFINED(80,1015) /* TMap<FString, UTsAxisHandle_C*> */ __um(AxisHandleMap);                              // 0x06D8   (0x0050)  
	// void InitInputHandle();                                                                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetIsPrintKeyName(bool bPrintKeyName);                                                                              // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnReleaseAnyKey(FKey Key);                                                                                          // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddInputBinding();                                                                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ClearInputBinding();                                                                                                // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool IsInTouch(float TouchID);                                                                                           // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnPressAnyKey(FKey Key);                                                                                            // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnSetupInputComponent();                                                                                            // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnTouchMove(TEnumAsByte<ETouchIndex> TouchIndex, FVector Position);                                                 // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnTouchEnd(TEnumAsByte<ETouchIndex> TouchIndex, FVector Position);                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnTouchBegin(TEnumAsByte<ETouchIndex> TouchIndex, FVector Position);                                                // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void BindTouchHandle();                                                                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// class UTsAxisHandle_C* GetAxisHandle(FString ActionName);                                                                // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RemoveAxisHandle(FString AxisName);                                                                                 // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void RemoveActionHandle(FString ActionName);                                                                             // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// class UTsActionHandle_C* GetActionHandle(FString ActionName);                                                            // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ReceiveSetupInputComponent();                                                                                       // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveDestroyed();                                                                                                 // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsBasePlayerController(int32_t EntryPoint);                                                        // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Controller/TsStartupPlayerController.TsStartupPlayerController_C
/// Size: 0x0000 (0 bytes) (0x000728 - 0x000728) align 8 pad: 0x0000
class ATsStartupPlayerController_C : public ATsBasePlayerController_C
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/Controller/TsCharacterController.TsCharacterController_C
/// Size: 0x0008 (8 bytes) (0x000728 - 0x000730) align 8 pad: 0x0000
class ATsCharacterController_C : public ATsBasePlayerController_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0728   (0x0008)  
	// void OnSetupInputComponent();                                                                                            // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnSetUiRootDeactivate();                                                                                            // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnSetUiRootActive();                                                                                                // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ReceivePostProcessInput(float DeltaTime, bool bGamePaused);                                                         // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceivePreProcessInput(float DeltaTime, bool bGamePaused);                                                          // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceivePossess(class APawn* PossessedPawn);                                                                         // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveUnPossess(class APawn* UnpossessedPawn);                                                                     // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsCharacterController(int32_t EntryPoint);                                                         // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/BaseCharacter/BP_KuroCheatManager.BP_KuroCheatManager_C
/// Size: 0x0095 (149 bytes) (0x000080 - 0x000115) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UBP_KuroCheatManager_C : public UCheatManager
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0080   (0x0008)  
	class ABP_CharacterController_C*                   CharacterController;                                        // 0x0088   (0x0008)  
	FKey                                               __eQ;                                                       // 0x0090   (0x0020)  
	bool                                               _c;                                                         // 0x00B0   (0x0001)  
	bool                                               LeftAlt;                                                    // 0x00B1   (0x0001)  
	bool                                               LeftCtrl;                                                   // 0x00B2   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x00B3   (0x0001)  MISSED
	float                                              hQ__T;                                                      // 0x00B4   (0x0004)  
	float                                              LastDebugPressTime;                                         // 0x00B8   (0x0004)  
	bool                                               DebugSpeed;                                                 // 0x00BC   (0x0001)  
	bool                                               GhostMode;                                                  // 0x00BD   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x00BE   (0x0002)  MISSED
	SDK_UNDEFINED(80,1016) /* TSet<ATsBaseCharacter_C*> */ __um(__);                                               // 0x00C0   (0x0050)  
	float                                              TouchDebugSize;                                             // 0x0110   (0x0004)  
	bool                                               __r__f_;                                                    // 0x0114   (0x0001)  
	// void Dd_P_g_j___Rbc__();                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___S_b_(bool _f_T);                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void TouchDebug();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PrintTimeScale();                                                                                                   // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdateFunctionKey();                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _O__(FKey __eQ, bool _c);                                                                                           // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ReceiveInitCheatManager();                                                                                          // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_KuroCheatManager(int32_t EntryPoint);                                                           // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Utils/GlobalBlueprintFunctionLibrary.GlobalBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UGlobalBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// class UObject* GetBpFightManager(class UObject* __WorldContext);                                                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// class UObject* GetBpEventManager(class UObject* __WorldContext);                                                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/EffectBlueprintFunctionLibrary.EffectBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UEffectBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// void EditorManualTickClusteredStuffEffects(class UWorld* World, float delta1, class UObject* __WorldContext);            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void TickClusteredStuff(class UWorld* World, float delta1, class UObject* __WorldContext);                               // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void GiTickLensFlare(class UObject* WorldContextObject, float DeltaSeconds, class UPDA_ModelLensFlareConfig_C* Config, FLinearColor Color, float rampIndex, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// class ABP_ScreenEffectSystem_C* GetScreenEffectSystem(class UObject* __WorldContext);                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EffectCgMode(bool Enable, class UObject* __WorldContext);                                                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AudioVisualizationInstanceCallback(class AAudioVisualizationInstanceBase_C* Actor, class UAkCallbackInfo* CallbackInfo, EAkCallbackType CallbackType, FString State, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AudioVisualizationInstanceEnd(class AAudioVisualizationInstanceBase_C* Actor, class UObject* __WorldContext);       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AudioVisualizationInstanceStart(class AAudioVisualizationInstanceBase_C* Actor, class UObject* __WorldContext);     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetTsWriteTimeToCollectionEnabled(bool Enable, class UObject* __WorldContext);                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void EnableSceneObjectWaterEffectShowDebugTrace(bool Enable, class UObject* __WorldContext);                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetNumEffectTickThisFrame(class UObject* __WorldContext);                                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetNumEffectAll(class UObject* __WorldContext);                                                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetNumEffectUpdateNearlyPaused(class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetNumEffectUpdateLow(class UObject* __WorldContext);                                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetNumEffectUpdateHigh(class UObject* __WorldContext);                                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetNumEffectUpdateArbitrary(class UObject* __WorldContext);                                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetNumEffectUpdateNonRearrange(class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetEffectOutPoolEnabled(bool Enable, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetEffectInPoolEnabled(bool Enable, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetVisualizeCharacterWaterEffectTrace(bool Enable, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void RefreshFoliageDetectConfig(class UObject* __WorldContext);                                                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void EndDebugDrawFoliageDetect(class UObject* __WorldContext);                                                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void BeginDebugDrawFoliageDetect(FLinearColor Color, float Width, class UObject* __WorldContext);                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetEffectSpawnLogEnabled(bool Enabled, class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool ValidateKuroAnimNotifyState(class UKuroAnimNotifyState* Asset, class UObject* __WorldContext);                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool ValidateKuroAnimNotify(class UKuroAnimNotify* Asset, class UObject* __WorldContext);                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EnableGlobalInteractionEffect(class UItemMaterialControllerGlobalData_C* globalMaterialData, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void DisableGlobalInteractionEffect(class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetMaterialControllerDataSync(int32_t EntityID, FString materialDataPath, bool IsGroup, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetClusteredStuffDensities(class UWorld* World, int32_t index1, class UEffectClusteredStuffSettings_C* overrideData1, float density1, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ClearDebugDraw(class UObject* __WorldContext);                                                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float AddDebugLineFromPlayer(FVector Location, FLinearColor Color, float Width, class UObject* __WorldContext);          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class UUEffectStatisticsEntryData_C* GetEffectStatisticsEntry(int32_t index1, class UObject* __WorldContext);            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetEffectStatisticsEntryCount(class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RefreshEffectStatisticsData(TEnumAsByte<EEffectStatisticsSortType> sortType, class UObject* __WorldContext);        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetEffectStatisticsReleasedInterval(class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetEffectStatisticsRegisteredInterval(class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetEffectStatisticsTickCount(class UObject* __WorldContext);                                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetEffectStatisticsCurrentCount(class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RecycleEffect(class UEffectViewComponent_C* View, class UObject* __WorldContext);                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Bullet/BulletBlueprintFunctionLibrary.BulletBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBulletBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// int32_t CreateBulletFromGA(class ATsBaseCharacter_C* Owner, FString BulletRowName, FTransform InitialTransform, FString skillId, bool needSync, FVector TargetLocation, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t CreateBulletFromAN(class ATsBaseCharacter_C* Owner, FString BulletRowName, FTransform InitialTransform, FString skillId, bool needSync, FVector TargetLocation, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t CreateBullet(class ATsBaseCharacter_C* Owner, FString BulletRowName, FTransform InitialTransform, FString skillId, bool needSync, FVector TargetLocation, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void DestroyAllBullet(bool summonChild, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FVector CalcBulletLocation(FSReBulletDataMain dataMain, class AActor* bulletActor, float Delta, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FRotator CalcBulletRotator(FSReBulletDataMain dataMain, class AActor* bulletActor, class AActor* Attacker, FVector Target, float Delta, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FRotator CalcBulletInitRotator(FSReBulletDataMain dataMain, class AActor* bulletActor, class AActor* Attacker, FTransform Target, class AActor* parentBulletActor, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AttachToBone(class USkeletalMeshComponent* MeshComp, class AActor* bulletActor, FSReBulletDataMain dataMain, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FVector CalcBulletInitLocation(FSReBulletDataMain dataMain, class AActor* Attacker, FTransform Target, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void CalcSector(FVector centerPoint, FVector Forward, FVector Up, float inAngle, float Radius, float Height, int32_t sectionNum, TArray<FVector>& verticesArrayRef, TArray<int32_t>& trianglesArrayRef, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void CalcPipe(FVector centerPoint, FVector Forward, FVector Up, float outsideRadius, float insideRadius, float Height, int32_t sectionNum, TArray<FVector>& outVerticesRef, TArray<int32_t>& outTrianglesRef, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetIsShowBulletCollision(int32_t EntityID, class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetIsShowBulletTrace(int32_t EntityID, class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void DebugShowBulletCollision(bool IsShow, int32_t EntityID, class UObject* __WorldContext);                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetBeginSpeed(int32_t ID, float NewSpeed, class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetBulletTransform(int32_t ID, FTransform NewTransform, class UObject* __WorldContext);                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetBulletSummon(int32_t ID, class UObject* __WorldContext);                                                         // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetBulletTarget(int32_t ID, class ATsBaseCharacter_C* Character, class UObject* __WorldContext);                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetBulletStopHitTrue(int32_t ID, class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FString GetBulletName(int32_t ID, class UObject* __WorldContext);                                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class UPrimitiveComponent* GetBulletCollision(int32_t ID, class UObject* __WorldContext);                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class ATsBaseCharacter_C* GetBulletAttacker(int32_t ID, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FTransform GetBulletTransform(int32_t ID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// TArray<int32_t> GetCharacterLaunchedBulletIds(int32_t characterId, class UObject* __WorldContext);                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void DebugShowBulletTrace(bool IsShow, int32_t entityId1, class UObject* __WorldContext);                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TArray<int32_t> GetAllBullet(class UObject* __WorldContext);                                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetEntityIdByCustomKey(int32_t attackerId, FString customKey, int32_t TargetId, class UObject* __WorldContext);     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void FrozenBulletTimeByBulletName(class ATsBaseCharacter_C* Character, FString bulletDataName, float Time, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool DestroyBullet(int32_t ID, bool isSummonChildBullet, class UObject* __WorldContext);                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class AActor* GetBulletActorById(int32_t ID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Render/RuntimeBP/DecalShadow/PDA_DecalShadowConfig.PDA_DecalShadowConfig_C
/// Size: 0x0018 (24 bytes) (0x000038 - 0x000050) align 8 pad: 0x0000
class UPDA_DecalShadowConfig_C : public UPrimaryDataAsset
{ 
public:
	class UMaterialInterface*                          DecalShadowMaterial;                                        // 0x0038   (0x0008)  
	float                                              DecalBoxScaleHori;                                          // 0x0040   (0x0004)  
	float                                              DecalBoxScaleVerti;                                         // 0x0044   (0x0004)  
	float                                              ZDistanceFadeFactor;                                        // 0x0048   (0x0004)  
	float                                              ZDistanceFadePower;                                         // 0x004C   (0x0004)  
};

/// Class /Game/Aki/Render/RuntimeBP/Battle/PDA_WuYinQuBattleIdleData.PDA_WuYinQuBattleIdleData_C
/// Size: 0x0010 (16 bytes) (0x000038 - 0x000048) align 8 pad: 0x0000
class UPDA_WuYinQuBattleIdleData_C : public UPrimaryDataAsset
{ 
public:
	class UKuroWeatherDataAsset*                       AtmosInnerData;                                             // 0x0038   (0x0008)  
	class UKuroWeatherDataAsset*                       AtmosOuterData;                                             // 0x0040   (0x0008)  
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Character/Common/Blueprint/Utils/TsAiBlueprintFunctionLibrary.TsAiBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UTsAiBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// void UpdateNpcPerformData(int32_t EntityID, bool& isAttacked1, bool& isImpacted, float& Direction, float& Strength, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnPlayerImpactBegin(int32_t EntityID, class UObject* __WorldContext);                                               // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OnPlayerAttackBegin(int32_t EntityID, class UObject* __WorldContext);                                               // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OnPlayerImpactEnd(int32_t EntityID, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OnPlayerAttackEnd(int32_t EntityID, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void TsLogInfo(FString Text, class UObject* __WorldContext);                                                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int32_t GetSummonType(int32_t EntityID, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetToRoleDistance(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void Reset(int32_t EntityID, float targetEntityId, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TArray<AActor*> GetFollowActor(int32_t EntityID, class UObject* __WorldContext);                                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetFollowData(int32_t EntityID, class AActor* Target, int32_t Type, class UObject* __WorldContext);                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// class AActor* GetRoleActor(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool IsAiDriver(int32_t EntityID, class UObject* __WorldContext);                                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnPlayerImpact(int32_t EntityID, class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OnPlayerAttack(int32_t EntityID, class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void UpdateInteractionComponent(int32_t EntityID, class UObject* __WorldContext);                                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool NeedCheckPlayerAttack(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool NeedCheckPlayerImpact(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetAiEnabled(int32_t EntityID, bool Value, FString Key, class UObject* __WorldContext);                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void RestartBehaviorTree(int32_t EntityID, class UObject* __WorldContext);                                               // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool CheckPlayerGameplayTag(int32_t EntityID, FGameplayTag Tag, class UObject* __WorldContext);                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetDistanceByPlayer(int32_t EntityID, class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// TEnumAsByte<EQuestStepState> GetQuestState(int32_t EntityID, float questId, class UObject* __WorldContext);              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/BaseCharacter/BP_Lipsync_AL.BP_Lipsync_AL_C
/// Size: 0x0018 (24 bytes) (0x0000C0 - 0x0000D8) align 8 pad: 0x0000
class UBP_Lipsync_AL_C : public UActorComponent
{ 
public:
	class UDataTable*                                  Lipsync_Data;                                               // 0x00C0   (0x0008)  
	FTimerHandle                                       LipsyncEvent;                                               // 0x00C8   (0x0008)  
	int32_t                                            Index;                                                      // 0x00D0   (0x0004)  
	int32_t                                            MaxNum;                                                     // 0x00D4   (0x0004)  
	// void GetLipsyncData(int32_t ID, class UDataTable*& Data);                                                                // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ShowFrameData(TArray<FString>& Datas);                                                                              // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void DoLipsync();                                                                                                        // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void PlayLipsync(int32_t ID);                                                                                            // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ChangeBlendShape(FString Name, float Value);                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Character/Common/Blueprint/Utils/TsGameplayBlueprintFunctionLibrary.TsGameplayBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UTsGameplayBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// void SetEntityEnable(int32_t EntityID, bool Enable, class UObject* callObject, FString reason, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void RemovePassiveSkill(int32_t EntityID, int64_t passiveSkillId, class UObject* __WorldContext);                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AddPassiveSkill(int32_t EntityID, int64_t passiveSkillId, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetPredictProjectileInfo(int32_t EntityID, bool ReturnValue, TArray<FVector>& OutPathPosition, FVector OutLastTraceDestination, FHitResult OutHit, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ExitMultiSkillStateOfMorphVision(int32_t EntityID, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void EndManipulateInteract(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool StartManipulateInteract(int32_t EntityID, class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetServerShieldString(int32_t EntityID, class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetShieldValue(int32_t EntityID, int32_t shieldCid, class UObject* __WorldContext);                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EndSkillMontage(int32_t EntityID, FString skillId, float montageIndex, class UObject* __WorldContext);              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SendScanSkillUseLogData(int32_t EntityID, bool hasTarget, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SendManipulateSkillUseLogData(int32_t EntityID, bool hasTarget, class UObject* __WorldContext);                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SendHookSkillUseLogData(int32_t EntityID, bool hasTarget, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ExitLockDirection(int32_t EntityID, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void EnterLockDirection(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool IsSkillInCd(int32_t EntityID, int32_t skillId, class UObject* __WorldContext);                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetBuffActivateByHandle(int32_t EntityID, int32_t Handle, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FVector GetManipulateInteractLocation(int32_t EntityID, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FVector NextFixHookTargetLocation(int32_t EntityID, class UObject* __WorldContext);                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FVector FixHookTargetForward(int32_t EntityID, class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FVector FixHookTargetLocation(int32_t EntityID, class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FTransform GetPointTransform(int32_t EntityID, FString BoneName, class UObject* __WorldContext);                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// class UAnimMontage* GetSkillMontageInstance(int32_t EntityID, FString skillId, int32_t Index, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class AActor* GetSkillTarget(int32_t EntityID, class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FSSkillInfo GetSkillInfo(int32_t EntityID, FString skillId, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString CurrentSkillId(int32_t EntityID, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// class UDataTable* GetDtSkillInfo(int32_t EntityID, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// class AActor* GetHoldingActor(int32_t EntityID, class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class AActor* ManipulateGetCastTarget(int32_t EntityID, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class AActor* ManipulateGetDrawTarget(int32_t EntityID, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class ATsBaseCharacter_C* GetCurrentTarget(int32_t EntityID, class UObject* __WorldContext);                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FVector GetBeHitLocation(int32_t EntityID, class UObject* __WorldContext);                                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FVector GetBeHitDirect(int32_t EntityID, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TEnumAsByte<EHitAnim> GetBeHitAnim(int32_t EntityID, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float GetBeHitTime(int32_t EntityID, class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FSVisionCounterAttack GetVisionCounterAttackInfoInternal(int32_t EntityID, class UObject* __WorldContext);               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FSCounterAttack GetCounterAttackInfoInternal(int32_t EntityID, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float GetToughDecreaseValue(int32_t EntityID, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float GetHardnessModeId(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float GetRageModeId(int32_t EntityID, class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float GetAttributeBaseValue(int32_t EntityID, int32_t AttributeID, class UObject* __WorldContext);                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float GetAttributeCurrentValue(int32_t EntityID, int32_t AttributeID, class UObject* __WorldContext);                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FString GetAllMovementHistory(int32_t EntityID, class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetServerHateString(int32_t EntityID, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetServerPartString(int32_t EntityID, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetServerAttributeString(int32_t EntityID, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetServerTagString(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetServerBuffString(int32_t EntityID, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetAllAttributeDebugStrings(int32_t EntityID, class UObject* __WorldContext);                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetAttributeDebugString(int32_t EntityID, class UObject* __WorldContext);                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetTagDebugStrings(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetGeDebugString(int32_t EntityID, class UObject* __WorldContext);                                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void LockOnSpecifyTarget(int32_t EntityID, int32_t targetEntityId, class UObject* __WorldContext);                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool ManipulateChangeToNormalState(int32_t EntityID, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool ManipulateChangeToProjectileState(int32_t EntityID, class UObject* __WorldContext);                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetDebugEntityId(class UObject* __WorldContext);                                                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetDebugEntityId(int32_t EntityID, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetEntityComboBox(class UComboBoxString* ComboBox, int32_t EntityID, class UObject* __WorldContext);                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void RefreshEntityComboBox(class UComboBoxString* ComboBox, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void RefreshEntityListView(class UListView* ListView, class UObject* __WorldContext);                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AddBuffToTargetEntityById(int32_t instigatorEntityId, int32_t targetEntityId, int64_t BuffID, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void EnvironmentInfoDetect(int32_t EntityID, FVector Location, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void DebugResetFormationValue(int32_t ID, float Val, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FString GetPassiveSkillDebugString(int32_t EntityID, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetNextMultiSkillId(int32_t EntityID, int32_t skillId, class UObject* __WorldContext);                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetShieldDebugString(int32_t EntityID, class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AddBuffFromGA(int32_t EntityID, class ATsBaseCharacter_C* Target, int64_t BuffID, FString skillId, int32_t addCount, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void EnterAimStatus(int32_t EntityID, TEnumAsByte<EAimViewState> aimViewState, class UObject* __WorldContext);           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetIsUseCatapultUpAnim(int32_t EntityID, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ApplyBuffWithLevel(int32_t EntityID, int64_t BuffID, int32_t skillId, class UObject* __WorldContext);               // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetIsCharRotateWithCameraWhenManipulate(int32_t EntityID, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TArray<int32_t> GetVisionLevelList(int32_t EntityID, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// TArray<int32_t> GetVisionIdList(int32_t EntityID, class UObject* __WorldContext);                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ChangeCameraToEntityCamera(class UObject* __WorldContext);                                                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool ManipulateValid(int32_t EntityID, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void UpdateAnimInfoUnifiedStateRoleNpc(int32_t EntityID, class UBP_ABPLogicParams_C* animLogicParams, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void UpdateAnimInfoUnifiedState(int32_t EntityID, class UBP_ABPLogicParams_C* animLogicParams, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void UpdateAnimInfoFk(int32_t EntityID, class UBP_ABPLogicParams_C* animLogicParams, class UObject* __WorldContext);     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void UpdateAnimInfoHit(int32_t EntityID, class UBP_ABPLogicParams_C* animLogicParams, class UObject* __WorldContext);    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AddBuffToTargetById(int32_t EntityID, class ATsBaseCharacter_C* Target, int64_t BuffID, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void RemoveBuffByTag(int32_t EntityID, FGameplayTag Tag, class UObject* __WorldContext);                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FString GetBuffDebugStringByHandle(int32_t EntityID, int32_t Handle, class UObject* __WorldContext);                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetBuffStackStringByHandle(int32_t EntityID, int32_t Handle, class UObject* __WorldContext);                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetBuffLevelStringByHandle(int32_t EntityID, int32_t Handle, class UObject* __WorldContext);                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetBuffLivingStatusStringByHandle(int32_t EntityID, int32_t Handle, class UObject* __WorldContext);              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetBuffDurationProgress(int32_t EntityID, int32_t Handle, class UObject* __WorldContext);                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetBuffDurationStringByHandle(int32_t EntityID, int32_t Handle, class UObject* __WorldContext);                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetBuffPeriodStringByHandle(int32_t EntityID, int32_t Handle, class UObject* __WorldContext);                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetBuffInstigatorStringByHandle(int32_t EntityID, int32_t Handle, class UObject* __WorldContext);                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetBuffDescByHandle(int32_t EntityID, int32_t Handle, class UObject* __WorldContext);                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetBuffServerIdByHandle(int32_t EntityID, int32_t Handle, class UObject* __WorldContext);                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int64_t GetBuffIdByHandle(int32_t EntityID, int32_t Handle, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RefreshBuffListView(int32_t EntityID, class UListView* ListView, FString filterStr, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void DebugResetBaseVal(int32_t EntityID, float ID, float Val, class UObject* __WorldContext);                            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool IsLogicAutonomousProxy(int32_t EntityID, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RemoveTagByName(int32_t EntityID, FString TagName, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AddTagByName(int32_t EntityID, FString TagName, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool IsTriggerCounterAttack(int32_t EntityID, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString Record(int32_t EntityID, bool Record, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EnableEntity(int32_t EntityID, bool isEnable, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ExitAimStatus(int32_t EntityID, class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void CustomSetWalkOrRun(int32_t EntityID, bool isWalk, class UObject* __WorldContext);                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SwingRelease(int32_t EntityID, class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SwingPress(int32_t EntityID, class UObject* __WorldContext);                                                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void StandPress(int32_t EntityID, class UObject* __WorldContext);                                                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SprintRelease(int32_t EntityID, class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SprintPress(int32_t EntityID, class UObject* __WorldContext);                                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetIsInGame(int32_t EntityID, class UObject* __WorldContext);                                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TEnumAsByte<ECharViewDirectionState> GetDirectionState(int32_t EntityID, class UObject* __WorldContext);                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetDirectionState(int32_t EntityID, TEnumAsByte<ECharViewDirectionState> newViewState, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ExitHitState(int32_t EntityID, class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TEnumAsByte<ECharParentMoveState> GetCharUnifiedPositionState(int32_t EntityID, class UObject* __WorldContext);          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TEnumAsByte<ECharState> GetCharUnifiedMoveState(int32_t EntityID, class UObject* __WorldContext);                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetVisible(int32_t EntityID, bool IsShow, class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetToTargetSocketDistance(int32_t EntityID, class UObject* __WorldContext);                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void DeleteIgnoreSocketName(int32_t EntityID, FString SocketName, class UObject* __WorldContext);                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetIgnoreSocketName(int32_t EntityID, FString SocketName, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool FixHookTargetIsClimb(int32_t EntityID, class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool FixHookTargetInheritSpeed(int32_t EntityID, class UObject* __WorldContext);                                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool CanActivateFixHook(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void PlaySkillMontage2Server(int32_t EntityID, FString skillId, float montageIndex, float Rate, FString StartSection, float StartTimeSeconds, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FString GetSocketName(int32_t EntityID, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetSocketName(int32_t EntityID, FString SocketName, class UObject* __WorldContext);                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FString GetCurrentMontageCorrespondingSkillId(int32_t EntityID, class UObject* __WorldContext);                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void DeleteSkills(int32_t EntityID, class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void InterruptSkill(int32_t EntityID, FString skillId, bool isSyn, class UObject* __WorldContext);                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int32_t GetVisionSkillId(int32_t EntityID, float visionId, float Level, class UObject* __WorldContext);                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool EndAbilityVision(int32_t EntityID, TEnumAsByte<EVisionType> visionType, class UObject* __WorldContext);             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool ActivateAbilityVision(int32_t EntityID, TEnumAsByte<EVisionType> visionType, class UObject* __WorldContext);        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RollingGround(int32_t EntityID, class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void CallAnimBreakPoint(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetSkillRotateDirect(int32_t EntityID, FVector Direct, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetSkillRotateLocation(int32_t EntityID, FVector Location, class UObject* __WorldContext);                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetActivePriority(int32_t EntityID, FString skillId, class UObject* __WorldContext);                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float GetPriority(int32_t EntityID, FString skillId, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void OnEndAbility(int32_t EntityID, class UGameplayAbility* ga, bool WasCancelled, class UObject* __WorldContext);       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float OnActivateAbility(int32_t EntityID, class UGameplayAbility* ga, bool isCommitSuccess, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetCommonSkillCanBeInterrupt(int32_t EntityID, class UObject* __WorldContext);                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetCommonSkillCanBeInterrupt(int32_t EntityID, bool canBeInterrupt, class UObject* __WorldContext);                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetSkillAcceptInput(int32_t EntityID, bool skillAcceptInput, class UObject* __WorldContext);                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetSkillAcceptInput(int32_t EntityID, class UObject* __WorldContext);                                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FString GetSkillIdWithGroupId(int32_t EntityID, int32_t GroupId, class UObject* __WorldContext);                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool IsHasInputDir(int32_t EntityID, class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetSkillTarget(int32_t EntityID, class AActor* Target, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool BeginSkill(int32_t EntityID, FName skillId, bool isSyn, class AActor* Target, FName SocketName, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EndSkill(int32_t EntityID, FString skillId, bool isSyn, bool isNotEnd, class UObject* __WorldContext);              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetSkillPriority(int32_t EntityID, FString skillId, float Priority, class UObject* __WorldContext);                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool HasAbility(int32_t EntityID, FString skillId, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetCurrentPriority(int32_t EntityID, int32_t Priority, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int32_t CurrentPriority(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetSkillElevationAngle(int32_t EntityID, float Angle, class UObject* __WorldContext);                               // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetSkillElevationAngle(int32_t EntityID, class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetLastActivateSkillTime(int32_t EntityID, float Time, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetLastActivateSkillTime(int32_t EntityID, class UObject* __WorldContext);                                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetQtePosition(int32_t EntityID, float rotate, float Length, float Height, bool referenceTarget, bool adjustWithMonster, float addHeight, int32_t qteType, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ExtraAction(int32_t EntityID, class UObject* __WorldContext);                                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetDebugDraw(int32_t EntityID, bool IsActive, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ManipulateReset(int32_t EntityID, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool ManipulateCast(int32_t EntityID, float Direction, class UObject* __WorldContext);                                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool ManipulateDraw(int32_t EntityID, class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool ManipulateChant(int32_t EntityID, class UKuroBooleanEventBinder* eventBinder, class UObject* __WorldContext);       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float ManipulateGetDrawTargetChantTime(int32_t EntityID, class UObject* __WorldContext);                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetLockOnDebugLine(int32_t EntityID, bool IsShow, class UObject* __WorldContext);                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetShowTarget(int32_t EntityID, class AActor* Actor, class UObject* __WorldContext);                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ResetTarget(int32_t EntityID, class UObject* __WorldContext);                                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetCounterAttackEndTime(int32_t EntityID, float baseTime, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void VisionCounterAttackEnd(int32_t EntityID, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void CounterAttackEnd(int32_t EntityID, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ClearCheckBuffList(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AddCheckBuffList(int32_t EntityID, FSCounterAttackBuff addValue, class UObject* __WorldContext);                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetEnterFk(int32_t EntityID, class UObject* __WorldContext);                                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FName GetBeHitBone(int32_t EntityID, class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool IsStiff(int32_t EntityID, class UObject* __WorldContext);                                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool GetEnterFkAndReset(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetAcceptedNewBeHitAndReset(int32_t EntityID, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void DeActiveStiff(int32_t EntityID, class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ActiveStiff(int32_t EntityID, class UObject* __WorldContext);                                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ResetPartLife(int32_t EntityID, FGameplayTag Tag, class UObject* __WorldContext);                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetPartRemainedLife(int32_t EntityID, FGameplayTag Tag, class UObject* __WorldContext);                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool CheckHasPart(int32_t EntityID, class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetBeHitIgnoreRotate(int32_t EntityID, bool ignoreRotate, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OnHit(int32_t EntityID, FSHitInformation HitData, class UObject* __WorldContext);                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetHardnessModeId(int32_t EntityID, int32_t ID, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetRageModeId(int32_t EntityID, int32_t ID, class UObject* __WorldContext);                                         // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void DebugResetBaseValue(int32_t EntityID, float ID, float Val, class UObject* __WorldContext);                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetDistance(int32_t EntityID, float Max, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetServerDebugInfoDirty(int32_t EntityID, bool Val, class UObject* __WorldContext);                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetServerDebugInfoDirty(int32_t EntityID, class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ServerDebugInfoRequest(int32_t EntityID, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FString GetBuffDebugStrings(int32_t EntityID, FString buffStr, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetBuffCountById(int32_t EntityID, int64_t BuffID, bool enforceOnGoingCheck, class UObject* __WorldContext);     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RemoveBuffById(int32_t EntityID, int64_t BuffID, int32_t StackCount, class UObject* __WorldContext);                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool RemoveActiveGameplayEffect(int32_t EntityID, FActiveGameplayEffectHandle Handle, float StacksToRemove, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RemoveTag(int32_t EntityID, FGameplayTag Tag, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AddTag(int32_t EntityID, FGameplayTag Tag, class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool ContainsTag(int32_t EntityID, FGameplayTag Tag, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Module/BpBridge/UiBlueprintFunctionLibrary.UiBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UUiBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// void ShowGenericPrompt(FString ID, class UObject* __WorldContext);                                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void PlayBattleNormalTip(FString TextKey, float Duration, class UObject* __WorldContext);                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void PlayBattleCountdownTip(FString TextKey, float Duration, float countdown, class UObject* __WorldContext);            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool IsLongPressExploreButton(class UObject* __WorldContext);                                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool IsMobileNow(class UObject* __WorldContext);                                                                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool IsGameInited(class UObject* __WorldContext);                                                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void PlaySequenceEventByStringParam(FString Param, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetIsSilentLogin(bool Value, class UObject* __WorldContext);                                                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void GachaInteractFinish(class UObject* __WorldContext);                                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void GachaClick(bool IsPress, class UObject* __WorldContext);                                                            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool IsGamepadNow(class UObject* __WorldContext);                                                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EndGachaScene(class UObject* __WorldContext);                                                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TEnumAsByte<EWeaponViewName> GetWeaponViewName(class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetUiWeaponBreachLevel(class UObject* __WorldContext);                                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetUiEndSequenceFrame(float Frame, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetUiStartSequenceFrame(float Frame, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FText GetTopViewName(class UObject* __WorldContext);                                                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool IsOpenPhotograph(class UObject* __WorldContext);                                                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool IsPlayerLookAtCameraInPhoto(class UObject* __WorldContext);                                                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void TestSceneSaveServerIp(FString serverIp, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FString TestSceneLoadServerIp(class UObject* __WorldContext);                                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetPartStateVisible(float EntityID, FString BoneName, bool bVisible, class UObject* __WorldContext);                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void TestSceneSaveGender(bool isMale, class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool TestSceneLoadGender(class UObject* __WorldContext);                                                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void TestSceneSaveBornMode1(bool mode1, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void RefreshInputTag(class UObject* __WorldContext);                                                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetTempLocation(FVector CameraLocation, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void TestSceneSaveAccount(FString account, class UObject* __WorldContext);                                               // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FString TestSceneLoadAccount(class UObject* __WorldContext);                                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void TestSceneSaveNetMode(bool Value, class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool TestSceneLoadNetMode(class UObject* __WorldContext);                                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void TestSceneLogin(FString LevelName, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetBossStateVisible(bool bVisible, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetHeadStateVisible(bool bVisible, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetDamageViewVisible(bool bVisible, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void BackLoginView(class UObject* __WorldContext);                                                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OpenWorldMapView(class UObject* __WorldContext);                                                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OpenGmView(class UObject* __WorldContext);                                                                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TArray<int32_t> GetRoleDamageData(int32_t damageId, class UObject* __WorldContext);                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetRoleProperty(int32_t roleInfoId, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetRoleCameraConfig(int32_t roleInfoId, class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// TMap<int32_t, float> GetRoleAddAttrList(int32_t roleInfoId, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// TMap<int32_t, float> GetRoleBaseAttrList(int32_t roleInfoId, class UObject* __WorldContext);                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetRoleEntityId(int32_t roleInfoId, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetRoleMeshId(int32_t roleInfoId, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EndScreenEffect(FString effectPath, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void BeginScreenEffect(FString effectPath, float Priority, class UObject* __WorldContext);                               // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void CloseUiScene(class UObject* __WorldContext);                                                                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OpenUiScene(FString uiScenePath, class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void PlayPlayUiCameraBlendAnimationFromCurrentHandle(FString targetAnimationHandleUniqueName, FString animationBlendDataUniqueName, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ClearAllUiCameraAnimationHandles(class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ResetUiCameraAnimationHandle(FString uniqueName, class UObject* __WorldContext);                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ApplyUiCameraAnimationSettings(FString uniqueName, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ConnectServer(FString httpResult, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OpenDragonPoolView(int32_t dragonPoolId, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void CloseShop(class UObject* __WorldContext);                                                                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OpenShop(float shopId, class UObject* __WorldContext);                                                              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetUiRootActive(bool Value, class UObject* __WorldContext);                                                         // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FString GetAccount(class UObject* __WorldContext);                                                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// int32_t GetPlayerId(class UObject* __WorldContext);                                                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// int32_t GetPlayerLevel(class UObject* __WorldContext);                                                                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void InitUiRoot(class UObject* __WorldContext);                                                                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int32_t GetItemCountByConfigId(int32_t itemConfigId, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UnLockedTeleport(int32_t teleportId, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool CheckTeleport(int32_t teleportId, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool CheckGuideStatus(int32_t guideGroupId, int32_t Status, FString Operator, class UObject* __WorldContext);            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetCurrentRoleConfigId(class UObject* __WorldContext);                                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OpenBattleView(class UObject* __WorldContext);                                                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void InitializeOfflineFormationInstance(int32_t aConfigId, int32_t bConfigId, int32_t cConfigId, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ChangeRole(bool bUseGoBattleSkill, int32_t Position, class UObject* __WorldContext);                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TArray<ATsBaseCharacter_C*> GetAllFormationRole(class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AreaEndOverlap(float AreaID, class UObject* __WorldContext);                                                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AreaBeginOverlap(float AreaID, class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void TempModuleStart(class UObject* __WorldContext);                                                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Input/InputBlueprintFunctionLibrary.InputBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UInputBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// bool HasMoveAxisInput(class UObject* __WorldContext);                                                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TArray<FString> GetAllInputDistributeTag(class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetAxisInputDistributeTag(FString AxisName, class UObject* __WorldContext);                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetActionInputDistributeTag(FString ActionName, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetTimeDilation(float TimeDilation, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool IsKeyDown(int32_t Action, class UObject* __WorldContext);                                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void PostProcessInput(float DeltaTime, bool gamePaused, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void PreProcessInput(float DeltaTime, bool gamePaused, class UObject* __WorldContext);                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Character/Common/Blueprint/Utils/CharacterBlueprintFunctionLibrary.CharacterBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UCharacterBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// FTransform GetBaseCharacterTransform(class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnItemsResetFinished(class UObject* __WorldContext);                                                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetCurrentTarget(int32_t Index, class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TArray<FString> GetAttackerCombatEntities(class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// TArray<FString> GetTargetCombatEntities(class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetTypeOpen(bool isDamage, bool isCure, bool isSkillUsed, bool isState, bool isKill, bool isReborn, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetCombatStarted(bool Started, int32_t attackerIndex1, int32_t targetIndex1, bool isDamage, bool isCure, bool isSkillUsed, bool isState, bool isKill, bool isReborn, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int32_t GetItemListViewCount(class UObject* __WorldContext);                                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// TArray<FString> GetSubItemsListView(int32_t StartIndex, int32_t Length, class UObject* __WorldContext);                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetItemsReset(class UObject* __WorldContext);                                                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetCurrentAttacker(int32_t Index, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void TestLeaveSplineMove(class ATsBaseCharacter_C* Actor, class UObject* __WorldContext);                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void TestEnterSplineMove(class ATsBaseCharacter_C* Actor, class USplineComponent* Spline, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ResetPartCollisionSwitch(class ATsBaseCharacter_C* Character, FString compName, class UObject* __WorldContext);     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetStatisticsOpen(class UObject* __WorldContext);                                                                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetHalfLengthRecord(float sideLenHalf, class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void CleanupOperationRecord(class UObject* __WorldContext);                                                              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetOperationRecordCount(class UObject* __WorldContext);                                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool SaveCharacterOperationRecord(class UObject* __WorldContext);                                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void CharacterOperationRecord(bool Open, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// class ATsBaseCharacter_C* GetCharacterActorByEntityId(int32_t ID, class UObject* __WorldContext);                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetPartCollisionSwitch(class ATsBaseCharacter_C* Character, FString compName, bool isBlockPawn, bool isBulletDetect, bool isBlockCamera, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/Input/Blueprints/BP_InputBase.BP_InputBase_C
/// Size: 0x00B8 (184 bytes) (0x0000C0 - 0x000178) align 8 pad: 0x0000
class UBP_InputBase_C : public UActorComponent
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00C0   (0x0008)  
	class ATsBaseCharacter_C*                          OwnerActor;                                                 // 0x00C8   (0x0008)  
	float                                              UnlockLongPressTime;                                        // 0x00D0   (0x0004)  
	float                                              IsLockOnState;                                              // 0x00D4   (0x0004)  
	SDK_UNDEFINED(80,1017) /* TMap<TEnumAsByte<EInputCharacterState>, FSInputShowList> */ __um(InputShowMap);      // 0x00D8   (0x0050)  
	SDK_UNDEFINED(80,1018) /* TMap<TEnumAsByte<EInputCharacterState>, FSInputShowList> */ __um(MobileInputShowMap); // 0x0128   (0x0050)  
	// void GetMoveVector(FVector2D& ReturnVaule);                                                                              // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand ___u_N(float Time);                                                                                       // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _____v(float Time);                                                                                       // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _w_Q(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _Rbc__r(float Time);                                                                                      // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand __a_2(float Time);                                                                                        // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _Y_b(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand __a_1(float Time);                                                                                        // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _b__1(float Time);                                                                                        // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand ____(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _e_Q(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand p____R(float Time);                                                                                       // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand (float Time);                                                                                             // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand ____(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _w_Q_b(float Time);                                                                                                 // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void _w_Q_c(float Time);                                                                                                 // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void _____v_h(float Time);                                                                                               // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void _Rbc__r_3(float Time);                                                                                              // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void _Rbc__r_2(float Time);                                                                                              // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void _Rbc__r_1(float Time);                                                                                              // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void _Y_b_b(float Time);                                                                                                 // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void _Y_b_c(float Time);                                                                                                 // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void _____b(float Time);                                                                                                 // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void _____c(float Time);                                                                                                 // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void _e_Q_b(float Time);                                                                                                 // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void _e_Q_c(float Time);                                                                                                 // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void p____Rbc(float Time);                                                                                               // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void _____b(float Time);                                                                                                 // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// void _____c(float Time);                                                                                                 // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// FSInputHoldConfig GetUnrealHoldConfig(int32_t Action);                                                                   // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCaches GetUnrealCacheConfig(int32_t Action);                                                                      // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_InputBase(int32_t EntryPoint);                                                                  // [0x25a7960] Final                
};

/// Class /Game/Aki/AI/AIFunctionCommon/KFC_AICommon.KFC_AICommon_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UKFC_AICommon_C : public UBlueprintFunctionLibrary
{ 
public:
	// void ___SC(class ATsBaseCharacter_C* _v, int32_t ____, class UObject* __WorldContext, float& ___);                       // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S(class ATsBaseCharacter_C* _v, int32_t ____, class UObject* __WorldContext, float& ___);                        // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ___S______(class ACharacter* _v_h, class ACharacter* _S_p, bool __eu_, class UObject* __WorldContext, float& ___V); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _bir__M(float _o_S, float _o_S1, float _S__, class UObject* __WorldContext, float& ___V, float& ___V1, float& ____, float& ___y); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _R__(class AAIC_AICommon_C* A, int32_t cdId, FDelegateProperty _N, class UObject* __WorldContext);                  // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// class UKuroActorEventBinder* _R__ir_N(class UObject* A, FDelegateProperty& Event, class UObject* __WorldContext);        // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class UKuroPerceptionEventBinder* _R___Nh_(class UObject* A, FDelegateProperty& Event1, class UObject* __WorldContext);  // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class UKuroBooleanEventBinder* _R__A(class UObject* A, FDelegateProperty& Event, class UObject* __WorldContext);         // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void (int32_t _N_N_N, class UObject* __WorldContext);                                                                    // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void __n____gE(class ATsBaseCharacter_C* __, FString Key, int32_t _, class UObject* __WorldContext);                     // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void ___S___gE(class ATsBaseCharacter_C* __, FString Key, class UObject* __WorldContext, int32_t& _);                    // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ___S___g(class ATsBaseCharacter_C* __, FString Key, class UObject* __WorldContext, int64_t& _);                     // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void __n____g(class ATsBaseCharacter_C* __, FString Key, int64_t _, class UObject* __WorldContext);                      // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void O__PW_h_(FVector w__Y, FVector _____, class ATsBaseCharacter_C* __, class UObject* __WorldContext, bool& PW_h_, FVector& _S__, float& ___VPW_h__); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _T__OPl______(float __, float _e, float _N, FVector _S, FVector _v_, bool _3, class UObject* __WorldContext, FVector& PW_); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ___y(float null, float null1, class UObject* __WorldContext, float& ___y);                                          // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ______6R(class UObject* __WorldContext, bool& ______6);                                                             // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _____(class ATsBaseCharacter_C* _S_p, class ATsBaseCharacter_C* _k__, class UObject* __WorldContext, float& ___);   // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void __ir(class UObject* __WorldContext);                                                                                // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void __eu___(class ATsBaseCharacter_C* _k___, class ATsBaseCharacter_C* _k___1, class UObject* __WorldContext, float& __); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void GetPosinPath(TArray<FSPointsRow>& InRow, bool bXDir, bool bYDir, class UObject* __WorldContext, TArray<FVector>& OutPoints); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void _W_S_(FVector _S, FVector _v_, FVector _S_p, class UObject* __WorldContext, bool& _W_S_);                           // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool _f_T(class ATsBaseCharacter_C* BaseCharacter, bool _f_Tck, bool _f_T_g_, class UObject* __WorldContext);            // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void GetPathToTarget(FVector InEndPos, FVector InStartPos, class UObject* __WorldContext, TArray<FVector>& OutPathpoint); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void _5___(TEnumAsByte<ECamp> ____, TEnumAsByte<ECamp> _v_h, class UDataTable* _5___sQ, class UObject* __WorldContext, TEnumAsByte<ERelation>& sQ, int32_t& sQ__); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void __eu(FVector InVec, class UObject* __WorldContext, FVector& OutVec);                                                // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void __ir__(FRotator _v_h_, float TargetInterpSpeed_Const_, float ActorInterpSpeed_Smooth_, class ATsBaseCharacter_C* _el_, class UObject* __WorldContext); // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___S_______y(class AActor* _v_h, class AActor* _S_p, class UObject* __WorldContext, float& ___V);                   // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _O_u_b__(bool _Y___e_T, class ATsBaseCharacter_C* ____C, FName _b____, class AActor* _b__, class UObject* __WorldContext); // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void ___S______(FVector _v_h, class AActor* _S_p, class UObject* __WorldContext, float& ___V);                           // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void __n____(class ATsBaseCharacter_C* __, FString Key, int32_t _, class UObject* __WorldContext);                       // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void _8na___6R(class ATsBaseCharacter_C* ____C, float _el_, class ATsBaseCharacter_C* _Nh_, class UObject* __WorldContext, bool& ___R_g); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _Pbk(class ATsBaseCharacter_C* Character, class UObject* __WorldContext);                                           // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void _d_eyr_Q(FName gR__, class UDataTable* gR__D, TArray<AActor*>& _oXTA, TArray<FName>& _oXT__, class UObject* __WorldContext); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _f_e_R_u___________m_(class ACharacter* AsBaseCharacter, class UObject* __WorldContext, FVector& ____, FVector& _R_, FVector& _y_R__, bool& _f_Tck, bool& _f_T_g_, float& __, float& _w_Q_e, TEnumAsByte<EMovementMode>& _y_R); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _v_h__(class AActor* A, class AActor* _v_h, class UObject* __WorldContext, float& _0R_v_h, bool& ___V_f_T);         // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Render/RuntimeBP/ScreenEffect/BP_ScreenEffectPlayer.BP_ScreenEffectPlayer_C
/// Size: 0x0070 (112 bytes) (0x0002A8 - 0x000318) align 8 pad: 0x0000
class ABP_ScreenEffectPlayer_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	class UEffectScreenPlayData_C*                     Data;                                                       // 0x02B8   (0x0008)  
	TEnumAsByte<E_SE_PlayState>                        State;                                                      // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02C1   (0x0003)  MISSED
	float                                              TimeCounter;                                                // 0x02C4   (0x0004)  
	class AActor*                                      TargetActor;                                                // 0x02C8   (0x0008)  
	TArray<class UActorComponent*>                     CachedComponents;                                           // 0x02D0   (0x0010)  
	bool                                               bToHide;                                                    // 0x02E0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02E1   (0x0003)  MISSED
	float                                              ALPHA;                                                      // 0x02E4   (0x0004)  
	float                                              fadeSpeed;                                                  // 0x02E8   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x02EC   (0x0004)  MISSED
	TArray<class AActor*>                              CachedUIActors;                                             // 0x02F0   (0x0010)  
	bool                                               bVisible;                                                   // 0x0300   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0301   (0x0007)  MISSED
	class AUIContainerActor*                           ScreenEffectRoot;                                           // 0x0308   (0x0008)  
	bool                                               bNeedToDestroy;                                             // 0x0310   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x0311   (0x0003)  MISSED
	float                                              CacheEnvironmentFactor;                                     // 0x0314   (0x0004)  
	// void UpdatePlayerSEEnvironmentFactor(float EnvironmentFactor);                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void DestroyPlayer();                                                                                                    // [0x25a7960] Private|BlueprintCallable|BlueprintEvent 
	// void ClearPlayer();                                                                                                      // [0x25a7960] Private|BlueprintCallable|BlueprintEvent 
	// void InitPlayer(class UEffectScreenPlayData_C* Data, class AUIContainerActor* ScreenEffectRoot);                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BeforeStart();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetEffectHidden(bool bToHide, bool bOverrideFadeSpeed, float OverrideFadeSpeed);                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetUIVisible(bool Visible);                                                                                         // [0x25a7960] Private|BlueprintCallable|BlueprintEvent 
	// void UpdateComponentsAlpha();                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateComponents();                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EndPlayer();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void StartPlayer();                                                                                                      // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_BP_ScreenEffectPlayer(int32_t EntryPoint);                                                         // [0x25a7960] Final                
};

/// Class /Game/Aki/Render/RuntimeBP/Scene/KuroProjectilePathTracer/PD_KuroProjectileAsset.PD_KuroProjectileAsset_C
/// Size: 0x0030 (48 bytes) (0x000038 - 0x000068) align 8 pad: 0x0000
class UPD_KuroProjectileAsset_C : public UPrimaryDataAsset
{ 
public:
	class UStaticMesh*                                 DistanceRocordMesh;                                         // 0x0038   (0x0008)  
	float                                              DisplayDistancePerRecord;                                   // 0x0040   (0x0004)  
	int32_t                                            MaxPlaceCount;                                              // 0x0044   (0x0004)  
	float                                              RecordDeltaAngle;                                           // 0x0048   (0x0004)  
	float                                              TargetDeltaAngle;                                           // 0x004C   (0x0004)  
	float                                              TargetSize;                                                 // 0x0050   (0x0004)  
	float                                              TargetThreshold;                                            // 0x0054   (0x0004)  
	float                                              AnimationSpeed;                                             // 0x0058   (0x0004)  
	float                                              RecordSize;                                                 // 0x005C   (0x0004)  
	class UMaterialInstance*                           TargetDecalMat;                                             // 0x0060   (0x0008)  
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Character/Common/Blueprint/Utils/TsMoveBlueprintFunctionLibrary.TsMoveBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UTsMoveBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// FVector GetSwimLocation(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AddActorLocalOffsetWithContext(int32_t EntityID, FVector Offset, bool sweep, FString Context, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AddActorLocalRotationWithContext(int32_t EntityID, FRotator Rotation, bool sweep, FString Context, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AddActorWorldRotationWithContext(int32_t EntityID, FRotator Rotation, bool sweep, FString Context, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void AddActorWorldOffsetWithContext(int32_t EntityID, FVector Offset, bool sweep, FString Context, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetActorLocationAndRotationWithContext(int32_t EntityID, FVector Location, FRotator Rotation, bool sweep, FString Context, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool SetActorLocationWithContext(int32_t EntityID, FVector Location, bool sweep, FString Context, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool HasMoveInputOrTickIntervalAndModelBuffer(int32_t EntityID, class UObject* __WorldContext);                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void TurnOnAutomaticFlightMode(int32_t EntityID, class UICM_AutomaticFlight_DataBase_C* DataAsset, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void TurnOffAutomaticFlightMode(int32_t EntityID, class UObject* __WorldContext);                                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void UpdateAnimInfoMoveRoleNpc(int32_t EntityID, class UBP_ABPLogicParams_C* animLogicParams, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void UpdateAnimInfoMove(int32_t EntityID, class UBP_ABPLogicParams_C* animLogicParams, class UObject* __WorldContext);   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void UpdateAnimInfoMoveMonster(int32_t EntityID, class UBP_ABPLogicParams_C* animLogicParams, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetCanMoveFromInput(int32_t EntityID, bool canMove, class UObject* __WorldContext);                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetUpLength(int32_t EntityID, float Length, class UObject* __WorldContext);                                         // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetAirControl(int32_t EntityID, class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetAirControl(int32_t EntityID, float AirControl, class UObject* __WorldContext);                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetDistanceRopeToActor(int32_t EntityID, class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetDistanceRopeToActor(int32_t EntityID, float ropeForce, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetRopeForce(int32_t EntityID, class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetRopeForce(int32_t EntityID, float ropeForce, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetSocketName(int32_t EntityID, FString SocketName, class UObject* __WorldContext);                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetHooked(int32_t EntityID, class UObject* __WorldContext);                                                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetHooked(int32_t EntityID, bool isHooked, class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FVector GetGrabPoint(int32_t EntityID, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetGrabPoint(int32_t EntityID, FVector Point, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void Reset(int32_t EntityID, class UObject* __WorldContext);                                                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetPendulumData(int32_t EntityID, float AddVelocityX, float AddVelocityY, float AddVelocityZ, float forwardLossPercentage, float lossPercentage, float Gravity, float Friction, float Deceleration, float Accelerator, float MaxSpeed, float MaxFallingSpeed, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetRacingRightSpeed(int32_t EntityID, class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FString GetRoleBody(int32_t EntityID, class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// TEnumAsByte<EMovementDirection> GetMonsterMoveDirection(int32_t EntityID, class UObject* __WorldContext);                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void TurnToTarget(int32_t EntityID, class AActor* Target, float Speed, class UObject* __WorldContext);                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool DetectClimbWithDirect(int32_t EntityID, bool bSprintEnter, FVector Direct, class UObject* __WorldContext);          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ClearFallingHorizontalMaxSpeed(int32_t EntityID, class UObject* __WorldContext);                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetFallingHorizontalMaxSpeed(int32_t EntityID, float Speed, class UObject* __WorldContext);                         // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetLockedRotation(int32_t EntityID, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetLockedRotation(int32_t EntityID, bool lock, class UObject* __WorldContext);                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetDebugMovementSetting(int32_t EntityID, FSMovementSetting newSetting, class UObject* __WorldContext);             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetUseDebugMovementSetting(int32_t EntityID, bool newSelect, class UObject* __WorldContext);                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetClimbOnWallAngle(int32_t EntityID, class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool GetWaterVolume(int32_t EntityID, class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FVector GetWaterLocation(int32_t EntityID, class UObject* __WorldContext);                                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetExitClimbType(int32_t EntityID, TEnumAsByte<EExitClimb> exitType, class UObject* __WorldContext);                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetEnterClimbType(int32_t EntityID, TEnumAsByte<EEnterClimb> enterType, class UObject* __WorldContext);             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetClimbState(int32_t EntityID, TEnumAsByte<EClimbState> ClimbState, class UObject* __WorldContext);                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void DealClimbUpFinish(int32_t EntityID, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void FinishClimbDown(int32_t EntityID, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void DealClimbUpStart(int32_t EntityID, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OnExitClimb(int32_t EntityID, class UObject* __WorldContext);                                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void OnEnterClimb(int32_t EntityID, class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool CanClimbPress(int32_t EntityID, class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void KickExitCheck(int32_t EntityID, class UObject* __WorldContext);                                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FSClimbInfo GetClimbInfo(int32_t EntityID, class UObject* __WorldContext);                                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float GetClimbRadius(int32_t EntityID, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FSClimbState GetClimbState(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetEnterWaterState(int32_t EntityID, bool isEnter, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetAddMoveRotation(int32_t EntityID, FRotator Rotation, class UObject* __WorldContext);                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetAddMoveOffset(int32_t EntityID, FVector Offset, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetAddMoveWorldSpeed(int32_t EntityID, class UMeshComponent* Mesh, FVector Speed, class UObject* __WorldContext);   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetAddMoveWorld(int32_t EntityID, class UMeshComponent* Mesh, FVector Speed, float TimeLength, class UCurveFloat* Curve, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void StopAllAddMove(int32_t EntityID, class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FHitResult FixActorLocation(int32_t EntityID, FVector Target, float Offset, class UObject* __WorldContext);              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void StopAddMove(int32_t EntityID, class UMeshComponent* Mesh, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetAddMove(int32_t EntityID, class UMeshComponent* Mesh, FVector Speed, float TimeLength, class UCurveFloat* Curve, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetForceSpeed(int32_t EntityID, FVector Speed, class UObject* __WorldContext);                                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool IsFallingIntoWater(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float GetGroundedTime(int32_t EntityID, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float GetSpeed(int32_t EntityID, class UObject* __WorldContext);                                                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool IsJump(int32_t EntityID, class UObject* __WorldContext);                                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool IsMoving(int32_t EntityID, class UObject* __WorldContext);                                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool HasRotatorInput(int32_t EntityID, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool HasMoveInput(int32_t EntityID, class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SmoothCharacterRotation(int32_t EntityID, FRotator Target, float Speed, FString Context, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FSMovementSetting_State GetMovementData(int32_t EntityID, class UObject* __WorldContext);                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float GetAimYawRate(int32_t EntityID, class UObject* __WorldContext);                                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FVector GetAcceleration(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float GetHeightAboveGround(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool CanWalkPress(int32_t EntityID, class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool CanJumpPress(int32_t EntityID, class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool CanResponseInput(int32_t EntityID, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetHiddenMovementMode(int32_t EntityID, bool isHidden, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetCharacterHidden(int32_t EntityID, bool isHidden, class UObject* callObject, FString reason, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetInputRotator(int32_t EntityID, FRotator Rotator, class UObject* __WorldContext);                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FRotator GetInputRotator(int32_t EntityID, class UObject* __WorldContext);                                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetInputDirect(int32_t EntityID, FVector Direct, class UObject* __WorldContext);                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FVector GetInputDirect(int32_t EntityID, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ActorKuroMoveAlongFloorWithContext(int32_t EntityID, FVector Velocity, float DeltaSeconds, FString Context, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ActorTeleportToWithContext(int32_t EntityID, FVector Location, FRotator Rotation, FString Context, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool SetActorRotationWithContext(int32_t EntityID, FRotator Rotation, bool sweep, FString Context, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool SetActorRotationWithPriority(int32_t EntityID, FRotator Value, bool sweep, FString Context, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/LevelGamePlay/Common/TsGameSplineActor.TsGameSplineActor_C
/// Size: 0x0008 (8 bytes) (0x0002A8 - 0x0002B0) align 8 pad: 0x0000
class ATsGameSplineActor_C : public AActor
{ 
public:
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02A8   (0x0008)  
	// FRotator GetPointRotatorByIndex(int32_t Index);                                                                          // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetPatrolSpeedByIndex(int32_t Index);                                                                              // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Module/HideActor/TsHideActorBlueprintFunctionLibrary.TsHideActorBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UTsHideActorBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// void ShowEffect(class UObject* __WorldContext);                                                                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ShowMesh(class UObject* __WorldContext);                                                                            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void HideEffect(class UObject* __WorldContext);                                                                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void HideMesh(class UObject* __WorldContext);                                                                            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/BaseSeqCharacter/ABPC_Seq_Body_V2.ABPC_Seq_Body_V2_C
/// Size: 0x0048 (72 bytes) (0x0000C0 - 0x000108) align 8 pad: 0x0000
class UABPC_Seq_Body_V2_C : public UActorComponent
{ 
public:
	bool                                               _T_uir;                                                     // 0x00C0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x00C1   (0x0003)  MISSED
	float                                              ir_t_j;                                                     // 0x00C4   (0x0004)  
	TArray<FNamedCurveValue>                           NamedCurves;                                                // 0x00C8   (0x0010)  
	FRotator                                           Add_LookAt;                                                 // 0x00D8   (0x000C)  
	FRotator                                           Add_Bip001Head;                                             // 0x00E4   (0x000C)  
	FRotator                                           Add_Bip001Neck;                                             // 0x00F0   (0x000C)  
	FRotator                                           Add_Bip001Spine2;                                           // 0x00FC   (0x000C)  
	// FName GetBindingName();                                                                                                  // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// void GetCurves(TArray<FNamedCurveValue>& OutValues);                                                                     // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// float GetCurveValue(FName CurveName);                                                                                    // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// void ProcessEye(FVector EyeLookAt, float AngleScale);                                                                    // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void SetAnimDataFloatByOwner(TArray<FNamedCurveValue>& InCurves);                                                        // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetAnimDataVectorByOwner(TMap<FName, FVector>& VectorMap);                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Struct /Game/Aki/Sequence/Manager/SSequencesKeyFrames.SSequencesKeyFrames
/// Size: 0x0090 (144 bytes) (0x000000 - 0x000090) align 8 pad: 0x0000
struct FSSequencesKeyFrames
{ 
	TArray<int32_t>                                    SubtitleStartFrames_30_9875B20F4E97233313A01EBFF06291C0;    // 0x0000   (0x0010)  
	TArray<int32_t>                                    SubtitleEndFrames_31_372C3C0F4C5EB093D405B5BC34DED3D4;      // 0x0010   (0x0010)  
	TArray<int32_t>                                    ShotStartFrames_34_325581D445CA2CC41983DEB93F56A542;        // 0x0020   (0x0010)  
	TArray<int32_t>                                    ShotEndFrames_36_03DCDFBB4CEF2B4BC37968A8FA1EDC53;          // 0x0030   (0x0010)  
	SDK_UNDEFINED(80,1019) /* TMap<FString, int32_t> */ __um(FrameEventFrames_43_F683B0DD4A6DA8C0E5FD129EE5704AF5); // 0x0040   (0x0050)  
};

/// Class /Game/Aki/Sequence/Manager/BP_SequenceData_Generated.BP_SequenceData_Generated_C
/// Size: 0x0058 (88 bytes) (0x000038 - 0x000090) align 8 pad: 0x0000
class UBP_SequenceData_Generated_C : public UPrimaryDataAsset
{ 
public:
	TArray<FSSequencesKeyFrames>                       KeyFrames;                                                  // 0x0038   (0x0010)  
	TArray<FTransform>                                 FinalPos;                                                   // 0x0048   (0x0010)  
	TArray<class UClass*>                              BindingBP;                                                  // 0x0058   (0x0010)  
	TArray<bool>                                       IsFadeEnd;                                                  // 0x0068   (0x0010)  
	FName                                              BlendInTag;                                                 // 0x0078   (0x000C)  
	FName                                              BlendOutTag;                                                // 0x0084   (0x000C)  
};

/// Class /Game/Aki/Core/BP_ManagerBase.BP_ManagerBase_C
/// Size: 0x0018 (24 bytes) (0x000030 - 0x000048) align 8 pad: 0x0000
class UBP_ManagerBase_C : public UObject
{ 
public:
	class UBP_MainGameInstance_C*                      _8n_b;                                                      // 0x0030   (0x0008)  
	class UObject*                                     Lub__;                                                      // 0x0038   (0x0008)  
	class UBP_EventManager_C*                          _N_N_;                                                      // 0x0040   (0x0008)  
	// void OnLeaveWorld();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _R_(class UBP_MainGameInstance_C* _8n_b);                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
};

/// Struct /Game/Aki/Character/Kpose/Blueprint/SKposeEffect.SKposeEffect
/// Size: 0x0080 (128 bytes) (0x000000 - 0x000080) align 16 pad: 0x0000
struct FSKposeEffect
{ 
	SDK_UNDEFINED(48,1020) /* TWeakObjectPtr<UEffectModelBase*> */ __um(EffectData_10_3246131C4633FFDA427C6187B71AD429); // 0x0000   (0x0030)  
	FName                                              AttachSocketName_7_2C1410AA41AC4D32BDD90E86EFCD8656;        // 0x0030   (0x000C)  
	FName                                              SkeletalTagOptional_9_544314D34EF4C32FDF924AB478CF80ED;     // 0x003C   (0x000C)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0048   (0x0008)  MISSED
	FTransform                                         Transform_13_93B2F538418A37C5B3B70CBF726FBF46;              // 0x0050   (0x0030)  
};

/// Class /Game/Aki/Character/Kpose/Blueprint/BP_KposeBase.BP_KposeBase_C
/// Size: 0x0168 (360 bytes) (0x0002B8 - 0x000420) align 8 pad: 0x0000
class ABP_KposeBase_C : public AKuroEditorTickActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C0   (0x0008)  
	TArray<FSKposeEffect>                              PermanentEffects;                                           // 0x02C8   (0x0010)  
	TArray<FSKposeEffect>                              EffectsOnEnd;                                               // 0x02D8   (0x0010)  
	TArray<FSKposeEffect>                              EffectsOnStart;                                             // 0x02E8   (0x0010)  
	TArray<FKuroRainMaterialFloatParameter>            FloatParameterCurves;                                       // 0x02F8   (0x0010)  
	TArray<FKuroRainMaterialColorParameter>            ColorParameterCurves;                                       // 0x0308   (0x0010)  
	bool                                               IsInEditor;                                                 // 0x0318   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0319   (0x0003)  MISSED
	float                                              MaterialPlayTime;                                           // 0x031C   (0x0004)  
	TArray<int32_t>                                    CachedHandles;                                              // 0x0320   (0x0010)  
	TArray<class UMaterialInstanceDynamic*>            DynamicMaterials;                                           // 0x0330   (0x0010)  
	float                                              PassTime;                                                   // 0x0340   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0344   (0x0004)  MISSED
	SDK_UNDEFINED(80,1021) /* TMap<FName, float> */    __um(TempFloatValue);                                       // 0x0348   (0x0050)  
	SDK_UNDEFINED(80,1022) /* TMap<FName, FLinearColor> */ __um(TempColorValue);                                   // 0x0398   (0x0050)  
	float                                              TimeNormalized;                                             // 0x03E8   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x03EC   (0x0004)  MISSED
	class UStaticMesh*                                 PlatformStaticMesh;                                         // 0x03F0   (0x0008)  
	TEnumAsByte<BP_Enum_PlatformSize>                  Size;                                                       // 0x03F8   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x03F9   (0x0007)  MISSED
	FString                                            M;                                                          // 0x0400   (0x0010)  
	FString                                            M0;                                                         // 0x0410   (0x0010)  
	// void PlayEnd();                                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PlayStart();                                                                                                        // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void PlayKposeEffects(TArray<FSKposeEffect>& Data, float AutoScale);                                                     // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void PlayEffect(TWeakObjectPtr<UEffectModelBase*> EffectData, class USkeletalMeshComponent* Component, FName AttachSocket, FTransform Transform); // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void StopEffects();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void EditorInit();                                                                                                       // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_KposeBase(int32_t EntryPoint);                                                                  // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/BaseSeqCharacter/BP_BaseRole_Seq_V2.BP_BaseRole_Seq_V2_C
/// Size: 0x006C (108 bytes) (0x000308 - 0x000374) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ABP_BaseRole_Seq_V2_C : public APawn
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0308   (0x0008)  
	class UChildActorComponent*                        Hulu;                                                       // 0x0310   (0x0008)  
	class UABPC_Seq_Body_V2_C*                         ABPC_Body_V2;                                               // 0x0318   (0x0008)  
	class USkeletalMeshComponent*                      SkeletalMeshComponent0;                                     // 0x0320   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0328   (0x0008)  
	int32_t                                            TalkID;                                                     // 0x0330   (0x0004)  
	FName                                              BindingTag;                                                 // 0x0334   (0x000C)  
	float                                              HuluFX_Handle;                                              // 0x0340   (0x0004)  
	float                                              CharFX_Group_Handle;                                        // 0x0344   (0x0004)  
	float                                              CharFX_Handle;                                              // 0x0348   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x034C   (0x0004)  MISSED
	class UPD_CharacterControllerDataGroup_C*          DataGroup;                                                  // 0x0350   (0x0008)  
	class UPD_CharacterControllerData_C*               Data;                                                       // 0x0358   (0x0008)  
	class ABP_Fx_Scanning_C*                           BPScanning;                                                 // 0x0360   (0x0008)  
	class UCharRenderingComponent_C*                   CharRenderingComponent;                                     // 0x0368   (0x0008)  
	int32_t                                            TalkID_SP;                                                  // 0x0370   (0x0004)  
	// TArray<FName> GetSupportGroupNames();                                                                                    // [0x25a7960] Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool GetAnimDataFloat(TArray<FNamedCurveValue>& FloatCurveData);                                                         // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetAnimDataVector(TMap<FName, FVector>& VectorCurveData);                                                           // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool SetAnimDataFloat(TArray<FNamedCurveValue>& FloatCurveData);                                                         // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool SetAnimDataVector(TMap<FName, FVector>& VectorCurveData);                                                           // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void GetABPC_Body_V2(class UABPC_Seq_Body_V2_C*& ABPC_Body_V2);                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EndSwitchPose_ToBP(class AActor* To, bool Log);                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EndSwitchPose_ToSeq(class AActor* To, bool Log);                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BeginSwitchPose_ToBP(class AActor* From, class AActor* To, float SwitchTime, bool ErrorLog);                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BeginSwitchPose_ToSeq(class AActor* From, class AActor* To, float SwitchTime, bool ErrorLog);                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _m_Rkb();                                                                                                           // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void xS____r_P();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _m_R__r_P();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void xS____r_Pg();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _m_R__r_Pg();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void CleanHuluState();                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ChangeHuluState(int32_t State);                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SwitchMeshTransform(bool LevelA);                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EndSwitchPose(class AActor* To, bool Log);                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BeginSwitchPose(class AActor* From, class AActor* To, float SwitchTime, bool ErrorLog);                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void JumpFrame();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveDestroyed();                                                                                                 // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_BaseRole_Seq_V2(int32_t EntryPoint);                                                            // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/Tools/BPL_BulletPreview.BPL_BulletPreview_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPL_BulletPreview_C : public UBlueprintFunctionLibrary
{ 
public:
	// void ShowBulletPreview(FString P_9_h, FName P_9_, class AActor* _b_, class USkeletalMeshComponent* MeshComp, class UObject* __WorldContext, class AActor*& Ret); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Data/PathLine/BP_Miaozhunxian.BP_Miaozhunxian_C
/// Size: 0x0041 (65 bytes) (0x0002A8 - 0x0002E9) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class ABP_Miaozhunxian_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class UInstancedStaticMeshComponent*               InstancedStaticMesh;                                        // 0x02B0   (0x0008)  
	class USplineComponent*                            Spline;                                                     // 0x02B8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C0   (0x0008)  
	class UStaticMesh*                                 BasicStaticMesh;                                            // 0x02C8   (0x0008)  
	float                                              SamplingNum;                                                // 0x02D0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02D4   (0x0004)  MISSED
	TArray<class UStaticMeshComponent*>                BasicStaticMeshs;                                           // 0x02D8   (0x0010)  
	bool                                               Showing;                                                    // 0x02E8   (0x0001)  
	// void ShowMesh();                                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void HideMesh();                                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateMesh();                                                                                                       // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void Init();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_Miaozhunxian(int32_t EntryPoint);                                                               // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Data/TeleControl/BP_TeleControlConfig.BP_TeleControlConfig_C
/// Size: 0x01F0 (496 bytes) (0x000038 - 0x000228) align 8 pad: 0x0000
class UBP_TeleControlConfig_C : public UPrimaryDataAsset
{ 
public:
	float                                              __ag;                                                       // 0x0038   (0x0004)  
	float                                              Fd_R;                                                       // 0x003C   (0x0004)  
	float                                              _8T_S;                                                      // 0x0040   (0x0004)  
	float                                              ____;                                                       // 0x0044   (0x0004)  
	float                                              ___;                                                        // 0x0048   (0x0004)  
	float                                              ____0;                                                      // 0x004C   (0x0004)  
	float                                              ____1;                                                      // 0x0050   (0x0004)  
	float                                              _8T_S2;                                                     // 0x0054   (0x0004)  
	float                                              __P_;                                                       // 0x0058   (0x0004)  
	float                                              ur__;                                                       // 0x005C   (0x0004)  
	float                                              ___3;                                                       // 0x0060   (0x0004)  
	float                                              Fd_R4;                                                      // 0x0064   (0x0004)  
	FVector                                            _e;                                                         // 0x0068   (0x000C)  
	FVector                                            null;                                                       // 0x0074   (0x000C)  
	FVector                                            _N__;                                                       // 0x0080   (0x000C)  
	FGameplayTag                                       _cir_O;                                                     // 0x008C   (0x000C)  
	FGameplayTag                                       __ag5;                                                      // 0x0098   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00A4   (0x0004)  MISSED
	class UClass*                                      __ag6;                                                      // 0x00A8   (0x0008)  
	float                                              ___c6;                                                      // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00B4   (0x0004)  MISSED
	class UClass*                                      _cir_O7;                                                    // 0x00B8   (0x0008)  
	FGameplayTag                                       _8T_S__;                                                    // 0x00C0   (0x000C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00CC   (0x0004)  MISSED
	class UClass*                                      _8T_S__8;                                                   // 0x00D0   (0x0008)  
	bool                                               Sb;                                                         // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x00D9   (0x0003)  MISSED
	float                                              _S_Q___c_;                                                  // 0x00DC   (0x0004)  
	float                                              ___a_;                                                      // 0x00E0   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x00E4   (0x0004)  MISSED
	SDK_UNDEFINED(80,1023) /* TMap<float, float> */    __um(___a_w_);                                              // 0x00E8   (0x0050)  
	class UClass*                                      _b_c;                                                       // 0x0138   (0x0008)  
	bool                                               _______;                                                    // 0x0140   (0x0001)  
	bool                                               _cir_O_c;                                                   // 0x0141   (0x0001)  
	unsigned char                                      UnknownData05_6[0x2];                                       // 0x0142   (0x0002)  MISSED
	float                                              _e___r__;                                                   // 0x0144   (0x0004)  
	TArray<FGameplayTag>                               _cir_O9;                                                    // 0x0148   (0x0010)  
	FVector                                            ___a_wP;                                                    // 0x0158   (0x000C)  
	float                                              irSO;                                                       // 0x0164   (0x0004)  
	float                                              irSO__;                                                     // 0x0168   (0x0004)  
	float                                              irSO___;                                                    // 0x016C   (0x0004)  
	FString                                            _cir_Q_f;                                                   // 0x0170   (0x0010)  
	bool                                               __r__f_T_;                                                  // 0x0180   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x0181   (0x0003)  MISSED
	FName                                              ___g_r__;                                                   // 0x0184   (0x000C)  
	FName                                              _8T_S_r__;                                                  // 0x0190   (0x000C)  
	FName                                              _O_c_r__;                                                   // 0x019C   (0x000C)  
	FName                                              _b_c_r__;                                                   // 0x01A8   (0x000C)  
	unsigned char                                      UnknownData07_6[0x4];                                       // 0x01B4   (0x0004)  MISSED
	class UCurveVector*                                _b_c___R;                                                   // 0x01B8   (0x0008)  
	bool                                               _bir_w_Q___;                                                // 0x01C0   (0x0001)  
	bool                                               _bir_w_Q;                                                   // 0x01C1   (0x0001)  
	unsigned char                                      UnknownData08_6[0x2];                                       // 0x01C2   (0x0002)  MISSED
	float                                              _bir_w_Q10;                                                 // 0x01C4   (0x0004)  
	float                                              _bir_w_Q_;                                                  // 0x01C8   (0x0004)  
	float                                              _bir_w_Q__;                                                 // 0x01CC   (0x0004)  
	FGameplayTag                                       _bir_w_Q11;                                                 // 0x01D0   (0x000C)  
	unsigned char                                      UnknownData09_6[0x4];                                       // 0x01DC   (0x0004)  MISSED
	FSoftObjectPath                                    _bir_w_Q_j;                                                 // 0x01E0   (0x0020)  
	FSoftObjectPath                                    _bir_w_Q_j12;                                               // 0x0200   (0x0020)  
	float                                              _bir_w_Q_j_;                                                // 0x0220   (0x0004)  
	float                                              _b_c__;                                                     // 0x0224   (0x0004)  
};

/// Class /Game/Aki/Render/RuntimeBP/Character/Manager/BP_CharacterRenderingFunctionLibrary.BP_CharacterRenderingFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBP_CharacterRenderingFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// void RemoveMaterialControllerDataGroup_MeshComponent(class UMeshComponent* MeshComponent, float HandleId, class UObject* __WorldContext); // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void QuickInitAndAddDataGroup_MeshComponent(class USkeletalMeshComponent* MeshComponent, class UPD_CharacterControllerDataGroup_C* Data, class UObject* __WorldContext, float& HandleId, class UCharRenderingComponent_C*& CharRenderComponent); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AddMaterialControllerDataForAllCases(class AActor* Actor, class UPD_CharacterControllerData_C* Data, class UObject* __WorldContext); // [0x25a7960] Static|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetLGUIMPC(class UObject* __WorldContext, class UMaterialParameterCollection*& MPC);                                // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ApplyWeaponLevelMaterial(class USkinnedMeshComponent* Mesh, class UPD_WeaponLevelMaterialDatas_C* Data, int32_t& Level, class UObject* __WorldContext); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetFallbackLevelData(int32_t FirstIndex, class UPD_WeaponLevelMaterialDatas_C* Data, class UObject* __WorldContext, FSWeaponLevelMaterialData& Value); // [0x25a7960] Private|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ApplyMaterialParems(FSWeaponMaterialParams Params, class UMaterialInstanceDynamic* Material, class UObject* __WorldContext); // [0x25a7960] Private|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void RemoveSimpleHolographicEffect(class AActor* Target, class UObject* __WorldContext);                                 // [0x25a7960] Static|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void AddSimpleHolographicEffect(class AActor* Target, class UObject* __WorldContext);                                    // [0x25a7960] Static|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void RemoveMaterialControllerData_MeshComponent(class UMeshComponent* MeshComponent, float HandleId, class UObject* __WorldContext); // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void QuickInitAndAddData_MeshComponent(class UMeshComponent* MeshComponent, class UPD_CharacterControllerData_C* Data, class UObject* __WorldContext, float& HandleId); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetCharacterStarScarValue(class ATsBaseCharacter_C* Character, float Value, float SectionIndex, class UObject* __WorldContext); // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void RemoveMaterialControllerDataGroup_BP(class ATsBaseCharacter_C* Character, float HandleId, class UObject* __WorldContext); // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void QuickInitAndAddDataGroup_BP(class ATsBaseCharacter_C* Character, class UPD_CharacterControllerDataGroup_C* Data, class UObject* __WorldContext, float& HandleId); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RemoveMaterialControllerData_BP(class ATsBaseCharacter_C* Character, float HandleId, class UObject* __WorldContext); // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void RemoveMaterialControllerDataGroup(class ASkeletalMeshActor* SkeletalMesh, float HandleId, class UObject* __WorldContext); // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void QuickInitAndAddData_BP(class ATsBaseCharacter_C* Character, class UPD_CharacterControllerData_C* Data, class UObject* __WorldContext, float& HandleId); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void QuickInitAndAddDataGroup(class ASkeletalMeshActor* SkeletalMesh, class UPD_CharacterControllerDataGroup_C* Data, class UObject* __WorldContext, float& HandleId); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RemoveMaterialControllerData(class ASkeletalMeshActor* SkeletalMesh, float HandleId, class UObject* __WorldContext); // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void QuickInitAndAddData(class ASkeletalMeshActor* SkeletalMesh, class UPD_CharacterControllerData_C* Data, class UObject* __WorldContext, float& HandleId); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Struct /Game/Aki/Data/UiNavigation/Struct/SNavigationGroup.SNavigationGroup
/// Size: 0x00C1 (193 bytes) (0x000000 - 0x0000C1) align 8 pad: 0x0001
#pragma pack(push, 0x1)
struct FSNavigationGroup
{ 
	FString                                            GroupName_5_4A4352724F4FB7DCAC7B1E99DB409163;               // 0x0000   (0x0010)  
	int32_t                                            GroupType_34_CF445B0640A4DABDD990CDB2BA9ADE72;              // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            PrevGroupName_2_C3E8149D474A89D8206FA2B12E32529D;           // 0x0018   (0x0010)  
	FString                                            NextGroupName_6_084CCE4C42A106023371A99997D409D6;           // 0x0028   (0x0010)  
	FString                                            InsideGroupName_55_A0683A7F4A1938CD21B3979FF0F50E22;        // 0x0038   (0x0010)  
	SDK_UNDEFINED(80,1024) /* TMap<FString, FString> */ __um(GroupNameMap_69_4D6B03A64DE54000AE4B2D8DEE5F6B23);    // 0x0048   (0x0050)  
	UINavigationWrapMode                               HorizontalWrapMode_26_49A03601465F8B9BB2322B83A19E0BD4;     // 0x0098   (0x0001)  
	UINavigationPriorityMode                           HorizontalPriorityMode_23_5BE26BB043F38B37D3377FA0A3265698; // 0x0099   (0x0001)  
	UINavigationWrapMode                               VerticalWrapMode_27_F70C67404D65D80542040BBD7132C225;       // 0x009A   (0x0001)  
	UINavigationPriorityMode                           VerticalPriorityMode_24_E268C647431089CCF97AC3BA9E2DB824;   // 0x009B   (0x0001)  
	bool                                               SelectableMemory_49_B4EED11F416769180DC1539CA5AAC7AC;       // 0x009C   (0x0001)  
	bool                                               AllowNavigationInSelfDynamic_58_B0CB45D44CCE272844B17F84E032F4B3; // 0x009D   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x009E   (0x0002)  MISSED
	TArray<class UTsUiNavigationBehaviorListener_C*>   ListenerList_45_EAA9FC4F4D58ACE6FB6D34AA29398B77;           // 0x00A0   (0x0010)  
	class UTsUiNavigationBehaviorListener_C*           LastSelectListener_52_2296EA704FCC240B8822DBA749E6FD16;     // 0x00B0   (0x0008)  
	class UTsUiNavigationBehaviorListener_C*           DefaultListener_61_4BC594C344FB04899405DCADA412E415;        // 0x00B8   (0x0008)  
	bool                                               RefreshNavigation_71_063A142F4E9EE8A94E59478317E22ADE;      // 0x00C0   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Module/UiNavigation/New/TsUiNavigationPanelConfig.TsUiNavigationPanelConfig_C
/// Size: 0x0180 (384 bytes) (0x0000E8 - 0x000268) align 8 pad: 0x0000
class UTsUiNavigationPanelConfig_C : public ULGUIBehaviour
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00E8   (0x0008)  
	FString                                            ViewName;                                                   // 0x00F0   (0x0010)  
	bool                                               Independent;                                                // 0x0100   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0101   (0x0007)  MISSED
	TArray<FSNavigationGroup>                          NormalGroup;                                                // 0x0108   (0x0010)  
	TArray<FSNavigationGroup>                          BookmarkGroup;                                              // 0x0118   (0x0010)  
	FSNavigationGroup                                  ScrollBarGroup;                                             // 0x0128   (0x00C8)  
	TArray<class AActor*>                              DefaultNavigationActor;                                     // 0x01F0   (0x0010)  
	bool                                               IsChildPanel;                                               // 0x0200   (0x0001)  
	bool                                               AllowNavigateInKeyBoard;                                    // 0x0201   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x0202   (0x0006)  MISSED
	SDK_UNDEFINED(80,1025) /* TMap<FString, FSNavigationDynamicListenerConfig> */ __um(DynamicListenerConfigMap);  // 0x0208   (0x0050)  
	FString                                            InteractiveTag;                                             // 0x0258   (0x0010)  
	// void OnDestroyBP();                                                                                                      // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void AwakeBP();                                                                                                          // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnEnableBP();                                                                                                       // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnDisableBP();                                                                                                      // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void StartBP();                                                                                                          // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsUiNavigationPanelConfig(int32_t EntryPoint);                                                     // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStatePalsy.BP_SM_BindStatePalsy_C
/// Size: 0x0060 (96 bytes) (0x000030 - 0x000090) align 8 pad: 0x0000
class UBP_SM_BindStatePalsy_C : public UASMBindState
{ 
public:
	SDK_UNDEFINED(48,1026) /* TWeakObjectPtr<UCounterAttackEffectData_C*> */ __um(9__Syr);                         // 0x0030   (0x0030)  
	SDK_UNDEFINED(48,1027) /* TWeakObjectPtr<UCounterAttackCameraData_C*> */ __um(9__SDd_);                        // 0x0060   (0x0030)  
};

/// Class /Game/Aki/Character/BaseCharacter/StateMachine/BP_SM_BindStateDeathMontage.BP_SM_BindStateDeathMontage_C
/// Size: 0x0018 (24 bytes) (0x000030 - 0x000048) align 8 pad: 0x0000
class UBP_SM_BindStateDeathMontage_C : public UASMBindState
{ 
public:
	TEnumAsByte<EMonsterDeathType>                     _k_N;                                                       // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0031   (0x0007)  MISSED
	FString                                            MontageName;                                                // 0x0038   (0x0010)  
};

/// Class /Game/Aki/Sequence/Manager/BP_KuroMasterSeqEvent.BP_KuroMasterSeqEvent_C
/// Size: 0x002C (44 bytes) (0x0002A8 - 0x0002D4) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ABP_KuroMasterSeqEvent_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	bool                                               ModifiedNearClipPlane;                                      // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02B9   (0x0007)  MISSED
	SDK_UNDEFINED(16,1028) /* FMulticastInlineDelegate */ __um(OnScreenShotFade);                                  // 0x02C0   (0x0010)  
	int32_t                                            DelayMerge;                                                 // 0x02D0   (0x0004)  
	// void U__y8n_b(float Time);                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Sb(int32_t ChapterState, int32_t ChapterId);                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___S();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ();                                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void gbL_Am(FString Key);                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void b__Y__4Y();                                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __te__4Y(int32_t NearClip);                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void oR___();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _N___(bool shouldBlend, float BlendTime, TEnumAsByte<EViewTargetBlendFunction> BlendFunction, float BlendExp);      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _T_u_R();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _y_u_R();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveDestroyed();                                                                                                 // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_KuroMasterSeqEvent(int32_t EntryPoint);                                                         // [0x25a7960] Final                
	// void OnScreenShotFade__DelegateSignature();                                                                              // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Effect/BluePrint/BP_FX_Common/BP_Fx_Control_Obj.BP_Fx_Control_Obj_C
/// Size: 0x0019 (25 bytes) (0x0002A8 - 0x0002C1) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class ABP_Fx_Control_Obj_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class UNiagaraComponent*                           NS_Fx_Control_Obj_Beam;                                     // 0x02B0   (0x0008)  
	class AActor*                                      EndActor;                                                   // 0x02B8   (0x0008)  
	bool                                               CanShow;                                                    // 0x02C0   (0x0001)  
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_Fx_Control_Obj(int32_t EntryPoint);                                                             // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Core/BP_StartupPlayerController.BP_StartupPlayerController_C
/// Size: 0x0000 (0 bytes) (0x000728 - 0x000728) align 8 pad: 0x0000
class ABP_StartupPlayerController_C : public ATsStartupPlayerController_C
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Character/SimpleNpc/Blueprint/BP_Simpleholographic.BP_SimpleHolographic_C
/// Size: 0x009A (154 bytes) (0x0002A8 - 0x000342) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class ABP_SimpleHolographic_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	SDK_UNDEFINED(80,1029) /* TMap<USkeletalMeshComponent*, FSHolographicMaterialsCache> */ __um(ComponentMaterialsCache); // 0x02B8   (0x0050)  
	TArray<class UMaterialInstanceDynamic*>            OL_Materials;                                               // 0x0308   (0x0010)  
	TArray<class UMaterialInstanceDynamic*>            Other_Materials;                                            // 0x0318   (0x0010)  
	class UPD_HolographicEffect_C*                     Data;                                                       // 0x0328   (0x0008)  
	float                                              TimeCounter;                                                // 0x0330   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0334   (0x0004)  MISSED
	class AActor*                                      TargetRole;                                                 // 0x0338   (0x0008)  
	TEnumAsByte<EHolographicState>                     State;                                                      // 0x0340   (0x0001)  
	bool                                               bCached;                                                    // 0x0341   (0x0001)  
	// void RevertMaterialParamters(FSMaterialParamCache MaterialCache, class UMaterialInstanceDynamic*& Result);               // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// class UMaterialInstanceDynamic* CacheAndReplace(FSHolographicData& SHolographicData, class UPrimitiveComponent* self2, int32_t ElementIndex, class UMaterialInstanceDynamic* Material, FSMaterialParamCache& CacheResult); // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void CacheMaterialParameters(TArray<FSMaterialControllerFloatParameter>& Floats, TArray<FSMaterialControllerColorParameter>& Colors, class UMaterialInstanceDynamic* Material, bool bReplaceMaterial, int32_t Index, FSMaterialParamCache& Result); // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void Clear();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void RemoveNpcEffect();                                                                                                  // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdateMaterialsWithDa(TArray<UMaterialInstanceDynamic*>& Materials, FSHolographicData& SHolographicData);           // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void EndEffect();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void StartEffect();                                                                                                      // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_SimpleHolographic(int32_t EntryPoint);                                                          // [0x25a7960] Final                
};
#pragma pack(pop)

/// Struct /Game/Aki/Render/RuntimeBP/Effect/ClusteredStuff/SFoliageClusteredEffectEntry.SFoliageClusteredEffectEntry
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 pad: 0x0000
struct FSFoliageClusteredEffectEntry
{ 
	class UFoliageType*                                FoliageType_2_AAC77BAA4285BB5E9381359D5EC4578D;             // 0x0000   (0x0008)  
	class UEffectClusteredStuffSettings_C*             EffectSetting_5_D7FC350943129146608EA1B72A48674D;           // 0x0008   (0x0008)  
	int32_t                                            NumMin_8_3CD5AD914D1404D2C240F183DDDA0F09;                  // 0x0010   (0x0004)  
	int32_t                                            NumMax_10_F4A2C209412C086C72B3848FF069E049;                 // 0x0014   (0x0004)  
};

/// Class /Game/Aki/Render/RuntimeBP/Effect/ClusteredStuff/PDA_FoliageClusteredEffectConfig.PDA_FoliageClusteredEffectConfig_C
/// Size: 0x001C (28 bytes) (0x000038 - 0x000054) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UPDA_FoliageClusteredEffectConfig_C : public UPrimaryDataAsset
{ 
public:
	TArray<FSFoliageClusteredEffectEntry>              SettingsData;                                               // 0x0038   (0x0010)  
	FVector                                            BoxExtend;                                                  // 0x0048   (0x000C)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Render/RuntimeBP/AudioVisualization/SGlobalRtpcEntry.SGlobalRtpcEntry
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 pad: 0x0000
struct FSGlobalRtpcEntry
{ 
	class UAkRtpc*                                     RtpcFile_3_55D4A7C347028CC3921034B5F2340748;                // 0x0000   (0x0008)  
	FString                                            Identifier_7_7BFE7B914FD3C6D5C23BD9991C1E45C3;              // 0x0008   (0x0010)  
	float                                              Min_9_4F5390874C80597263DCC8BEC26C297C;                     // 0x0018   (0x0004)  
	float                                              Max_11_2092690A48C59E92851A87ADFC791C78;                    // 0x001C   (0x0004)  
};

/// Class /Game/Aki/Render/RuntimeBP/AudioVisualization/PDA_AudioVisualizationGlobalConfigs.PDA_AudioVisualizationGlobalConfigs_C
/// Size: 0x0018 (24 bytes) (0x000038 - 0x000050) align 8 pad: 0x0000
class UPDA_AudioVisualizationGlobalConfigs_C : public UPrimaryDataAsset
{ 
public:
	TArray<FSGlobalRtpcEntry>                          GlobalRtpcs;                                                // 0x0038   (0x0010)  
	class UMaterialParameterCollection*                MPCFile;                                                    // 0x0048   (0x0008)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Effect/WaterInteraction/SWaterEffectItem.SWaterEffectItem
/// Size: 0x0068 (104 bytes) (0x000000 - 0x000068) align 8 pad: 0x0000
struct FSWaterEffectItem
{ 
	float                                              Speed_2_F583B78840B6993AE0DE088887941E47;                   // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(48,1030) /* TWeakObjectPtr<UEffectModelBase*> */ __um(EffectDataRef_13_8B63B05C462B101215CC648DA1BD7DB5); // 0x0008   (0x0030)  
	SDK_UNDEFINED(48,1031) /* TWeakObjectPtr<UEffectModelBase*> */ __um(AudioEffectDataRef_14_F30AAB8D42CE04201B859E94E8B688B8); // 0x0038   (0x0030)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Effect/WaterInteraction/SWaterEffectGroup.SWaterEffectGroup
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 pad: 0x0000
struct FSWaterEffectGroup
{ 
	float                                              WaterDepth_7_F583B78840B6993AE0DE088887941E47;              // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FSWaterEffectItem>                          EffectConfig_11_200FB8B949A0725155F4338213E110FB;           // 0x0008   (0x0010)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Effect/WaterInteraction/SWaterEffectSubConfig.SWaterEffectSubConfig
/// Size: 0x0034 (52 bytes) (0x000000 - 0x000034) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSWaterEffectSubConfig
{ 
	TArray<FSWaterEffectGroup>                         MoveEffects_3_6E9928D34A9AEF0FF7608A939435817B;             // 0x0000   (0x0010)  
	TArray<FSWaterEffectItem>                          FallEffects_8_29B1A3F44073694D54DF4383F5C6E36E;             // 0x0010   (0x0010)  
	TArray<FSWaterEffectItem>                          JumpEffects_9_AE8499094F1316836E711488A749EA57;             // 0x0020   (0x0010)  
	float                                              FallJumpDepthThreshold_12_6C43EAC147AB1D7BB6840586FC19C70A; // 0x0030   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Effect/WaterInteraction/PDA_WaterEffectConfigs.PDA_WaterEffectConfigs_C
/// Size: 0x0120 (288 bytes) (0x000038 - 0x000158) align 8 pad: 0x0000
class UPDA_WaterEffectConfigs_C : public UPrimaryDataAsset
{ 
public:
	float                                              TimeExistAfterDead;                                         // 0x0038   (0x0004)  
	float                                              FallJumpPositionFix;                                        // 0x003C   (0x0004)  
	FSWaterEffectSubConfig                             WaterEffectConfig;                                          // 0x0040   (0x0038)  
	SDK_UNDEFINED(48,1032) /* TWeakObjectPtr<UEffectModelBase*> */ __um(SwimIdleEffectRef);                        // 0x0078   (0x0030)  
	SDK_UNDEFINED(48,1033) /* TWeakObjectPtr<UEffectModelBase*> */ __um(SwimNormalEffectRef);                      // 0x00A8   (0x0030)  
	SDK_UNDEFINED(48,1034) /* TWeakObjectPtr<UEffectModelBase*> */ __um(SwimFastEffectRef);                        // 0x00D8   (0x0030)  
	SDK_UNDEFINED(80,1035) /* TMap<UPhysicalMaterial*, FSWaterEffectSubConfig> */ __um(MaterialEffectConfig);      // 0x0108   (0x0050)  
};

/// Struct /Game/Aki/Data/Fight/Struct/SPartHitEffect.SPartHitEffect
/// Size: 0x0099 (153 bytes) (0x000000 - 0x000099) align 8 pad: 0x0001
#pragma pack(push, 0x1)
struct FSPartHitEffect
{ 
	FString                                            BoneName_2_560E38B7482B1183EAA6A68DE1067D65;                // 0x0000   (0x0010)  
	bool                                               IsBlockPawn_18_0CB2E9434D64A135D4718A8F0F5930C5;            // 0x0010   (0x0001)  
	bool                                               IsBulletDetect_23_F154CEAA451D9AFFDE01C6BFD7BD74DE;         // 0x0011   (0x0001)  
	bool                                               IsBlockCamera_22_D6D277294065842B127BB7B99775DE21;          // 0x0012   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x0013   (0x0001)  MISSED
	FVector                                            Size_30_DC47F386426EEC9B42EA338920A8BD2D;                   // 0x0014   (0x000C)  
	FVector                                            Location_31_408187B541400244A10EC1B648D29196;               // 0x0020   (0x000C)  
	FRotator                                           Rotation_33_F3539A04434E79BCE554E7A695C21644;               // 0x002C   (0x000C)  
	SDK_UNDEFINED(48,1036) /* TWeakObjectPtr<UEffectModelBase*> */ __um(Effect_43_AE655DD04CD628496758049C2507566F); // 0x0038   (0x0030)  
	SDK_UNDEFINED(48,1037) /* TWeakObjectPtr<UEffectModelAudio_C*> */ __um(Audio_40_E45E0E954689F2D19E643087BB447DF1); // 0x0068   (0x0030)  
	bool                                               ReplaceBulletHitEffect_42_6B34C17A48089EBCB961A7A725DE02EF; // 0x0098   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/Fight/Struct/SAimPart.SAimPart
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 8 pad: 0x0000
struct FSAimPart
{ 
	FString                                            BoneName_3_B32CA64F4FF22CB1150F49B45EE2062E;                // 0x0000   (0x0010)  
	FVector                                            Offset_8_17BDBF8548DAF3771A75FE901798FB03;                  // 0x0010   (0x000C)  
	float                                              RadiusIn_12_F71D60C742E3FB5038F20898BE8CA7B0;               // 0x001C   (0x0004)  
	float                                              RadiusOut_18_A7AA7BAD49036AEA3B3A659CA231F81F;              // 0x0020   (0x0004)  
	float                                              RadiusOutOnStart_15_B977CFC944BED18496667782EDF56BA9;       // 0x0024   (0x0004)  
	float                                              MobileCorrect_20_ED2D52904EF9E12A926033AE49117260;          // 0x0028   (0x0004)  
	float                                              GamePadCorrect_21_2A96B05646C1B1109647979F423C9943;         // 0x002C   (0x0004)  
	FString                                            __eu_v_____x_d_;                                            // 0x0030   (0x0010)  
};

/// Struct /Game/Aki/Data/Fight/Struct/SLockOnPart.SLockOnPart
/// Size: 0x0038 (56 bytes) (0x000000 - 0x000038) align 8 pad: 0x0000
struct FSLockOnPart
{ 
	FString                                            BoneName_2_048C9EF3448F15D7B3302ABCF21AA998;                // 0x0000   (0x0010)  
	bool                                               SoftLockValid_9_45098E15418657B7C965318E86E94A01;           // 0x0010   (0x0001)  
	bool                                               HardLockValid_7_166F80504483F02C033442B44C4A2494;           // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0012   (0x0006)  MISSED
	FString                                            AimPartBoneName_12_8F667B8D4DFC018C6589B2A33468AB3B;        // 0x0018   (0x0010)  
	FString                                            EnablePartName_16_D5B4C3C9470814563A7A41A520AA135A;         // 0x0028   (0x0010)  
};

/// Class /Game/Aki/Character/BaseCharacter/BP_PartHitEffect.BP_PartHitEffect_C
/// Size: 0x003C (60 bytes) (0x000038 - 0x000074) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_PartHitEffect_C : public UPrimaryDataAsset
{ 
public:
	TArray<FSPartHitEffect>                            PartCollision;                                              // 0x0038   (0x0010)  
	TArray<FSAimPart>                                  AimParts;                                                   // 0x0048   (0x0010)  
	TArray<FSLockOnPart>                               LockOnParts;                                                // 0x0058   (0x0010)  
	float                                              StartHideDistance;                                          // 0x0068   (0x0004)  
	float                                              CompleteHideDistance;                                       // 0x006C   (0x0004)  
	float                                              StartDitherValue;                                           // 0x0070   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Render/Effect/ClusteredStuff/EffectClusteredStuffDefaultSettings.EffectClusteredStuffDefaultSettings_C
/// Size: 0x0010 (16 bytes) (0x000038 - 0x000048) align 8 pad: 0x0000
class UEffectClusteredStuffDefaultSettings_C : public UPrimaryDataAsset
{ 
public:
	TArray<class UEffectClusteredStuffSettings_C*>     Settings;                                                   // 0x0038   (0x0010)  
};

/// Class /Game/Aki/Audio/BP_Wwise_AudioSpectrum.BP_Wwise_AudioSpectrum_C
/// Size: 0x0050 (80 bytes) (0x0002A8 - 0x0002F8) align 8 pad: 0x0000
class ABP_Wwise_AudioSpectrum_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class UAkComponent*                                Ak;                                                         // 0x02B0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B8   (0x0008)  
	class UConstantQNRT*                               Synesthesia_Analysis;                                       // 0x02C0   (0x0008)  
	TArray<float>                                      Frequency_Band_Strengths;                                   // 0x02C8   (0x0010)  
	TArray<float>                                      OutputArray;                                                // 0x02D8   (0x0010)  
	class UAkAudioEvent*                               AkResource;                                                 // 0x02E8   (0x0008)  
	class UAkAudioEvent*                               Ak_Event;                                                   // 0x02F0   (0x0008)  
	// void NotifyAnalyser(class UAkComponent* Ak, class UAkAudioEvent* AkEvent);                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void AkCall(class UAkComponent* Ak, class UAkAudioEvent* AkEvent);                                                       // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_Wwise_AudioSpectrum(int32_t EntryPoint);                                                        // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Render/Data/Weather/BP_Weather.BP_Weather_C
/// Size: 0x0010 (16 bytes) (0x0002A8 - 0x0002B8) align 8 pad: 0x0000
class ABP_Weather_C : public AActor
{ 
public:
	class UKuroPostProcessComponent*                   KuroPostProcess;                                            // 0x02A8   (0x0008)  
	class UKuroPostProcessComponent*                   KuroPostProcess0;                                           // 0x02B0   (0x0008)  
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/Data/EffectModelGhost.EffectModelGhost_C
/// Size: 0x00C0 (192 bytes) (0x000058 - 0x000118) align 8 pad: 0x0000
class UEffectModelGhost_C : public UEffectModelBase
{ 
public:
	class USkeletalMesh*                               Mesh;                                                       // 0x0058   (0x0008)  
	class UMaterialInterface*                          MaterialRef;                                                // 0x0060   (0x0008)  
	SDK_UNDEFINED(16,1038) /* TArray<TEnumAsByte<EEffectModelGhostComponent>> */ __um(MeshComponentsToUse);        // 0x0068   (0x0010)  
	TArray<FName>                                      CustomComponentNames;                                       // 0x0078   (0x0010)  
	FKuroCurveFloat                                    AlphaCurve;                                                 // 0x0088   (0x0090)  
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/Data/EffectModelNiagara.EffectModelNiagara_C
/// Size: 0x0000 (0 bytes) (0x000660 - 0x000660) align 8 pad: 0x0000
class UEffectModelNiagara_C : public UEffectModelNiagara
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/Data/EffectModelPostProcess.EffectModelPostProcess_C
/// Size: 0x0000 (0 bytes) (0x002108 - 0x002108) align 8 pad: 0x0000
class UEffectModelPostProcess_C : public UEffectModelPostProcess
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/Data/EffectModelGpuParticle.EffectModelGpuParticle_C
/// Size: 0x0598 (1432 bytes) (0x000058 - 0x0005F0) align 8 pad: 0x0000
class UEffectModelGpuParticle_C : public UEffectModelBase
{ 
public:
	class UKuroGPUParticleDA*                          Data;                                                       // 0x0058   (0x0008)  
	bool                                               Loop;                                                       // 0x0060   (0x0001)  
	bool                                               ReversePlay;                                                // 0x0061   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0062   (0x0006)  MISSED
	FKuroCurveVector                                   Location;                                                   // 0x0068   (0x01A8)  
	FKuroCurveVector                                   Rotation;                                                   // 0x0210   (0x01A8)  
	FKuroCurveVector                                   Scale;                                                      // 0x03B8   (0x01A8)  
	FKuroCurveFloat                                    TimeScaler;                                                 // 0x0560   (0x0090)  
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/Data/EffectModelStaticMesh.EffectModelStaticMesh_C
/// Size: 0x05D8 (1496 bytes) (0x000058 - 0x000630) align 8 pad: 0x0000
class UEffectModelStaticMesh_C : public UEffectModelBase
{ 
public:
	FKuroCurveVector                                   Location;                                                   // 0x0058   (0x01A8)  
	FKuroCurveVector                                   Rotation;                                                   // 0x0200   (0x01A8)  
	FKuroCurveVector                                   Scale;                                                      // 0x03A8   (0x01A8)  
	SDK_UNDEFINED(80,1039) /* TMap<FName, FKuroCurveLinearColor> */ __um(MaterialColorParameters);                 // 0x0550   (0x0050)  
	SDK_UNDEFINED(80,1040) /* TMap<FName, FKuroCurveFloat> */ __um(MaterialFloatParameters);                       // 0x05A0   (0x0050)  
	bool                                               ReceiveDecal;                                               // 0x05F0   (0x0001)  
	bool                                               EnableCollision;                                            // 0x05F1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x05F2   (0x0006)  MISSED
	class UStaticMesh*                                 StaticMeshRef;                                              // 0x05F8   (0x0008)  
	class UMaterialInterface*                          MaterialOverrideRef;                                        // 0x0600   (0x0008)  
	bool                                               UseMultipleMaterialSlots;                                   // 0x0608   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0609   (0x0007)  MISSED
	TArray<class UMaterialInterface*>                  MaterialOverrideArrayRef;                                   // 0x0610   (0x0010)  
	bool                                               CastShadow;                                                 // 0x0620   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0621   (0x0003)  MISSED
	float                                              TranslucencySortPriority;                                   // 0x0624   (0x0004)  
	bool                                               EnableScreenSizeCullRatioOverride;                          // 0x0628   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0629   (0x0003)  MISSED
	float                                              ScreenSizeCullRatio;                                        // 0x062C   (0x0004)  
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/Data/EffectModelSkeletalMesh.EffectModelSkeletalMesh_C
/// Size: 0x0518 (1304 bytes) (0x000058 - 0x000570) align 8 pad: 0x0000
class UEffectModelSkeletalMesh_C : public UEffectModelBase
{ 
public:
	bool                                               Looping;                                                    // 0x0058   (0x0001)  
	bool                                               Playing;                                                    // 0x0059   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x005A   (0x0006)  MISSED
	FKuroCurveVector                                   Location;                                                   // 0x0060   (0x01A8)  
	FKuroCurveVector                                   Rotation;                                                   // 0x0208   (0x01A8)  
	FKuroCurveVector                                   Scale;                                                      // 0x03B0   (0x01A8)  
	bool                                               EnableCollision;                                            // 0x0558   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0559   (0x0007)  MISSED
	class USkeletalMesh*                               SkeletalMeshRef;                                            // 0x0560   (0x0008)  
	class UAnimationAsset*                             AnimationRef;                                               // 0x0568   (0x0008)  
};

/// Class /Game/Aki/TypeScript/Game/Render/Character/AnimNotify/AnimNotifyStateAddMaterialControllerDataGroup.AnimNotifyStateAddMaterialControllerDataGroup_C
/// Size: 0x000C (12 bytes) (0x000048 - 0x000054) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UAnimNotifyStateAddMaterialControllerDataGroup_C : public UKuroAnimNotifyState
{ 
public:
	class UPD_CharacterControllerDataGroup_C*          MaterialAssetData;                                          // 0x0048   (0x0008)  
	float                                              Handle;                                                     // 0x0050   (0x0004)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Render/Character/AnimNotify/AnimNotifyStateAddMaterialControllerData.AnimNotifyStateAddMaterialControllerData_C
/// Size: 0x000C (12 bytes) (0x000048 - 0x000054) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UAnimNotifyStateAddMaterialControllerData_C : public UKuroAnimNotifyState
{ 
public:
	class UPD_CharacterControllerData_C*               MaterialAssetData;                                          // 0x0048   (0x0008)  
	float                                              Handle;                                                     // 0x0050   (0x0004)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Render/Character/AnimNotify/AnimNotifyAddMeshMaterialControllerDataGroup.AnimNotifyAddMeshMaterialControllerDataGroup_C
/// Size: 0x0018 (24 bytes) (0x000048 - 0x000060) align 8 pad: 0x0000
class UAnimNotifyAddMeshMaterialControllerDataGroup_C : public UKuroAnimNotifyState
{ 
public:
	bool                                               HideMeshAfterPlay;                                          // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0049   (0x0007)  MISSED
	class UPD_CharacterControllerDataGroup_C*          MaterialAssetData;                                          // 0x0050   (0x0008)  
	class ABP_MaterialControllerRenderActor_C*         RenderActor;                                                // 0x0058   (0x0008)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Render/Character/AnimNotify/AnimNotifyAddMeshMaterialControllerData.AnimNotifyAddMeshMaterialControllerData_C
/// Size: 0x0011 (17 bytes) (0x000048 - 0x000059) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UAnimNotifyAddMeshMaterialControllerData_C : public UKuroAnimNotifyState
{ 
public:
	class UPD_CharacterControllerData_C*               MaterialAssetData;                                          // 0x0048   (0x0008)  
	class ABP_MaterialControllerRenderActor_C*         RenderActor;                                                // 0x0050   (0x0008)  
	bool                                               HideMeshAfterPlay;                                          // 0x0058   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Render/Character/AnimNotify/AnimNotifyAddMaterialControllerDataGroup.AnimNotifyAddMaterialControllerDataGroup_C
/// Size: 0x0008 (8 bytes) (0x000048 - 0x000050) align 8 pad: 0x0000
class UAnimNotifyAddMaterialControllerDataGroup_C : public UKuroAnimNotify
{ 
public:
	class UPD_CharacterControllerDataGroup_C*          MaterialAssetData;                                          // 0x0048   (0x0008)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Render/Character/AnimNotify/AnimNotifyAddMaterialControllerData.AnimNotifyAddMaterialControllerData_C
/// Size: 0x0009 (9 bytes) (0x000048 - 0x000051) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UAnimNotifyAddMaterialControllerData_C : public UKuroAnimNotify
{ 
public:
	class UPD_CharacterControllerData_C*               MaterialAssetData;                                          // 0x0048   (0x0008)  
	bool                                               RemoveWhenRevive;                                           // 0x0050   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Render/Character/AnimNotify/AnimNotifyAddTransferEffect.AnimNotifyAddTransferEffect_C
/// Size: 0x0000 (0 bytes) (0x000051 - 0x000051) align 8 pad: 0x0000
class UAnimNotifyAddTransferEffect_C : public UAnimNotifyAddMaterialControllerData_C
{ 
public:
	// FString GetNotifyName();                                                                                                 // [0x13db470] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
};

/// Class /Game/Aki/TypeScript/Game/Render/Character/AnimNotify/AnimNotifyAddMotionVertexOffset.AnimNotifyAddMotionVertexOffset_C
/// Size: 0x0000 (0 bytes) (0x000051 - 0x000051) align 8 pad: 0x0000
class UAnimNotifyAddMotionVertexOffset_C : public UAnimNotifyAddMaterialControllerData_C
{ 
public:
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/Data/EffectModelAudio.EffectModelAudio_C
/// Size: 0x0038 (56 bytes) (0x000058 - 0x000090) align 8 pad: 0x0000
class UEffectModelAudio_C : public UEffectModelBase
{ 
public:
	int32_t                                            FadeOutTime;                                                // 0x0058   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x005C   (0x0004)  MISSED
	class UAkAudioEvent*                               AudioEvent;                                                 // 0x0060   (0x0008)  
	bool                                               KeepAlive;                                                  // 0x0068   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0069   (0x0007)  MISSED
	class UAkAudioEvent*                               TrailingAudioEvent;                                         // 0x0070   (0x0008)  
	EAudioFadeCurve                                    FadeOutCurve;                                               // 0x0078   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0079   (0x0007)  MISSED
	TArray<FVector>                                    LocationOffsets;                                            // 0x0080   (0x0010)  
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/AnimNotify/AnimNotifyEffect.AnimNotifyEffect_C
/// Size: 0x00A9 (169 bytes) (0x000080 - 0x000129) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UAnimNotifyEffect_C : public UKuroEffectMakerAN
{ 
public:
	bool                                               UseSocketTransform;                                         // 0x0080   (0x0001)  
	bool                                               UseClipboardTransform;                                      // 0x0081   (0x0001)  
	bool                                               DetachWhenSkillEnd;                                         // 0x0082   (0x0001)  
	TEnumAsByte<ESkillEffectType>                      WhenSkillEnd;                                               // 0x0083   (0x0001)  
	TEnumAsByte<EAnimNotifyEffectLocationType>         LocationType;                                               // 0x0084   (0x0001)  
	bool                                               RightOrLeftFoot;                                            // 0x0085   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0086   (0x0002)  MISSED
	SDK_UNDEFINED(48,1041) /* TWeakObjectPtr<UEffectModelBase*> */ __um(EffectDataAssetRef);                       // 0x0088   (0x0030)  
	float                                              WhenSkillEndEnableTime;                                     // 0x00B8   (0x0004)  
	bool                                               DebugTrace;                                                 // 0x00BC   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x00BD   (0x0003)  MISSED
	FVector                                            TraceFrom;                                                  // 0x00C0   (0x000C)  
	FVector                                            TraceTo;                                                    // 0x00CC   (0x000C)  
	SDK_UNDEFINED(80,1042) /* TMap<FGameplayTag, bool> */ __um(PlayNeedTags);                                      // 0x00D8   (0x0050)  
	bool                                               NeedAnyTag;                                                 // 0x0128   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_PostChangeProperty(FName PropertyName);                                                                          // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_ValidateAssets();                                                                                                // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/BP_Item.BP_Item_C
/// Size: 0x0018 (24 bytes) (0x0000C0 - 0x0000D8) align 8 pad: 0x0000
class UBP_Item_C : public UActorComponent
{ 
public:
	int32_t                                            _l___;                                                      // 0x00C0   (0x0004)  
	TEnumAsByte<EEntityType>                           __SO;                                                       // 0x00C4   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x00C5   (0x0003)  MISSED
	TArray<FName>                                      _S___l_;                                                    // 0x00C8   (0x0010)  
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/Data/NiagaraScalabilitySetting.NiagaraScalabilitySetting_C
/// Size: 0x0050 (80 bytes) (0x000038 - 0x000088) align 8 pad: 0x0000
class UNiagaraScalabilitySetting_C : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(80,1043) /* TMap<TEnumAsByte<ENiagaraScalabilityType>, UNiagaraEffectType*> */ __um(NiagaraEffectTypes); // 0x0038   (0x0050)  
};

/// Class /Game/Aki/Render/RuntimeBP/Effect/Trailing/PDA_TrailingConfigData.PDA_TrailingConfigData_C
/// Size: 0x0111 (273 bytes) (0x000038 - 0x000149) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UPDA_TrailingConfigData_C : public UPrimaryDataAsset
{ 
public:
	TEnumAsByte<ETrailingAttachType>                   AttachType;                                                 // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
	TArray<FString>                                    AttachLimbNames;                                            // 0x0040   (0x0010)  
	TArray<FVector>                                    RelativeLocations;                                          // 0x0050   (0x0010)  
	class UMaterialInterface*                          Material;                                                   // 0x0060   (0x0008)  
	int32_t                                            MaxLength;                                                  // 0x0068   (0x0004)  
	int32_t                                            MaxInterpolateCount;                                        // 0x006C   (0x0004)  
	float                                              LengthUnit;                                                 // 0x0070   (0x0004)  
	bool                                               UseNormal;                                                  // 0x0074   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0075   (0x0003)  MISSED
	float                                              AirflowHoldTime;                                            // 0x0078   (0x0004)  
	float                                              SmoothIntensity;                                            // 0x007C   (0x0004)  
	float                                              UV2Scale;                                                   // 0x0080   (0x0004)  
	float                                              Start;                                                      // 0x0084   (0x0004)  
	float                                              Loop;                                                       // 0x0088   (0x0004)  
	float                                              End;                                                        // 0x008C   (0x0004)  
	TArray<FSMaterialControllerFloatParameter>         Time_FloatParameter;                                        // 0x0090   (0x0010)  
	TArray<FSMaterialControllerColorParameter>         Time_ColorParameter;                                        // 0x00A0   (0x0010)  
	float                                              MaxDensitySpeed;                                            // 0x00B0   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00B4   (0x0004)  MISSED
	FKuroCurveFloat                                    AirflowDensitySpeedScale;                                   // 0x00B8   (0x0090)  
	bool                                               DestroyAtOnce;                                              // 0x0148   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Render/Effect/EffectViewComponent.EffectViewComponent_C
/// Size: 0x0008 (8 bytes) (0x000218 - 0x000220) align 16 pad: 0x0000
class UEffectViewComponent_C : public USceneComponent
{ 
public:
	unsigned char                                      UnknownData00_1[0x8];                                       // 0x0218   (0x0008)  MISSED
	// void Stop(bool Immediately);                                                                                             // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void Play();                                                                                                             // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void SetAutoPlay(bool AutoPlay);                                                                                         // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void EditorTick(float deltaSecond);                                                                                      // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Render/RuntimeBP/Effect/BP_EffectPreview.BP_EffectPreview_C
/// Size: 0x0018 (24 bytes) (0x0002B0 - 0x0002C8) align 8 pad: 0x0000
class ABP_EffectPreview_C : public AKuroEffectActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B8   (0x0008)  
	int32_t                                            EffectView;                                                 // 0x02C0   (0x0004)  
	int32_t                                            Transient;                                                  // 0x02C4   (0x0004)  
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_EffectPreview(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/Render/RuntimeBP/Library/BPF_ActorComponentHelper.BPF_ActorComponentHelper_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPF_ActorComponentHelper_C : public UBlueprintFunctionLibrary
{ 
public:
	// void GetOwnerScale(class UActorComponent* ActorComponent, class UObject* __WorldContext, bool& Success, FVector& Scale); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void GetOwnerRotator(class UActorComponent* ActorComponent, class UObject* __WorldContext, bool& Success, FRotator& Rotator); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void GetOwnerLocation(class UActorComponent* ActorComponent, class UObject* __WorldContext, bool& Success, FVector& Location); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void GetOwnerTransform(class UActorComponent* ActorComponent, class UObject* __WorldContext, bool& Success, FTransform& Transform); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Aki/Render/RuntimeBP/RenderData/PDA_GlobalRenderDataReference.PDA_GlobalRenderDataReference_C
/// Size: 0x0030 (48 bytes) (0x000038 - 0x000068) align 8 pad: 0x0000
class UPDA_GlobalRenderDataReference_C : public UPrimaryDataAsset
{ 
public:
	class UMaterialParameterCollection*                GlobalShaderParameters;                                     // 0x0038   (0x0008)  
	class UMaterialParameterCollection*                SceneInteractionShaderParameters;                           // 0x0040   (0x0008)  
	class UPDA_ModelLensFlareConfig_C*                 GlobalLensFlareConfig;                                      // 0x0048   (0x0008)  
	class UMaterialParameterCollection*                MPC_ShowBrightness;                                         // 0x0050   (0x0008)  
	class UPDA_DecalShadowConfig_C*                    DefaultDecalShadow;                                         // 0x0058   (0x0008)  
	class UMaterialParameterCollection*                EyesParameters;                                             // 0x0060   (0x0008)  
};

/// Class /Game/Aki/Render/RuntimeBP/Character/MaterialContainer/PD_CharacterMaterialContainerData.PD_CharacterMaterialContainerData_C
/// Size: 0x00E0 (224 bytes) (0x000038 - 0x000118) align 8 pad: 0x0000
class UPD_CharacterMaterialContainerData_C : public UPrimaryDataAsset
{ 
public:
	TArray<FName>                                      BodyNames;                                                  // 0x0038   (0x0010)  
	TArray<FName>                                      WeaponNames;                                                // 0x0048   (0x0010)  
	TArray<FName>                                      HuluNames;                                                  // 0x0058   (0x0010)  
	TArray<FName>                                      OtherNames;                                                 // 0x0068   (0x0010)  
	SDK_UNDEFINED(80,1044) /* TMap<TEnumAsByte<ECharacterBodySpecifiedType>, FSCharacterBodySpecifiedStruct> */ __um(BodySpecifiedTypes); // 0x0078   (0x0050)  
	SDK_UNDEFINED(80,1045) /* TMap<TEnumAsByte<ECharacterSlotSpecifiedType>, FSCharacterSlotSpecifiedStruct> */ __um(SlotSpecifiedTypes); // 0x00C8   (0x0050)  
};

/// Class /Game/Aki/Render/RuntimeBP/Character/MaterialController/PD_CurveLinearColorData.PD_CurveLinearColorData_C
/// Size: 0x0224 (548 bytes) (0x000038 - 0x00025C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UPD_CurveLinearColorData_C : public UPrimaryDataAsset
{ 
public:
	FKuroCurveLinearColor                              LinearColor;                                                // 0x0038   (0x0220)  
	float                                              Time;                                                       // 0x0258   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Character/MaterialController/PD_CurveFloatData.PD_CurveFloatData_C
/// Size: 0x0094 (148 bytes) (0x000038 - 0x0000CC) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UPD_CurveFloatData_C : public UPrimaryDataAsset
{ 
public:
	FKuroCurveFloat                                    FloatData;                                                  // 0x0038   (0x0090)  
	float                                              Time;                                                       // 0x00C8   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Character/BadSignalEffect/PDA_BadSignalParameters.PDA_BadSignalParameters_C
/// Size: 0x00A0 (160 bytes) (0x000038 - 0x0000D8) align 8 pad: 0x0000
class UPDA_BadSignalParameters_C : public UPrimaryDataAsset
{ 
public:
	float                                              SignalBiasStrength;                                         // 0x0038   (0x0004)  
	float                                              SignalBiasDirectionRange;                                   // 0x003C   (0x0004)  
	float                                              SignalBiasStrengthWiggle;                                   // 0x0040   (0x0004)  
	float                                              SignalBiasStrengthWiggleRate;                               // 0x0044   (0x0004)  
	float                                              SignalBiasSubWiggle;                                        // 0x0048   (0x0004)  
	float                                              SignalExplodeRate;                                          // 0x004C   (0x0004)  
	float                                              SignalExplodeHoldMin;                                       // 0x0050   (0x0004)  
	float                                              SignalExplodeHoldMax;                                       // 0x0054   (0x0004)  
	float                                              SignalBiasExplodeStrength;                                  // 0x0058   (0x0004)  
	float                                              SignalBiasExplodeSubWiggle;                                 // 0x005C   (0x0004)  
	float                                              SignalExplodeAttenuation;                                   // 0x0060   (0x0004)  
	float                                              RimRange;                                                   // 0x0064   (0x0004)  
	FLinearColor                                       RimColor;                                                   // 0x0068   (0x0010)  
	float                                              OutlineWidth;                                               // 0x0078   (0x0004)  
	FLinearColor                                       OutlineColor;                                               // 0x007C   (0x0010)  
	FLinearColor                                       MainTexColorTint;                                           // 0x008C   (0x0010)  
	float                                              StripMaskProportionSide;                                    // 0x009C   (0x0004)  
	float                                              StripMaskProportionCenter;                                  // 0x00A0   (0x0004)  
	float                                              StripMaskVScale;                                            // 0x00A4   (0x0004)  
	float                                              StripMaskVSpeed;                                            // 0x00A8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00AC   (0x0004)  MISSED
	class UTexture2D*                                  DistortionMaskTexture;                                      // 0x00B0   (0x0008)  
	float                                              DistortionHold;                                             // 0x00B8   (0x0004)  
	float                                              DistortionUScale;                                           // 0x00BC   (0x0004)  
	float                                              DistortionVScale;                                           // 0x00C0   (0x0004)  
	float                                              DistortionProportion;                                       // 0x00C4   (0x0004)  
	float                                              DistortionExplodeProportion;                                // 0x00C8   (0x0004)  
	float                                              WrapStrength;                                               // 0x00CC   (0x0004)  
	float                                              WrapBiasSpeed;                                              // 0x00D0   (0x0004)  
	float                                              WrapFrequecy;                                               // 0x00D4   (0x0004)  
};

/// Class /Game/Aki/Render/RuntimeBP/Character/ComplexBroken/PDA_ComplexBrokenData.PDA_ComplexBrokenData_C
/// Size: 0x0560 (1376 bytes) (0x000038 - 0x000598) align 8 pad: 0x0000
class UPDA_ComplexBrokenData_C : public UPrimaryDataAsset
{ 
public:
	class UMaterialInstance*                           MaterialReplace;                                            // 0x0038   (0x0008)  
	TArray<float>                                      PiecesMaskThreshold;                                        // 0x0040   (0x0010)  
	FSMaterialControllerFloatGroup                     ExtendMin;                                                  // 0x0050   (0x01B0)  
	FSMaterialControllerFloatGroup                     ExtendMax;                                                  // 0x0200   (0x01B0)  
	class UTexture2D*                                  maskTexture;                                                // 0x03B0   (0x0008)  
	FLinearColor                                       MaskUVBiasScale;                                            // 0x03B8   (0x0010)  
	TArray<FSMaterialControllerFloatParameter>         CustomFloatParameters;                                      // 0x03C8   (0x0010)  
	TArray<FSMaterialControllerColorParameter>         CustomColorParameters;                                      // 0x03D8   (0x0010)  
	FSMaterialControllerFloatGroup                     LoopTime;                                                   // 0x03E8   (0x01B0)  
};

/// Class /Game/Aki/Render/RuntimeBP/Character/MaterialController/BP_MaterialControllerRenderActor.BP_MaterialControllerRenderActor_C
/// Size: 0x0010 (16 bytes) (0x0002A8 - 0x0002B8) align 8 pad: 0x0000
class ABP_MaterialControllerRenderActor_C : public AActor
{ 
public:
	class UCharRenderingComponent_C*                   CharRenderingComponent;                                     // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
};

/// Class /Game/Aki/Render/RuntimeBP/Battle/PDA_WuYinQuBattleFightingData.PDA_WuYinQuBattleFightingData_C
/// Size: 0x0008 (8 bytes) (0x000038 - 0x000040) align 8 pad: 0x0000
class UPDA_WuYinQuBattleFightingData_C : public UPrimaryDataAsset
{ 
public:
	class UKuroWeatherDataAsset*                       AtmosFightingData;                                          // 0x0038   (0x0008)  
};

/// Class /Game/Aki/Render/RuntimeBP/Battle/PDA_WuYinQuBattleData.PDA_WuYinQuBattleData_C
/// Size: 0x0078 (120 bytes) (0x000038 - 0x0000B0) align 8 pad: 0x0000
class UPDA_WuYinQuBattleData_C : public UPrimaryDataAsset
{ 
public:
	float                                              IdleToFightingTransitionTime;                               // 0x0038   (0x0004)  
	float                                              FightingTransitionTime;                                     // 0x003C   (0x0004)  
	float                                              FightingToIdleTransitionTime;                               // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
	class UCurveFloat*                                 IdleToFightingCurve;                                        // 0x0048   (0x0008)  
	class UCurveFloat*                                 FightingTransitionCurve;                                    // 0x0050   (0x0008)  
	class UCurveFloat*                                 FightingToIdleCurve;                                        // 0x0058   (0x0008)  
	class UPDA_WuYinQuBattleIdleData_C*                WuYinQuIdleData;                                            // 0x0060   (0x0008)  
	class UPDA_WuYinQuBattleFightingData_C*            WuYinQuFightingData1;                                       // 0x0068   (0x0008)  
	class UPDA_WuYinQuBattleFightingData_C*            WuYinQuFightingData2;                                       // 0x0070   (0x0008)  
	class UPDA_WuYinQuBattleFightingData_C*            WuYinQuFightingData3;                                       // 0x0078   (0x0008)  
	TEnumAsByte<EWuYinQuState>                         Test;                                                       // 0x0080   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0081   (0x0007)  MISSED
	class UMaterialParameterCollection*                GlobalMPC;                                                  // 0x0088   (0x0008)  
	class UCurveFloat*                                 LandscapeShowingRadiusCurve;                                // 0x0090   (0x0008)  
	class UCurveFloat*                                 LandscapeFadingRadiusCurve;                                 // 0x0098   (0x0008)  
	class UPDA_InteractionGlobalConfigParameters_C*    GlobalInteractionParameterOverride;                         // 0x00A0   (0x0008)  
	float                                              TriggerOuterSize;                                           // 0x00A8   (0x0004)  
	float                                              TriggerInnerSize;                                           // 0x00AC   (0x0004)  
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Character/SimpleNpc/Blueprint/TsSimpleNpc.TsSimpleNpc_C
/// Size: 0x0058 (88 bytes) (0x0002B0 - 0x000308) align 8 pad: 0x0000
class ATsSimpleNpc_C : public AKuroEffectActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B0   (0x0008)  
	class UCharRenderingComponent_C*                   CharRenderingComponent;                                     // 0x02B8   (0x0008)  
	class USkeletalMeshComponent*                      Mesh;                                                       // 0x02C0   (0x0008)  
	class UCapsuleComponent*                           CapsuleCollision;                                           // 0x02C8   (0x0008)  
	class UCapsuleComponent*                           CapsuleCollision0;                                          // 0x02D0   (0x0008)  
	FSoftObjectPath                                    DA;                                                         // 0x02D8   (0x0020)  
	bool                                               DisappearOnSunny;                                           // 0x02F8   (0x0001)  
	bool                                               DisappearOnCloudy;                                          // 0x02F9   (0x0001)  
	bool                                               DisappearOnRainy;                                           // 0x02FA   (0x0001)  
	bool                                               DisappearOnThunderRain;                                     // 0x02FB   (0x0001)  
	bool                                               DisappearOnSnowy;                                           // 0x02FC   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02FD   (0x0003)  MISSED
	float                                              DebugDitherValue;                                           // 0x0300   (0x0004)  
	int32_t                                            LODLevel;                                                   // 0x0304   (0x0004)  
	// void DebugSetNpcDitherValue(float Value);                                                                                // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void HandleLoadedDaConfig(class UPD_NpcSetupData_C* daConfig1, bool IsEditor);                                           // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void StopMontage();                                                                                                      // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void HideDialog();                                                                                                       // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool TryPlayMontage(FString montagePath);                                                                                // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ShowDialog(FString text1, float removeFrame1);                                                                      // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ResetMeshLocation();                                                                                                // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetDefaultCollision();                                                                                              // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void FindFloor();                                                                                                        // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void LoadModel();                                                                                                        // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void EditorInit();                                                                                                       // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsSimpleNpc(int32_t EntryPoint);                                                                   // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Struct /Game/Aki/Data/NPC/SimpleNpcFlow/SimplpNpcStateData.SimplpNpcStateData
/// Size: 0x0058 (88 bytes) (0x000000 - 0x000058) align 8 pad: 0x0000
struct FSimplpNpcStateData
{ 
	bool                                               MeetAllConditions_13_1CC3C66C404443C50FE7FEAA6EFD3019;      // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(80,1046) /* TMap<TEnumAsByte<ESimpleNpcWorldState>, int32_t> */ __um(WorldStateMap_14_6CD1D7D8423DB32328875180DFF7D151); // 0x0008   (0x0050)  
};

/// Struct /Game/Aki/Data/NPC/SimpleNpcFlow/SimpleNpcFlowData.SimpleNpcFlowData
/// Size: 0x0088 (136 bytes) (0x000000 - 0x000088) align 8 pad: 0x0000
struct FSimpleNpcFlowData
{ 
	TEnumAsByte<ESimpleNpcFlowIndex>                   Pawn_24_CD886D8444C6C2E6EC5C75B09F924B53;                   // 0x0000   (0x0001)  
	TEnumAsByte<ESimpleNpcFlowCheckType>               CheckType_14_065E0FFB4D2FB7300CB5988E385D8AC1;              // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0002   (0x0002)  MISSED
	int32_t                                            CheckValue_5_D63390304C4D6A8886A0B2BEFB13430D;              // 0x0004   (0x0004)  
	FString                                            FlowListName_9_80C2D9BE4C6723F556D6DD88DA0DE957;            // 0x0008   (0x0010)  
	FString                                            FlowSubTitle_17_6C656AD34B42E96B850858B8E5916D3D;           // 0x0018   (0x0010)  
	float                                              LoopTime_26_7AB8D2E049FF73A8BC1DA4BD48B7786A;               // 0x0028   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x002C   (0x0004)  MISSED
	FSimplpNpcStateData                                WorldState_31_8D7689E841D60A5FE8F23EB089069410;             // 0x0030   (0x0058)  
};

/// Class /Game/Aki/Data/NPC/SimpleNpcFlow/SimpleNpcFlowComponent.SimpleNpcFlowComponent_C
/// Size: 0x0030 (48 bytes) (0x0000C0 - 0x0000F0) align 8 pad: 0x0000
class USimpleNpcFlowComponent_C : public UActorComponent
{ 
public:
	TArray<class ATsSimpleNpc_C*>                      NpcList;                                                    // 0x00C0   (0x0010)  
	TArray<FSimpleNpcFlowData>                         FlowList;                                                   // 0x00D0   (0x0010)  
	FFloatRange                                        CheckRange;                                                 // 0x00E0   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SSkillBehaviorCondition.SSkillBehaviorCondition
/// Size: 0x0042 (66 bytes) (0x000000 - 0x000042) align 8 pad: 0x0002
#pragma pack(push, 0x1)
struct FSSkillBehaviorCondition
{ 
	TEnumAsByte<ESkillBehaviorConditionType>           ConditionType_31_FDE61D77427DCD4BC0F2A7AA3D27695C;          // 0x0000   (0x0001)  
	bool                                               IgnoreZ_37_F6CCC57746F2CC2ECC2C2C8B8697BAE3;                // 0x0001   (0x0001)  
	TEnumAsByte<ESkillBehaviorComparisonLogic>         ComparisonLogic_41_BFD626EA4ADC6ECB646CA6B4C474889C;        // 0x0002   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x0003   (0x0001)  MISSED
	float                                              Value_45_2649759445759C286E73938D5318AA99;                  // 0x0004   (0x0004)  
	float                                              RangeL_47_7B13704A41AF164405A70085BB8683AB;                 // 0x0008   (0x0004)  
	float                                              RangeR_49_6D00959F40FAE4F69CAF15A1F177BDD9;                 // 0x000C   (0x0004)  
	int32_t                                            AttributeId1_57_B049A05E4E70C63D62BE2BA6A045D0AB;           // 0x0010   (0x0004)  
	int32_t                                            AttributeId2_55_F810A3BA4E7646BDF7859F8D04BC9E20;           // 0x0014   (0x0004)  
	int32_t                                            AttributeRate_61_C001B3DF4577447AB9519DA1B72FF66F;          // 0x0018   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	FGameplayTagContainer                              TagToCheck_64_464EE5B34705853741899A9D4F266404;             // 0x0020   (0x0020)  
	bool                                               AnyTag_67_51D28A91427519B4E10E76B922EE7E9B;                 // 0x0040   (0x0001)  
	bool                                               Reverse_35_73079DDF426EC7983ADE55B35FEC138A;                // 0x0041   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SSkillBehaviorCue.SSkillBehaviorCue
/// Size: 0x0009 (9 bytes) (0x000000 - 0x000009) align 8 pad: 0x0001
#pragma pack(push, 0x1)
struct FSSkillBehaviorCue
{ 
	int64_t                                            CueId_12_E1264B954C05799310C2CA8F2AA41295;                  // 0x0000   (0x0008)  
	bool                                               Stop_8_C760AE4F44AC5EA2E83EE287AC1E2986;                    // 0x0008   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SSkillBehaviorBullet.SSkillBehaviorBullet
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 8 pad: 0x0000
struct FSSkillBehaviorBullet
{ 
	FString                                            bulletRowName_15_E1264B954C05799310C2CA8F2AA41295;          // 0x0000   (0x0010)  
	int32_t                                            bulletCount_17_C760AE4F44AC5EA2E83EE287AC1E2986;            // 0x0010   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0014   (0x0004)  MISSED
	FString                                            BlackboardKey_20_7646422D4796E9134AE08E984D1F68A9;          // 0x0018   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/Camera/SCameraModifier_Condition.SCameraModifier_Condition
/// Size: 0x0054 (84 bytes) (0x000000 - 0x000054) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSCameraModifier_Condition
{ 
	TEnumAsByte<ECameraModifyConditionType>            ConditionType_2_E0F00BA5468BDB9A8C3CF4AE18A8BF08;           // 0x0000   (0x0001)  
	bool                                               AnyTag_39_0ACABC6D492EBAE1BCB46F9BD0EBB013;                 // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0002   (0x0006)  MISSED
	FGameplayTagContainer                              TagToCheck_40_3C2B224D4B7C9665BBA904B77C8345A1;             // 0x0008   (0x0020)  
	float                                              ArmLengthMin_31_3173378D4E6948F072DBC0A9037F6969;           // 0x0028   (0x0004)  
	float                                              ArmLengthMax_32_892FD925435B4AA5D542CBBD2A975F80;           // 0x002C   (0x0004)  
	float                                              LockTargetDeltaZMin_15_36878833449467F315C532B5A0886D43;    // 0x0030   (0x0004)  
	float                                              LockTargetDeltaZMax_17_2EA446FB4C448A61A53F56BC29C87A15;    // 0x0034   (0x0004)  
	float                                              LockTargetDeltaYawMin_19_1ACE0BEB4A4E368EDFF90B8C492CE2A1;  // 0x0038   (0x0004)  
	float                                              LockTargetDeltaYawMax_21_9D83D1F54964E0709E30BFB4AC27EE2E;  // 0x003C   (0x0004)  
	float                                              LockTargetDeltaPitchMin_23_979B0A624172114862F88F9C19E7B0BD; // 0x0040   (0x0004)  
	float                                              LockTargetDeltaPitchMax_25_578EC5914A83D5B66426AA82F2D47B0B; // 0x0044   (0x0004)  
	bool                                               Reverse_34_F69E18214C8243456B820E800D538172;                // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0049   (0x0003)  MISSED
	float                                              MinLockDistance_46_10CED90B4FEB788CDCFFE08B33AA2C8C;        // 0x004C   (0x0004)  
	float                                              MaxLockDistance_45_75B83DDC40FE14620EAB08A1FFF59168;        // 0x0050   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/Camera/SSequenceCamera_Settings.SSequenceCamera_Settings
/// Size: 0x002C (44 bytes) (0x000000 - 0x00002C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSSequenceCamera_Settings
{ 
	float                                              BlendInTime_2_50F2599845E2A9F7984AB6BD60A09C9C;             // 0x0000   (0x0004)  
	float                                              BlendOutTime_4_B229F83544CCA82D68E7B9867CC519D0;            // 0x0004   (0x0004)  
	class ULevelSequence*                              CameraSequence_11_EA0F02DF4948AFF0A951AB8E0F790CEC;         // 0x0008   (0x0008)  
	bool                                               IsHideHud_13_3FD8AC824B783C3AC1386394935251D1;              // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0011   (0x0007)  MISSED
	SDK_UNDEFINED(16,1047) /* TArray<TEnumAsByte<EBattleUIChild>> */ __um(VisibleChild_26_E1BC75D64F4C322DD3D258A5F6B6F888); // 0x0018   (0x0010)  
	float                                              HideHudTime_28_D37870A24D62DBDE4DBCD593374C8C9B;            // 0x0028   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SSkillBehaviorAction.SSkillBehaviorAction
/// Size: 0x01FA (506 bytes) (0x000000 - 0x0001FA) align 8 pad: 0x0002
#pragma pack(push, 0x1)
struct FSSkillBehaviorAction
{ 
	TEnumAsByte<ESkillBehaviorActionType>              ActionType_19_928EDB4F42F86E100915608112580A79;             // 0x0000   (0x0001)  
	TEnumAsByte<ESkillBehaviorLocationType>            LocationType_189_529AE283410C2E1005CB1F87D7127A4D;          // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0002   (0x0006)  MISSED
	FString                                            BlackboardKey_209_F7A2DF3E49A071728CEDCDAC40CC9A37;         // 0x0008   (0x0010)  
	TEnumAsByte<ESkillBehaviorLocationForwardType>     LocationForwardType_191_B83ADEED485C283B0510A68E10C7852F;   // 0x0018   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0019   (0x0003)  MISSED
	FVector                                            LocationOffset_108_BA50F7AA4075F430C69C30A161E79A59;        // 0x001C   (0x000C)  
	bool                                               Restrict_95_C2990E2B43935300EFE0DF8F424BEFF3;               // 0x0028   (0x0001)  
	TEnumAsByte<ESkillBehaviorRestrictType>            RestrictType_98_D0DCBBB94CD417F01441E6B6C6FF581C;           // 0x0029   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x002A   (0x0002)  MISSED
	int32_t                                            RestrictDistance_101_FFF667624EBD7B985E81BA99F7817192;      // 0x002C   (0x0004)  
	bool                                               BestSpot_104_D24BFD95459541F3CFCC6BBA59927536;              // 0x0030   (0x0001)  
	TEnumAsByte<ESkillBehaviorRotationType>            RotationType_196_62E567E44622E8EE1AA49397199ACA60;          // 0x0031   (0x0001)  
	unsigned char                                      UnknownData03_6[0x2];                                       // 0x0032   (0x0002)  MISSED
	float                                              DirectionOffset_111_523AE48A41BFB39B830684B870FF2CAE;       // 0x0034   (0x0004)  
	TArray<FSSkillBehaviorCue>                         Cues_76_2D918BA24A0CA641D7BBF7BD13E08398;                   // 0x0038   (0x0010)  
	TArray<FSSkillBehaviorBullet>                      Bullets_77_D4BBB46C47AE6F88D881F9ADA9156FFA;                // 0x0048   (0x0010)  
	FGameplayTag                                       Tag_120_68C740484932F7D3DDAC2FAAFE60FCFC;                   // 0x0058   (0x000C)  
	float                                              Duration_123_E3B2684B40F4575A565A0A90837D76E2;              // 0x0064   (0x0004)  
	float                                              BlendInTime_125_8B2D7D7D4C3A11F601631E811D4639E3;           // 0x0068   (0x0004)  
	float                                              BlendOutTime_127_3F28F38D488982760674879A821AA054;          // 0x006C   (0x0004)  
	float                                              BreakBlendOutTime_221_2497E8FB47E32B8788CC63BEC8061D3F;     // 0x0070   (0x0004)  
	TEnumAsByte<ECameraAnsEffectiveClientType>         CameraEffectiveClientType_229_51C02ABD4110AE58BB4FC3AC2647F39E; // 0x0074   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x0075   (0x0003)  MISSED
	TArray<FSCameraModifier_Condition>                 CameraModifierConditions_228_BA7966AF4EFF27AF382884AAA620E601; // 0x0078   (0x0010)  
	FSCameraModifier_Settings                          CameraModifierSettings_131_24F3A807485EF77178D294A1DE455488; // 0x0088   (0x00E8)  
	FSSequenceCamera_Settings                          CameraSequenceSettings_184_B0C9DEF24C35C77F696B6D90D53C8554; // 0x0170   (0x0030)  
	bool                                               ResetLockOnCamera_138_047F77FB4E4D9FAB90A871861BFC5696;     // 0x01A0   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0x01A1   (0x0003)  MISSED
	FRotator                                           AdditiveRotation_141_55E8256C46827D1642FDCD9D14854589;      // 0x01A4   (0x000C)  
	FName                                              CameraAttachSocket_185_10D4FB3A459032757A89FD9BA96C1A83;    // 0x01B0   (0x000C)  
	FName                                              CameraDetectSocket_186_64C9856C4917F5C7D921E09772835BD3;    // 0x01BC   (0x000C)  
	float                                              ExtraDetectSphereRadius_149_160C5A3F4AD2C8B136350BADC5D3C9FB; // 0x01C8   (0x0004)  
	FVector                                            ExtraSphereLocation_152_6C303A16434283376C250A88F7B988AB;   // 0x01CC   (0x000C)  
	bool                                               IsShowExtraSphere_155_50E2906841D692145464899F7C5EA736;     // 0x01D8   (0x0001)  
	TEnumAsByte<EMovementMode>                         BeginMovementMode_187_D1BF07234A6B80DB9D19BDA7C643891A;     // 0x01D9   (0x0001)  
	TEnumAsByte<EMovementMode>                         EndMovementMode_160_0FA7DBA048F42DB50D468EB52506E1DB;       // 0x01DA   (0x0001)  
	TEnumAsByte<ECollisionResponse>                    CollisionResponse_163_0015C44A414FFD53174E3CB6A9D62D0F;     // 0x01DB   (0x0001)  
	TEnumAsByte<ECollisionChannel>                     CollisionChannel_166_2949B1CD400718236C2A858C6641A6F8;      // 0x01DC   (0x0001)  
	bool                                               CollisionRestore_169_E0018CC746C17607B0334EBC40C5EE00;      // 0x01DD   (0x0001)  
	unsigned char                                      UnknownData06_6[0x2];                                       // 0x01DE   (0x0002)  MISSED
	int32_t                                            FollowIndex_174_4B2308594A0BC5860E4681B75D818114;           // 0x01E0   (0x0004)  
	int32_t                                            SummonSkillId_181_1FA5575B40D0B30D536CF8BE1D3F4ED3;         // 0x01E4   (0x0004)  
	bool                                               StopSummonSkill_182_448527CA436CE3C791BBB0923C802CD7;       // 0x01E8   (0x0001)  
	TEnumAsByte<ESkillBehaviorBestSpotType>            Strategy_206_364E8199461F866DA1E738B909AF9BA3;              // 0x01E9   (0x0001)  
	bool                                               DebugTrace_198_772A39284872AB2CF44366AE8AD28728;            // 0x01EA   (0x0001)  
	unsigned char                                      UnknownData07_6[0x1];                                       // 0x01EB   (0x0001)  MISSED
	int32_t                                            Navigation_201_3CAB915C492DDD5D14DC38A6527C52D1;            // 0x01EC   (0x0004)  
	int64_t                                            BuffId_215_FC5579E6440CA752BF0A20A3D0291FCF;                // 0x01F0   (0x0008)  
	TEnumAsByte<ESkillBehaviorBuffTargetType>          BuffTarget_218_52829D6E4FDD50520D92D6BB2D3A0613;            // 0x01F8   (0x0001)  
	bool                                               Add_211_548FB33648C85E653FEA8A939D97D296;                   // 0x01F9   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SSkillBehavior.SSkillBehavior
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 pad: 0x0000
struct FSSkillBehavior
{ 
	TArray<FSSkillBehaviorCondition>                   SkillBehaviorConditionGroup_23_D256B3E54F0444CCB6BA3B977B371542; // 0x0000   (0x0010)  
	TArray<FSSkillBehaviorAction>                      SkillBehaviorActionGroup_20_E7E8941646BF84E137B075AD36D96317; // 0x0010   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SSkillTarget.SSkillTarget
/// Size: 0x000A (10 bytes) (0x000000 - 0x00000A) align 4 pad: 0x0002
#pragma pack(push, 0x1)
struct FSSkillTarget
{ 
	int32_t                                            LockOnConfigId_13_9240CDCD4A7C75F715B64899EE8F2DC1;         // 0x0000   (0x0004)  
	bool                                               InheritTarget_33_297ADAAB45466C8262E9EBBC841AE6C1;          // 0x0004   (0x0001)  
	TEnumAsByte<ESkillTargetDirection>                 SkillTargetDirection_30_48CCD6FC436518E7C0D58F8CA1563E81;   // 0x0005   (0x0001)  
	TEnumAsByte<ESkillTargetPriority>                  SkillTargetPriority_32_6503AE024BF0D5CB5D542B84F997BBB4;    // 0x0006   (0x0001)  
	bool                                               ShowTarget_28_4A5D9B40438221B0FC28ACA3361C6C06;             // 0x0007   (0x0001)  
	bool                                               HateOrLockOnChanged_21_D264B269445DCEAE86F9BEAE40EE18CA;    // 0x0008   (0x0001)  
	bool                                               TargetDied_23_07DBB3684ACF90FA21FB5EB88B580C67;             // 0x0009   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SSkillCooldownInfo.SSkillCooldownInfo
/// Size: 0x002A (42 bytes) (0x000000 - 0x00002A) align 4 pad: 0x0002
#pragma pack(push, 0x1)
struct FSSkillCooldownInfo
{ 
	float                                              CdTime_17_53AFB6144F31B1FC690BC4B495391CEC;                 // 0x0000   (0x0004)  
	float                                              CdDelay_18_88077BCA45D7C83C6F9595BE90E19E91;                // 0x0004   (0x0004)  
	bool                                               IsShareAllCdSkill_16_0490446C45E16F9607CA3DA11969A16E;      // 0x0008   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0009   (0x0003)  MISSED
	int32_t                                            MaxCount_21_BE52BC1A408FD925BE8848A76E57F08D;               // 0x000C   (0x0004)  
	int32_t                                            ShareGroupId_23_F1F57AFA439C48D1F17446B85631B005;           // 0x0010   (0x0004)  
	int32_t                                            SectionCount_31_F71122154E43E38C3F673ABA2F018785;           // 0x0014   (0x0004)  
	int32_t                                            SectionRemaining_32_B8FF4E36428915E3484F2FBF5FC484ED;       // 0x0018   (0x0004)  
	int32_t                                            NextSkillId_41_F3D3171641CEFF1E81E768AE04F83E49;            // 0x001C   (0x0004)  
	float                                              StartTime_26_C726665545379542EF1611A3601D3796;              // 0x0020   (0x0004)  
	float                                              StopTime_35_11B3875946A9CBDFB1443F8B5AC1E367;               // 0x0024   (0x0004)  
	bool                                               IsReset_38_CA73D145447E07AA5E4619828AF561CD;                // 0x0028   (0x0001)  
	bool                                               IsResetOnChangeRole_43_4E270B634727E782FF05A2897DEBE424;    // 0x0029   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SSkillInfo.SSkillInfo
/// Size: 0x0148 (328 bytes) (0x000000 - 0x000148) align 8 pad: 0x0000
struct FSSkillInfo
{ 
	FName                                              SkillName_236_CC31932A4D72CB83AD07F49CAA66531D;             // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FSoftObjectPath                                    SkillIcon_197_2BF3BB3144DFB00F4B135CA6A25894FD;             // 0x0010   (0x0020)  
	TEnumAsByte<ESkillMode>                            SkillMode_263_700294234859C1051A2CCABFD9291CBF;             // 0x0030   (0x0001)  
	TEnumAsByte<ESkillType>                            LimitCountMode_237_5062339C40E55400FCD3BDB940574865;        // 0x0031   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x0032   (0x0006)  MISSED
	TArray<FSSkillBehavior>                            SkillBehaviorGroup_271_092A9D7D4439AC3AB24993A6F3C3C7FD;    // 0x0038   (0x0010)  
	FSoftClassPath                                     SkillGA_258_DBD75290442DE8B7E7E1A8BA76125F7F;               // 0x0048   (0x0020)  
	TArray<FGameplayTag>                               SkillTag_238_9E35A66145662BAC6D89D2A9CE0F4CB2;              // 0x0068   (0x0010)  
	TArray<FSoftObjectPath>                            Animations_206_AD61DB794C2F606B7B16D789BAFD52F0;            // 0x0078   (0x0010)  
	int32_t                                            InterruptLevel_239_E071C85A4A9B78F43079578DD4EF5BBE;        // 0x0088   (0x0004)  
	FSSkillTarget                                      SkillTarget_283_795C9ACB4377D1401D3CC3977C1FB322;           // 0x008C   (0x000C)  
	float                                              StrengthCost_241_8DDC6A4643C65E8CA4B5A48AA65C0657;          // 0x0098   (0x0004)  
	FSSkillCooldownInfo                                CooldownConfig_243_CB1459A242DF34AE3F92FA9072DD2B39;        // 0x009C   (0x002C)  
	bool                                               WalkOffLedge_247_48F816A340444353040EA08425D3DF62;          // 0x00C8   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x00C9   (0x0003)  MISSED
	float                                              ToughRatio_248_505390BC44202CA0730CAEA4B2A9D438;            // 0x00CC   (0x0004)  
	int32_t                                            GroupId_256_755BC9804168DB1BC77213BE3371F0D9;               // 0x00D0   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x00D4   (0x0004)  MISSED
	TArray<FString>                                    MontagePaths_209_837F67CB4D4945ECB86D22971E247382;          // 0x00D8   (0x0010)  
	TEnumAsByte<ESkillLoadType>                        SkillLoadType_273_989019264CF5EE5DD6F4EFAA44BB700D;         // 0x00E8   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x00E9   (0x0007)  MISSED
	TArray<int64_t>                                    SkillStartBuff_250_24A0EF3F4A3AA940A64D57AD87670B32;        // 0x00F0   (0x0010)  
	TArray<int64_t>                                    SkillEndBuff_251_A5B793A745BC193DD976889B018E090E;          // 0x0100   (0x0010)  
	TEnumAsByte<ESkillGenre>                           SkillGenre_252_C61201B24724AD2CF4129EBE6978DD63;            // 0x0110   (0x0001)  
	bool                                               IsFullBodySkill_257_87A2542343A253D2903D5396668A9A82;       // 0x0111   (0x0001)  
	unsigned char                                      UnknownData05_6[0x6];                                       // 0x0112   (0x0006)  MISSED
	TArray<int64_t>                                    SkillBuff_253_04317C1041148C5E5CFED8B6B60BF7ED;             // 0x0118   (0x0010)  
	bool                                               AutonomouslyBySimulate_214_FE883CA049FE760F8726F88E8FFDC7CF; // 0x0128   (0x0001)  
	bool                                               OverrideHit_215_ABBDBA0E47F33607DBF5B8B561ED43CA;           // 0x0129   (0x0001)  
	unsigned char                                      UnknownData06_6[0x2];                                       // 0x012A   (0x0002)  MISSED
	float                                              MoveControllerTime_219_4EFBCF714CDDCFEA57C75CBB68F35855;    // 0x012C   (0x0004)  
	float                                              ImmuneFallDamageTime_254_30E9B0B44896C7E042215E9157EAD285;  // 0x0130   (0x0004)  
	TEnumAsByte<ESkillOverrideType>                    OverrideType_276_9E4DE49042E6EB8A684440B4F78E1CBF;          // 0x0134   (0x0001)  
	unsigned char                                      UnknownData07_6[0x3];                                       // 0x0135   (0x0003)  MISSED
	TArray<FSoftObjectPath>                            ExportSpecialAnim_287_9181271C401FEB3D8A026C9ED3DA5752;     // 0x0138   (0x0010)  
};

/// Class /Game/Aki/Character/BaseCharacter/Abilities/GA/GA_Base.GA_Base_C
/// Size: 0x0164 (356 bytes) (0x0003C8 - 0x00052C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_Base_C : public UBaseGameplayAbility
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x03C8   (0x0008)  
	FSSkillInfo                                        S_MR_b;                                                     // 0x03D0   (0x0148)  
	FString                                            S_MR_b_;                                                    // 0x0518   (0x0010)  
	int32_t                                            skillId;                                                    // 0x0528   (0x0004)  
	// void ApplyBuffWithLevel(int64_t BuffID);                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AddTag(FGameplayTag Tag);                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void RemoveTag(FGameplayTag Tag);                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void RemoveBuff(int64_t BuffID);                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _4O_uir___S(class ATsBaseCharacter_C*& __, bool& _f_T_b);                                                           // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void __n___r_(class ATsBaseCharacter_C* __, FVector Velocity, float DeltaSeconds, FString Context);                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __n___(class ATsBaseCharacter_C* __, FVector Location, FRotator Rotator, FString Context);                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _S_R__r_(class ATsBaseCharacter_C* __, FVector Location, bool sweep, bool Teleport, FString Context);               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __n___r_M(class ATsBaseCharacter_C* __, FVector Location, FRotator Rotation, bool sweep, FString Context);          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __n___r_P(class ATsBaseCharacter_C* __, TEnumAsByte<EPawnChannel> pawnChannel, TEnumAsByte<ECollisionResponse> NewResponse); // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ____a__(class ATsBaseCharacter_C* Target, FGameplayTag Tag);                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __n_P_(class ATsBaseCharacter_C* Attacker, FString Key, int32_t TargetId);                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _u_b();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _O9ePg(TScriptInterface<BlueprintGeneratedClass> entity, bool IsGroup, class UObject* Pg__);                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __n____gR(class ATsBaseCharacter_C* __, FString Key, FRotator _);                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ();                                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __eQ_w(bool _w_Q_, TEnumAsByte<EAimViewState> _w_Q__, bool isWalk);                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___W_gSO___W(float _e_l_, float _e_l_1, float _v_h, float _v_h1, FVector w_, FVector __, FVector& _T_);             // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ___S_v_hck_(class AActor* _v_hA, float _T_T, FVector& _T_, bool& _x_d);                                             // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S_v_h0R_(class ATsBaseCharacter_C* _v_hA, FVector __, FVector& _T_, bool& _x_d);                                 // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___________S_v(class AActor* _v_hA, float _e, float _N, float __, FVector& _T_, bool& _x_d);                        // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void __n__c6e_TS(bool skillAcceptInput);                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _O9eS_MR_b(float Priority);                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _yd__(int32_t _S_U_, int32_t _yd__S_);                                                                              // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _9hncP_9___SO(int32_t P_9_, bool isSummonChildBullet);                                                              // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___S__(class ATsBaseCharacter_C* _v, float& RoleID);                                                                // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S8n_b_(class UBP_EventManager_C*& _N_N_);                                                                        // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S___gS(class ATsBaseCharacter_C* __, FString Key, FString& String);                                              // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void __n____gS(class ATsBaseCharacter_C* __, FString Key, FString _);                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void P_9_(FString P_9_, float _Q__);                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___SS_MRG(FString& S_MR_b_);                                                                                        // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ___SS_MR_d_O_(class ATsBaseCharacter_C*& S_MR);                                                                     // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void __n____gV(class ATsBaseCharacter_C* __, FString Key, FVector _);                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___S___gV(class ATsBaseCharacter_C* __, FString Key, FVector& _);                                                   // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void __n____gE(class ATsBaseCharacter_C* __, FString Key, int32_t _);                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___S___gE(class ATsBaseCharacter_C* __, FString Key, int32_t& _);                                                   // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _g__yr__(FName P_9_, int32_t& P_9_1);                                                                               // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ___SS_MR(float& SpeedRatio);                                                                                        // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ____I(int64_t BuffID, bool enforceOnGoingCheck, int32_t& B_);                                                       // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _e_l___(FGameplayTag Tag);                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// int32_t _R__v__(class UObject* D, FTransform Transform, bool AttachToCharacter);                                         // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float ___S_N(class AActor* _v_, class AActor* _v_1);                                                                     // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _S__(class AActor* _S__, FGameplayTag _N_NT);                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___g__(class UGameplayTask* _N, bool& _g);                                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void __n_S_MR_b(int32_t Sb_e);                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___S0Wb(FVector _c_, float _m, FVector& _0Wb_, bool& _f_T);                                                         // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S_v_hT(class ATsBaseCharacter_C* _v, FGameplayTag Tag, int32_t& B_);                                             // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void b__T(class ATsBaseCharacter_C* _v, class AActor* b__T);                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __n__b(class AActor* SkillTarget);                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___S___g_c__K(class ATsBaseCharacter_C* __, FString Key, class ATsBaseCharacter_C*& __1, bool& _f_T_b);             // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _9hnc__SOI(int32_t __SO, class ATsBaseCharacter_C*& __, bool& _f_T_b);                                              // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ___S__(class ATsBaseCharacter_C* __, int32_t& __SO);                                                                // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void __n____g(class ATsBaseCharacter_C* __, FString Key, int64_t _);                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___S___g(class ATsBaseCharacter_C* __, FString Key, int64_t& _);                                                    // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void __n____(class ATsBaseCharacter_C* __, FString Key, int32_t _);                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _f_T(bool& T_);                                                                                                     // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _S(int32_t M_n_h, FTransform _Q_u, bool& _f_T, class ATsBaseCharacter_C*& _S_, int32_t& __SO);                      // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _O_u(class ATsBaseCharacter_C* ___, FName _b__, class AActor* _b__1, FName Socket, bool& _f_T_b);                   // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _R__(class ATsBaseCharacter_C* _e_, FString P_9_, FTransform _R_Y, FVector _v_, int32_t& P_);                       // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void __n_Pg(class ATsBaseCharacter_C* __n_, class UPD_CharacterControllerData_C* Pg__, int32_t& Handle);                 // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ____(int64_t BuffID, int32_t _yd_, class ATsBaseCharacter_C* _v);                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___SC(class ATsBaseCharacter_C* _v, int32_t ____, float& ___);                                                      // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___SB(class ATsBaseCharacter_C* _v, int32_t ____, float& ___);                                                      // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ____T(FGameplayTag Tag);                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __n___S__(class UPrimitiveComponent* _v, TEnumAsByte<ECollisionChannel> Channel, TEnumAsByte<ECollisionResponse> NewResponse); // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __n___(FVector __);                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _f_T_b_g(class ATsBaseCharacter_C* _v, FGameplayTagContainer _h, bool& _f_T);                                       // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S_b__(bool s_b_, float& __);                                                                                     // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S_b(class ATsBaseCharacter_C* _v, class AActor*& _b__);                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___SA(class UBaseAbilitySystemComponent*& AbilitySystemComponent);                                                  // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool K2_CanActivateAbility(FGameplayAbilityActorInfo ActorInfo, FGameplayTagContainer& RelevantTags);                    // [0x25a7960] Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// void ___SS_MR_b(FString& S_MR_b_);                                                                                       // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S_(class ATsBaseCharacter_C*& _e_);                                                                              // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Base(int32_t EntryPoint);                                                                       // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/Abilities/GA/GA_Passive.Ga_Passive_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGa_Passive_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_Ga_Passive(int32_t EntryPoint);                                                                    // [0x25a7960] Final                
};

/// Class /Game/Aki/Render/RuntimeBP/Scene/KuroProjectilePathTracer/BP_KuroProjectilePathTracer.BP_KuroProjectilePathTracer_C
/// Size: 0x00B0 (176 bytes) (0x0002A8 - 0x000358) align 8 pad: 0x0000
class ABP_KuroProjectilePathTracer_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class UDecalComponent*                             Decal;                                                      // 0x02B0   (0x0008)  
	class UHierarchicalInstancedStaticMeshComponent*   HierarchicalInstancedStaticMesh;                            // 0x02B8   (0x0008)  
	class USplineComponent*                            Spline;                                                     // 0x02C0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C8   (0x0008)  
	bool                                               Visible;                                                    // 0x02D0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02D1   (0x0007)  MISSED
	class UStaticMesh*                                 DistanceRecordMesh;                                         // 0x02D8   (0x0008)  
	float                                              DisplayDistancePerRecord;                                   // 0x02E0   (0x0004)  
	int32_t                                            MaxPlaceCount;                                              // 0x02E4   (0x0004)  
	float                                              RecordDeltaAngle;                                           // 0x02E8   (0x0004)  
	float                                              AnimationDelta;                                             // 0x02EC   (0x0004)  
	float                                              AnimationSpeed;                                             // 0x02F0   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x02F4   (0x0004)  MISSED
	TArray<FVector>                                    CachedPathPositions;                                        // 0x02F8   (0x0010)  
	FVector                                            CachedLastTraceDestination;                                 // 0x0308   (0x000C)  
	bool                                               CachedReturnValue;                                          // 0x0314   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0315   (0x0003)  MISSED
	FVector                                            CachedImpactPoint;                                          // 0x0318   (0x000C)  
	FVector                                            CachedImpactNormal;                                         // 0x0324   (0x000C)  
	bool                                               CachedEnable;                                               // 0x0330   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0331   (0x0003)  MISSED
	float                                              TargetDeltaAngle;                                           // 0x0334   (0x0004)  
	float                                              TargetSize;                                                 // 0x0338   (0x0004)  
	float                                              TargetThreshold;                                            // 0x033C   (0x0004)  
	class UPD_KuroProjectileAsset_C*                   KuroProjectileAsset;                                        // 0x0340   (0x0008)  
	float                                              RecordSize;                                                 // 0x0348   (0x0004)  
	bool                                               UseTargetDecal;                                             // 0x034C   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x034D   (0x0003)  MISSED
	class UMaterialInstance*                           TargetDecalMat;                                             // 0x0350   (0x0008)  
	// void UpdateDataAsset();                                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetPredictProjectileInfo(bool ReturnValue, TArray<FVector>& OutPathPosition, FVector OutLastTraceDestination, FHitResult OutHit); // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdateDisplay();                                                                                                    // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ClearCache();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetVisible(bool IsVisible);                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_KuroProjectilePathTracer(int32_t EntryPoint);                                                   // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/BaseCharacter/BPI_Animation.BPI_Animation_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPI_Animation_C : public UInterface
{ 
public:
	// void InterfaceManipulateInteractDirection(float __);                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void InterfaceFixHookDirect(FVector Offset);                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void InterfaceSimulateJump(float Speed);                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ClimbDash();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void InterfaceJumpPressed(float& Speed);                                                                                 // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AI/Controller/TsAiController.TsAiController_C
/// Size: 0x0020 (32 bytes) (0x0003B8 - 0x0003D8) align 8 pad: 0x0000
class ATsAiController_C : public AKuroAIController
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x03B8   (0x0008)  
	class UBehaviorTree*                               BehaviorTree;                                               // 0x03C0   (0x0008)  
	int32_t                                            DebugDraw;                                                  // 0x03C8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x03CC   (0x0004)  MISSED
	class UKuroStateMachineGroup*                      StateMachineGroup;                                          // 0x03D0   (0x0008)  
	// void ChangeDebugDraw();                                                                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void GetDebugStateMachine(TArray<FText>& Output);                                                                        // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _Rbc_r_(TArray<FString>& States);                                                                                   // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool _h_g_r_(TArray<FString>& States);                                                                                   // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _r___(TEnumAsByte<ECharacterState> oldState, TEnumAsByte<ECharacterState> NewState, bool IsAutonomousProxy);        // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ___S_c();                                                                                                           // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool _y_R();                                                                                                             // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool ____();                                                                                                             // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void StartCooldownTimer(int32_t ID, float Duration);                                                                     // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void InitCooldownEvent(int32_t ID, class UKuroBooleanEventBinder* eventBinder);                                          // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetCoolDown(int32_t ID, float CD);                                                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// float GetCoolDownRemainTime(int32_t ID);                                                                                 // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetCoolDownDone(int32_t ID);                                                                                        // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetAiAlertConfig(FString configId);                                                                                 // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddAlertEventBinder(class UKuroBooleanEventBinder* eventBinder);                                                    // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetAiHateConfig(FString configId);                                                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddSceneItemDestroyEventBinder(float Distance, class UKuroActorEventBinder* eventBinder);                           // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetPerceptionEventState(bool includeFriend, bool includeEnemy, bool includeNeutral);                                // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddHateOutRangeEventBinder(class UKuroPerceptionEventBinder* Handler);                                              // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddPerceptionEventBinder(class UKuroPerceptionEventBinder* Handler);                                                // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddHateEventBinder(class UKuroPerceptionEventBinder* handler1);                                                     // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void EnableAiSenseByType(int32_t Type, bool Enable);                                                                     // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddOrRemoveAiSense(int32_t aiSenseId, bool Add);                                                                    // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetAiSenseEnable(int32_t Index, bool Enable);                                                                       // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void LogReport(int32_t logId);                                                                                           // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetAiEnable(bool Enable, FString Key);                                                                              // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AicRemoveTag(FGameplayTag Tag);                                                                                     // [0x13db470] Native|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void AicAddTag(FGameplayTag Tag);                                                                                        // [0x13db470] Native|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void AicRemoveBuff(int64_t BuffID);                                                                                      // [0x13db470] Native|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void AicApplyBuff(int64_t BuffID);                                                                                       // [0x13db470] Native|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void TestChangeAi(FString ID);                                                                                           // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddBattleWanderEndTime(float addTime);                                                                              // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetBattleWanderIndex(int32_t Index);                                                                                // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ClearHatred(int32_t EntityID);                                                                                      // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ChangeHatred(int32_t EntityID, float Rate, float Abs);                                                              // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// FText GetDebugText();                                                                                                    // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnStart();                                                                                                          // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddComplicatedEventBinder(FSAiConditions Conditions, class UKuroBooleanEventBinder* eventBinder);                   // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetBattleWanderTime(float Min, float Max);                                                                          // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddSkillCd(int32_t skillInfoId, float cdAdd);                                                                       // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ActivateSkillGroup(int32_t skillGroupIndex, bool Activate);                                                         // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveDestroyed();                                                                                                 // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsAiController(int32_t EntryPoint);                                                                // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Struct /Game/Aki/Character/Monster/Common/SAiConditions.SAiConditions
/// Size: 0x00B1 (177 bytes) (0x000000 - 0x0000B1) align 8 pad: 0x0001
#pragma pack(push, 0x1)
struct FSAiConditions
{ 
	SDK_UNDEFINED(80,1048) /* TMap<FGameplayTag, FFloatRange> */ __um(Tags_13_97F071C5493C572E35E8B7A8F8D0DD84);   // 0x0000   (0x0050)  
	SDK_UNDEFINED(80,1049) /* TMap<TEnumAsByte<EAttributeType>, FFloatRange> */ __um(Attributes_14_8111FBCE46CB5FD4258D4AB283B3367A); // 0x0050   (0x0050)  
	TArray<FSAiAttributeRate>                          AttributeRates_19_C3DF664E4C1D37C3BACB0991D0314C13;         // 0x00A0   (0x0010)  
	TEnumAsByte<SConditionGroupType>                   Logic_12_50D4930B45AF7BF2FB88A59DD464602F;                  // 0x00B0   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/AI/AIFunctionCommon/AIC_AICommon.AIC_AICommon_C
/// Size: 0x03A4 (932 bytes) (0x0003D8 - 0x00077C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class AAIC_AICommon_C : public ATsAiController_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x03D8   (0x0008)  
	class ATsBaseCharacter_C*                          __ir__;                                                     // 0x03E0   (0x0008)  
	FVector                                            _Q_u;                                                       // 0x03E8   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x03F4   (0x0004)  MISSED
	FSAiConditions                                     L__N_h__L;                                                  // 0x03F8   (0x00B8)  
	FSAiConditions                                     _____a;                                                     // 0x04B0   (0x00B8)  
	FSAiConditions                                     _b_eL__;                                                    // 0x0568   (0x00B8)  
	TArray<class AActor*>                              _Nh__m_R;                                                   // 0x0620   (0x0010)  
	TArray<class AActor*>                              _Nh__Rd_;                                                   // 0x0630   (0x0010)  
	int32_t                                            S_MR_Nh_;                                                   // 0x0640   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0644   (0x0004)  MISSED
	TArray<class AActor*>                              _a_w_m_R;                                                   // 0x0648   (0x0010)  
	TArray<class AActor*>                              _a_w_Rd_;                                                   // 0x0658   (0x0010)  
	int32_t                                            S_MR_a_w;                                                   // 0x0668   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x066C   (0x0004)  MISSED
	TArray<class AActor*>                              _Nh__Y_;                                                    // 0x0670   (0x0010)  
	TArray<class AActor*>                              _Nh__Y_0;                                                   // 0x0680   (0x0010)  
	int32_t                                            _Nh__Y_1;                                                   // 0x0690   (0x0004)  
	int32_t                                            __ir;                                                       // 0x0694   (0x0004)  
	FSAiConditions                                     eQ_b_;                                                      // 0x0698   (0x00B8)  
	TArray<class AActor*>                              _S_W_v_T;                                                   // 0x0750   (0x0010)  
	class AActor*                                      S_MR_N;                                                     // 0x0760   (0x0008)  
	class UKuroRegionDetectComponent*                  _S_W;                                                       // 0x0768   (0x0008)  
	FName                                              _x_d_;                                                      // 0x0770   (0x000C)  
	// void _S_W_v_T(FString _S_W, FDelegateProperty& _N);                                                                      // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _S(FDelegateProperty& bc_N);                                                                                        // [0x25a7960] Private|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void __n__S_W();                                                                                                         // [0x25a7960] Private|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ___S_c();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _r___(TEnumAsByte<ECharacterState> oldState, TEnumAsByte<ECharacterState> NewState, bool IsAutonomousProxy);        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _a_w0R_();                                                                                                          // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void _r___R(class UObject* __, TEnumAsByte<ECharacterState> ___, TEnumAsByte<ECharacterState> _e_, bool _N, class UObject*& __r_, TEnumAsByte<ECharacterState>& ___r_, TEnumAsByte<ECharacterState>& _e_r_, bool& _N_c); // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void OnStart();                                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___uL__(bool bContent);                                                                                             // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void _____a_w(bool bContent);                                                                                            // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ___u_b(bool bContent);                                                                                              // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void _Nh_(TArray<AActor*>& AddActor, TArray<AActor*>& RemoveActor, TArray<int32_t>& RemoveActorIds, int32_t Num);        // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _a_w(TArray<AActor*>& AddActor, TArray<AActor*>& RemoveActor, TArray<int32_t>& RemoveActorIds, int32_t Num);        // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _Nh__(TArray<AActor*>& AddActor, TArray<AActor*>& RemoveActor, TArray<int32_t>& RemoveActorIds, int32_t Num);       // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AicTriggerEvent(FName Name);                                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void eQ_b(bool bContent);                                                                                                // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void _S_W_v();                                                                                                           // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void _O__O(bool bContent);                                                                                               // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_AIC_AICommon(int32_t EntryPoint);                                                                  // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Character/Npc/BP_NpcCombinedMesh.BP_NpcCombinedMesh_C
/// Size: 0x0118 (280 bytes) (0x0002A8 - 0x0003C0) align 8 pad: 0x0000
class ABP_NpcCombinedMesh_C : public AActor
{ 
public:
	class USkeletalMeshComponent*                      Skel_Main;                                                  // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	class UPD_NpcSetupData_C*                          NpcData;                                                    // 0x02B8   (0x0008)  
	bool                                               OriginalSkeletalVisible;                                    // 0x02C0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02C1   (0x0007)  MISSED
	SDK_UNDEFINED(80,1050) /* TMap<FName, FSNpcSetupPartInfo> */ __um(AllSubSkeletalComponents);                   // 0x02C8   (0x0050)  
	class UMaterialInstanceDynamic*                    DIMat;                                                      // 0x0318   (0x0008)  
	class ABP_NpcCombinedMesh_C*                       Target;                                                     // 0x0320   (0x0008)  
	SDK_UNDEFINED(80,1051) /* TMap<FName, TEnumAsByte<EBodyPartName>> */ __um(AllBodyPartName);                    // 0x0328   (0x0050)  
	FLinearColor                                       ColorNPC01;                                                 // 0x0378   (0x0010)  
	FLinearColor                                       ColorNPC02;                                                 // 0x0388   (0x0010)  
	int32_t                                            Forced_LOD;                                                 // 0x0398   (0x0004)  
	FLinearColor                                       SkinColor;                                                  // 0x039C   (0x0010)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x03AC   (0x0004)  MISSED
	TArray<class USkeletalMeshComponent*>              SkelMeshArray;                                              // 0x03B0   (0x0010)  
	// void GetHeadTransform(FTransform InTransform, int32_t Index, FTransform& OutTransform);                                  // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetSkeletonMeshDI(class USkeletalMeshComponent* SKMesh, FName ParamName01, FName ParamName02, TEnumAsByte<EBodyPartName> bodyType, FName SkinColorName); // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetPartMeshComponent(FName Key, TArray<USkeletalMeshComponent*>& Comps);                                            // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetMainMeshComponent(class USkeletalMeshComponent*& SkeletalMeshComp);                                              // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AddSkeletalComponent(FName Name, class USkeletalMeshComponent* skeletalComp);                                       // [0x25a7960] Private|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void SetupSkeletalMeshComponent(class USkeletalMesh* InSkeletalMesh, TEnumAsByte<EBodyPartName> bodyType, bool& Suc, class USkeletalMeshComponent*& skeletalComp); // [0x25a7960] Private|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetWaistTransform(FTransform InTransform, int32_t Index, FTransform& OutTransform);                                 // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void GetBackTransform(FTransform InTransform, int32_t Index, FTransform& OutTransform);                                  // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void GetLegTransform(FTransform InTransform, int32_t Index, FTransform& OutTransform);                                   // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void GetWeaponTransform(FTransform InTransform, int32_t Index, FTransform& OutTransform);                                // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void GetArmTransform(FTransform InTransform, int32_t Index, FTransform& OutTransform);                                   // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetupSocket(FName SocketName, FTransform Transform, class USkeletalMesh* SkeletalMesh, bool& Suc, class USkeletalMeshComponent*& skeletalComp); // [0x25a7960] Private|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetupSockets();                                                                                                     // [0x25a7960] Private|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void SetupSkeletalMeshComponents(bool& Suc);                                                                             // [0x25a7960] Private|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ResetNpcMesh();                                                                                                     // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void SetupNpcMesh(class UPD_NpcSetupData_C* Data, bool bIgnoreSockets, bool& IsSuc, TArray<USkeletalMeshComponent*>& SkleMain); // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Sequence/Seq_BP/BP_SeqNPC.BP_SeqNPC_C
/// Size: 0x0024 (36 bytes) (0x0003C0 - 0x0003E4) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ABP_SeqNPC_C : public ABP_NpcCombinedMesh_C
{ 
public:
	class UABPC_Seq_Body_V2_C*                         ABPC_Body_V2;                                               // 0x03C0   (0x0008)  
	class UPD_NpcSetupData_C*                          NPC_DA;                                                     // 0x03C8   (0x0008)  
	int32_t                                            MaxLOD;                                                     // 0x03D0   (0x0004)  
	int32_t                                            LODBias;                                                    // 0x03D4   (0x0004)  
	bool                                               IgnoreSockets;                                              // 0x03D8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x03D9   (0x0003)  MISSED
	int32_t                                            TalkID;                                                     // 0x03DC   (0x0004)  
	int32_t                                            TalkID_SP;                                                  // 0x03E0   (0x0004)  
	// void GetABPC_Body_V2(class UABPC_Seq_Body_V2_C*& ABPC_Body_V2);                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetAnimDataFloat(TArray<FNamedCurveValue>& FloatCurveData);                                                         // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetAnimDataVector(TMap<FName, FVector>& VectorCurveData);                                                           // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// TArray<FName> GetSupportGroupNames();                                                                                    // [0x25a7960] Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool SetAnimDataFloat(TArray<FNamedCurveValue>& FloatCurveData);                                                         // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool SetAnimDataVector(TMap<FName, FVector>& VectorCurveData);                                                           // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Struct /Game/Aki/Render/RuntimeBP/Character/Npc/SNpcHookPart.SNpcHookPart
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 16 pad: 0x0000
struct FSNpcHookPart
{ 
	class USkeletalMesh*                               Mesh_5_5771A2684471ED0CB70046B15B01AEB1;                    // 0x0000   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0008   (0x0008)  MISSED
	FTransform                                         Transform_4_B8BFEFDC4ADC550DB69D1B8E3C2C84E4;               // 0x0010   (0x0030)  
};

/// Class /Game/Aki/Render/RuntimeBP/Character/Npc/PD_NpcSetupData.PD_NpcSetupData_C
/// Size: 0x0124 (292 bytes) (0x000038 - 0x00015C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UPD_NpcSetupData_C : public UPrimaryDataAsset
{ 
public:
	class USkeletalMesh*                               Skel_Hair;                                                  // 0x0038   (0x0008)  
	FColor                                             Skel_Hair_Color;                                            // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
	class USkeletalMesh*                               Skel_Face;                                                  // 0x0048   (0x0008)  
	class USkeletalMesh*                               Skel_BodyUp;                                                // 0x0050   (0x0008)  
	FColor                                             Skel_BodyUp_Color;                                          // 0x0058   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x005C   (0x0004)  MISSED
	class USkeletalMesh*                               Skel_BodyDown;                                              // 0x0060   (0x0008)  
	FColor                                             Skel_BodyDown_Color;                                        // 0x0068   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x006C   (0x0004)  MISSED
	class USkeletalMesh*                               Skel_Body;                                                  // 0x0070   (0x0008)  
	bool                                               bDyeColor;                                                  // 0x0078   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0079   (0x0003)  MISSED
	FLinearColor                                       SkinDyeColor;                                               // 0x007C   (0x0010)  
	TEnumAsByte<ENpcSetupType>                         NpcSetupType;                                               // 0x008C   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x008D   (0x0003)  MISSED
	class USkeletalMesh*                               Skel_Main;                                                  // 0x0090   (0x0008)  
	TArray<FSNpcHookPart>                              Hook_Arm;                                                   // 0x0098   (0x0010)  
	FName                                              Hook_Arm_Socket;                                            // 0x00A8   (0x000C)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x00B4   (0x0004)  MISSED
	TArray<FSNpcHookPart>                              Hook_Waist;                                                 // 0x00B8   (0x0010)  
	FName                                              Hook_Waist_Socket;                                          // 0x00C8   (0x000C)  
	unsigned char                                      UnknownData06_6[0x4];                                       // 0x00D4   (0x0004)  MISSED
	TArray<FSNpcHookPart>                              Hook_Back;                                                  // 0x00D8   (0x0010)  
	FName                                              Hook_Back_Socket;                                           // 0x00E8   (0x000C)  
	unsigned char                                      UnknownData07_6[0x4];                                       // 0x00F4   (0x0004)  MISSED
	TArray<FSNpcHookPart>                              Hook_Weapon;                                                // 0x00F8   (0x0010)  
	FName                                              Hook_Weapon_Socket;                                         // 0x0108   (0x000C)  
	unsigned char                                      UnknownData08_6[0x4];                                       // 0x0114   (0x0004)  MISSED
	TArray<FSNpcHookPart>                              Hook_Leg;                                                   // 0x0118   (0x0010)  
	FName                                              Hook_Leg_Socket;                                            // 0x0128   (0x000C)  
	FColor                                             Body_Dyecolor01;                                            // 0x0134   (0x0004)  
	FColor                                             Body_Dyecolor02;                                            // 0x0138   (0x0004)  
	unsigned char                                      UnknownData09_6[0x4];                                       // 0x013C   (0x0004)  MISSED
	TArray<FSNpcHookPart>                              Hook_Head;                                                  // 0x0140   (0x0010)  
	FName                                              Hook_Head_Socket;                                           // 0x0150   (0x000C)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Core/Fight/ConditionBulletSceneInteraction.ConditionBulletSceneInteraction
/// Size: 0x0038 (56 bytes) (0x000000 - 0x000038) align 8 pad: 0x0000
struct FConditionBulletSceneInteraction
{ 
	float                                              RangeMin_5_DB5CA9FF4E8E2786679B738D8443D0DB;                // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(48,1052) /* TWeakObjectPtr<UBulletSceneInteraction_C*> */ __um(Config_6_7A09FB394DB367C356B6B4AE8310415C); // 0x0008   (0x0030)  
};

/// Class /Game/Aki/Core/Fight/DefaultBulletSceneInteraction.DefaultBulletSceneInteraction_C
/// Size: 0x0010 (16 bytes) (0x000038 - 0x000048) align 8 pad: 0x0000
class UDefaultBulletSceneInteraction_C : public UPrimaryDataAsset
{ 
public:
	TArray<FConditionBulletSceneInteraction>           ConditionConfig;                                            // 0x0038   (0x0010)  
};

/// Class /Game/Aki/Core/Fight/BPL_Fight.BPL_Fight_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPL_Fight_C : public UBlueprintFunctionLibrary
{ 
public:
	// void _S___O__(float __r_1, float __r_2, class UObject* __WorldContext, float& Result);                                   // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// void Rd_Pg(class ATsBaseCharacter_C* __n__, int32_t Handle_, class UObject* __WorldContext);                             // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void __n_Pg(class ATsBaseCharacter_C* __n_, class UPD_CharacterControllerData_C* Pg__, class UObject* __WorldContext, int32_t& Handle); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _O_u(class ATsBaseCharacter_C* _O_, class ATsBaseCharacter_C* _v, int32_t G, FGameplayTagContainer _m_RA, FGameplayTagContainer _m_RG, int32_t B_, float Duration, class UClass* G1, FKuroGameplayParameterContainer G2, class UObject* __WorldContext, FActiveGameplayEffectHandle& ActiveHandle); // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|Const 
	// void ___S_v_hh(FRotator _v_h, FVector _v_h1, float _e, float _N, float __, class UObject* __WorldContext, FVector& PW_); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _____T_(float ______, float ___, class UCurveVector* _T__, class UObject* __WorldContext, FVector& _T_);            // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _____(float _____, float ___, class UCurveFloat* _f, class UObject* __WorldContext, float& _v_);                    // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ____(float Input, class UObject* __WorldContext, float& Output);                                                    // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool ____(class UObject* Context, FVector Start, FVector End, TEnumAsByte<ETraceTypeQuery> TraceChannel, bool bTraceComplex, TEnumAsByte<EDrawDebugTrace> DrawDebugType, bool bIgnoreSelf, FLinearColor TraceColor, FLinearColor TraceHitColor, float DrawTime, class UObject* __WorldContext, FHitResult& OutHit); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ___SA(class AActor* Actor, float _e, float _N, float __, class UObject* __WorldContext, FVector& PW_);              // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ___S8n(class UObject* __WorldContext, class UBP_MainGameInstance_C*& AsBPMainGameInstance);                         // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool _f_T_(class ATsBaseCharacter_C* __, FGameplayTag _h, class UObject* __WorldContext);                                // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _nd_(class ATsBaseCharacter_C* __, FGameplayTag _h, class UObject* __WorldContext);                                 // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
	// void _m_R(class ATsBaseCharacter_C* __, FGameplayTag _h, class UObject* __WorldContext);                                 // [0x25a7960] Static|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Data/PathLine/PathLine_Bullet/BP_BasePathLineBullet.BP_BasePathLineBullet_C
/// Size: 0x0008 (8 bytes) (0x0002A8 - 0x0002B0) align 8 pad: 0x0000
class ABP_BasePathLineBullet_C : public AActor
{ 
public:
	class USplineComponent*                            Spline;                                                     // 0x02A8   (0x0008)  
};

/// Class /Game/Aki/Core/Fight/Bullet/BulletCommonDataAsset.BulletCommonDataAsset_C
/// Size: 0x0090 (144 bytes) (0x000038 - 0x0000C8) align 8 pad: 0x0000
class UBulletCommonDataAsset_C : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(16,1053) /* TArray<TEnumAsByte<EObjectTypeQuery>> */ __um(TakeAim);                              // 0x0038   (0x0010)  
	SDK_UNDEFINED(16,1054) /* TArray<TEnumAsByte<EObjectTypeQuery>> */ __um(Obstacles);                            // 0x0048   (0x0010)  
	SDK_UNDEFINED(16,1055) /* TArray<TEnumAsByte<EObjectTypeQuery>> */ __um(HitPoint);                             // 0x0058   (0x0010)  
	SDK_UNDEFINED(16,1056) /* TArray<TEnumAsByte<EObjectTypeQuery>> */ __um(FastMoveTraceBullet_Type1);            // 0x0068   (0x0010)  
	SDK_UNDEFINED(16,1057) /* TArray<TEnumAsByte<EObjectTypeQuery>> */ __um(FastMoveTraceBullet_Type2);            // 0x0078   (0x0010)  
	SDK_UNDEFINED(16,1058) /* TArray<TEnumAsByte<EObjectTypeQuery>> */ __um(FastMoveTraceBullet_Type3);            // 0x0088   (0x0010)  
	SDK_UNDEFINED(16,1059) /* TArray<TEnumAsByte<EObjectTypeQuery>> */ __um(FastMoveTraceBullet_Type1_Special);    // 0x0098   (0x0010)  
	SDK_UNDEFINED(16,1060) /* TArray<TEnumAsByte<EObjectTypeQuery>> */ __um(FastMoveTraceBullet_Type2_Special);    // 0x00A8   (0x0010)  
	SDK_UNDEFINED(16,1061) /* TArray<TEnumAsByte<EObjectTypeQuery>> */ __um(FastMoveTraceBullet_Only_Bullet);      // 0x00B8   (0x0010)  
};

/// Class /Game/Aki/Core/Fight/OnlyData.OnlyData_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UOnlyData_C : public UBlueprintFunctionLibrary
{ 
public:
	// void GetCommonNewBulletData(FString DataName, class UObject* __WorldContext, bool& isFind, FSReBulletDataMain& BulletData); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetCommonHitData(FString DataName, class UObject* __WorldContext, bool& isFind, FSHitEffect& HitData);              // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetCommonBulletData(FString DataName, class UObject* __WorldContext, bool& isFind, FSBulletDataMain& BulletData);   // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Module/UiComponent/TsUiSceneActor.TsUiSceneActor_C
/// Size: 0x0048 (72 bytes) (0x0002A8 - 0x0002F0) align 16 pad: 0x0000
class ATsUiSceneActor_C : public AActor
{ 
public:
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02A8   (0x0008)  
	FTransform                                         BaseTransform;                                              // 0x02B0   (0x0030)  
	int32_t                                            PerformDelayTime;                                           // 0x02E0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02E4   (0x0004)  MISSED
	class UClass*                                      BaseInstance;                                               // 0x02E8   (0x0008)  
	// void SetCurMeshEnable(bool Enable);                                                                                      // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnUiAnimNotifyEndPoint(TEnumAsByte<EPerformanceRoleState> RoleState);                                               // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnCreateRoleForwardAnimEnd();                                                                                       // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Module/UiComponent/TsUiSceneRoleActor.TsUiSceneRoleActor_C
/// Size: 0x0010 (16 bytes) (0x0002F0 - 0x000300) align 16 pad: 0x0000
class ATsUiSceneRoleActor_C : public ATsUiSceneActor_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02F0   (0x0008)  
	class UCharRenderingComponent_C*                   CharRenderingComponent;                                     // 0x02F8   (0x0008)  
	// void SetDitherEffectWithWeapon(float ditherRate, TEnumAsByte<ECharacterDitherType> ditherType);                          // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool GetIsRoleMeshLoading();                                                                                             // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnRoleMeshLoadComplete();                                                                                           // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void OnRoleIdChange();                                                                                                   // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void InitComponent();                                                                                                    // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool IsShowUiWepaonEffect();                                                                                             // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetDitherEffect(float ditherRate, TEnumAsByte<ECharacterDitherType> ditherType);                                    // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsUiSceneRoleActor(int32_t EntryPoint);                                                            // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Map/UISceneLevel/UI_Scene/UI_BP/BP_UIShowRoom.BP_UIShowRoom_C
/// Size: 0x0070 (112 bytes) (0x0002A8 - 0x000318) align 8 pad: 0x0000
class ABP_UIShowRoom_C : public AActor
{ 
public:
	class UStaticMeshComponent*                        SM_MilkyWay;                                                // 0x02A8   (0x0008)  
	class UStaticMeshComponent*                        SkyMesh;                                                    // 0x02B0   (0x0008)  
	class UPlanarReflectionComponent*                  PlanarReflection;                                           // 0x02B8   (0x0008)  
	class UStaticMeshComponent*                        FloorMesh;                                                  // 0x02C0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C8   (0x0008)  
	class UMaterialInterface*                          MilkyWayMaterial;                                           // 0x02D0   (0x0008)  
	FRotator                                           MilkyWayRotation;                                           // 0x02D8   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02E4   (0x0004)  MISSED
	class UMaterialInterface*                          SkyMaterial;                                                // 0x02E8   (0x0008)  
	class UMaterialInterface*                          FloorMaterial;                                              // 0x02F0   (0x0008)  
	class UMaterialInstanceDynamic*                    SkyMID;                                                     // 0x02F8   (0x0008)  
	bool                                               bShowMilkyWay;                                              // 0x0300   (0x0001)  
	bool                                               bShowSky;                                                   // 0x0301   (0x0001)  
	bool                                               bShowFloor;                                                 // 0x0302   (0x0001)  
	unsigned char                                      UnknownData01_6[0x5];                                       // 0x0303   (0x0005)  MISSED
	TArray<class AActor*>                              ShowActors;                                                 // 0x0308   (0x0010)  
	// void RemoveShowActor(class AActor*& Actor, bool IncludefromChildActors);                                                 // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AddShowActor(class AActor*& Actor, bool IncludefromChildActors);                                                    // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Core/BP_UiActorCallBack.BP_UiActorCallBack_C
/// Size: 0x0058 (88 bytes) (0x0002A8 - 0x000300) align 8 pad: 0x0000
class ABP_UiActorCallBack_C : public AActor
{ 
public:
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02A8   (0x0008)  
	SDK_UNDEFINED(16,1062) /* FMulticastInlineDelegate */ __um(UiAnimNotifyStateEffectPlay);                       // 0x02B0   (0x0010)  
	SDK_UNDEFINED(16,1063) /* FMulticastInlineDelegate */ __um(UiAnimNotifyStateEffectStop);                       // 0x02C0   (0x0010)  
	SDK_UNDEFINED(16,1064) /* FMulticastInlineDelegate */ __um(uiAnimNotifyEffect);                                // 0x02D0   (0x0010)  
	SDK_UNDEFINED(16,1065) /* FMulticastInlineDelegate */ __um(UiAnimNotifyModel);                                 // 0x02E0   (0x0010)  
	SDK_UNDEFINED(16,1066) /* FMulticastInlineDelegate */ __um(UiAnimNotifyEndPoint);                              // 0x02F0   (0x0010)  
	// void UiAnimNotifyEndPoint__DelegateSignature(TEnumAsByte<EPerformanceRoleState> RoleState);                              // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void UiAnimNotifyModel__DelegateSignature(FSUiAnimNotifyModel UiAnimNotifyModel, class USkeletalMeshComponent* Mesh);    // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void UiAnimNotifyEffect__DelegateSignature(FSUiAnimNotifyEffect uiAnimNotifyEffect, class USkeletalMeshComponent* Mesh); // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void UiAnimNotifyStateEffectStop__DelegateSignature(TEnumAsByte<EPerformanceRoleState> animState, FString SocketName, class USkeletalMeshComponent* Mesh); // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void UiAnimNotifyStateEffectPlay__DelegateSignature(TEnumAsByte<EPerformanceRoleState> animState, FString SocketName, class USkeletalMeshComponent* Mesh); // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/UI/NewModule/UiCameraAnimation/BP_UiCameraAnimation.BP_UiCameraAnimation_C
/// Size: 0x0018 (24 bytes) (0x0002A8 - 0x0002C0) align 8 pad: 0x0000
class ABP_UiCameraAnimation_C : public AActor
{ 
public:
	class UCameraComponent*                            Camera;                                                     // 0x02A8   (0x0008)  
	class USpringArmComponent*                         SpringArm;                                                  // 0x02B0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B8   (0x0008)  
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Render/RuntimeBP/Character/WeaponLevelMaterial/PD_WeaponLevelMaterialDatas.PD_WeaponLevelMaterialDatas_C
/// Size: 0x0050 (80 bytes) (0x000038 - 0x000088) align 8 pad: 0x0000
class UPD_WeaponLevelMaterialDatas_C : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(80,1067) /* TMap<int32_t, FSWeaponLevelMaterialData> */ __um(LevelDatas);                        // 0x0038   (0x0050)  
};

/// Class /Game/Aki/TypeScript/Game/Module/SkeletalObserver/TsSkeletalObserver.TsSkeletalObserver_C
/// Size: 0x0020 (32 bytes) (0x0002A8 - 0x0002C8) align 8 pad: 0x0000
class ATsSkeletalObserver_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class UCharRenderingComponent_C*                   CharRenderingComponent;                                     // 0x02B0   (0x0008)  
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                      // 0x02B8   (0x0008)  
	class USceneComponent*                             Root;                                                       // 0x02C0   (0x0008)  
	// void SetRotateAxisRotate(FRotator rotate);                                                                               // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetDitherEffect(float ditherRate, TEnumAsByte<ECharacterDitherType> ditherType);                                    // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetVisible(bool bVisible);                                                                                          // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// class USkeletalMeshComponent* GetSkeletalMeshComponent();                                                                // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsSkeletalObserver(int32_t EntryPoint);                                                            // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Effect/BluePrint/BP_FX_Common/BP_Fx_WayFinding.BP_Fx_WayFinding_C
/// Size: 0x0020 (32 bytes) (0x0002A8 - 0x0002C8) align 8 pad: 0x0000
class ABP_Fx_WayFinding_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class UNiagaraComponent*                           NS_Fx_WayFinding;                                           // 0x02B0   (0x0008)  
	class USplineComponent*                            Spline;                                                     // 0x02B8   (0x0008)  
	float                                              Distance;                                                   // 0x02C0   (0x0004)  
	int32_t                                            MinFragmentsNum;                                            // 0x02C4   (0x0004)  
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_Fx_WayFinding(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/Render/RuntimeBP/Character/MaterialController/BP_Cinematics_Tick.BP_Cinematics_Tick_C
/// Size: 0x012A (298 bytes) (0x0002B8 - 0x0003E2) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class ABP_Cinematics_Tick_C : public AKuroEditorTickActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C0   (0x0008)  
	int32_t                                            Is_Tick;                                                    // 0x02C8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02CC   (0x0004)  MISSED
	class ABaseCharacter*                              BP_Character;                                               // 0x02D0   (0x0008)  
	float                                              Character_1_LightYaw;                                       // 0x02D8   (0x0004)  
	float                                              Character_1_FaceLightYaw;                                   // 0x02DC   (0x0004)  
	class ABaseCharacter*                              BP_Character0;                                              // 0x02E0   (0x0008)  
	float                                              Character_2_LightYaw;                                       // 0x02E8   (0x0004)  
	float                                              Character_2_FaceLightYaw;                                   // 0x02EC   (0x0004)  
	class ABaseCharacter*                              BP_Character1;                                              // 0x02F0   (0x0008)  
	float                                              Character_3_LightYaw;                                       // 0x02F8   (0x0004)  
	float                                              Character_3_FaceLightYaw;                                   // 0x02FC   (0x0004)  
	class ABaseCharacter*                              BP_Character2;                                              // 0x0300   (0x0008)  
	float                                              Character_4_LightYaw;                                       // 0x0308   (0x0004)  
	float                                              Character_4_FaceLightYaw;                                   // 0x030C   (0x0004)  
	class ASkeletalMeshActor*                          SkeletalMesh;                                               // 0x0310   (0x0008)  
	float                                              SkeletalMesh_1_LightYaw;                                    // 0x0318   (0x0004)  
	float                                              SkeletalMesh_1_FaceLightYaw;                                // 0x031C   (0x0004)  
	class ASkeletalMeshActor*                          SkeletalMesh3;                                              // 0x0320   (0x0008)  
	float                                              SkeletalMesh_2_LightYaw;                                    // 0x0328   (0x0004)  
	float                                              SkeletalMesh_2_FaceLightYaw;                                // 0x032C   (0x0004)  
	class ASkeletalMeshActor*                          SkeletalMesh4;                                              // 0x0330   (0x0008)  
	float                                              SkeletalMesh_3_LightYaw;                                    // 0x0338   (0x0004)  
	float                                              SkeletalMesh_3_FaceLightYaw;                                // 0x033C   (0x0004)  
	class ASkeletalMeshActor*                          SkeletalMesh5;                                              // 0x0340   (0x0008)  
	float                                              SkeletalMesh_4_LightYaw;                                    // 0x0348   (0x0004)  
	float                                              SkeletalMesh_4_FaceLightYaw;                                // 0x034C   (0x0004)  
	class ASkeletalMeshActor*                          SkeletalMesh6;                                              // 0x0350   (0x0008)  
	float                                              SkeletalMesh_5_LightYaw;                                    // 0x0358   (0x0004)  
	float                                              SkeletalMesh_5_FaceLightYaw;                                // 0x035C   (0x0004)  
	class ASkeletalMeshActor*                          SkeletalMesh7;                                              // 0x0360   (0x0008)  
	float                                              SkeletalMesh_6_LightYaw;                                    // 0x0368   (0x0004)  
	float                                              SkeletalMesh_6_FaceLightYaw;                                // 0x036C   (0x0004)  
	class USkeletalMeshComponent*                      UISceneRole;                                                // 0x0370   (0x0008)  
	class USkeletalMeshComponent*                      UISceneRole8;                                               // 0x0378   (0x0008)  
	class AActor*                                      Target;                                                     // 0x0380   (0x0008)  
	float                                              Target_1_LightYaw;                                          // 0x0388   (0x0004)  
	float                                              Target_1_FaceLightYaw;                                      // 0x038C   (0x0004)  
	class AActor*                                      Target9;                                                    // 0x0390   (0x0008)  
	float                                              Target_2_LightYaw;                                          // 0x0398   (0x0004)  
	float                                              Target_2_FaceLightYaw;                                      // 0x039C   (0x0004)  
	class AActor*                                      Target10;                                                   // 0x03A0   (0x0008)  
	float                                              Target_3_LightYaw;                                          // 0x03A8   (0x0004)  
	float                                              Target_3_FaceLightYaw;                                      // 0x03AC   (0x0004)  
	class AActor*                                      Target11;                                                   // 0x03B0   (0x0008)  
	float                                              Target_4_LightYaw;                                          // 0x03B8   (0x0004)  
	float                                              Target_4_FaceLightYaw;                                      // 0x03BC   (0x0004)  
	class AActor*                                      Target12;                                                   // 0x03C0   (0x0008)  
	float                                              Target_5_LightYaw;                                          // 0x03C8   (0x0004)  
	float                                              Target_5_FaceLightYaw;                                      // 0x03CC   (0x0004)  
	class AActor*                                      Target13;                                                   // 0x03D0   (0x0008)  
	float                                              Target_6_LightYaw;                                          // 0x03D8   (0x0004)  
	float                                              Target_6_FaceLightYaw;                                      // 0x03DC   (0x0004)  
	bool                                               IsHideMesh;                                                 // 0x03E0   (0x0001)  
	bool                                               IsHideEffect;                                               // 0x03E1   (0x0001)  
	// void UpdateMeshAndEffectState(class AActor* InActor, bool IsHideMesh, bool IsHideEffect);                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetActorLight(class AActor* InActor, float LightYaw, float FaceLightYaw, bool IsRevert);                            // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ProcessCombinNPC(class ABP_SeqNPC_C* Mesh, float LightYaw, float FaceLightYaw);                                     // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void RevertLightDirection(class USkeletalMeshComponent* Mesh);                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetLightDirection(class USkeletalMeshComponent* Mesh, float LightYaw, float FaceLightYaw);                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveDestroyed();                                                                                                 // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_BP_Cinematics_Tick(int32_t EntryPoint);                                                            // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/GI/BP_GlobalGI.BP_GlobalGI_C
/// Size: 0x0442 (1090 bytes) (0x002290 - 0x0026D2) align 16 pad: 0x0002
#pragma pack(push, 0x1)
class ABP_GlobalGI_C : public AKuroGlobalGI
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x2290   (0x0008)  
	class UKuroGlobalHeightMapComponent*               KuroGlobalHeightMap;                                        // 0x2298   (0x0008)  
	class UStaticMeshComponent*                        CloudOcean;                                                 // 0x22A0   (0x0008)  
	class UKuroGlobalColorMapComponent*                KuroGlobalColorMap;                                         // 0x22A8   (0x0008)  
	class UStaticMeshComponent*                        SM_MilkyWay;                                                // 0x22B0   (0x0008)  
	class UBP_UiSceneRenderingComponent_C*             BP_UiSceneRenderingComponent;                               // 0x22B8   (0x0008)  
	class UKuroPostProcessComponent*                   GlobalUiScenePostProcess;                                   // 0x22C0   (0x0008)  
	class UChildActorComponent*                        ImposterManager;                                            // 0x22C8   (0x0008)  
	class UStaticMeshComponent*                        SM_Com_Roc_01AS6;                                           // 0x22D0   (0x0008)  
	class UStaticMeshComponent*                        SM_Com_Roc_01AS5;                                           // 0x22D8   (0x0008)  
	class UStaticMeshComponent*                        SM_Com_Roc_01AS4;                                           // 0x22E0   (0x0008)  
	class UStaticMeshComponent*                        SM_Com_Roc_01AS3;                                           // 0x22E8   (0x0008)  
	class UStaticMeshComponent*                        SM_Com_Roc_01AS2;                                           // 0x22F0   (0x0008)  
	class UStaticMeshComponent*                        SM_Com_Roc_01AS1;                                           // 0x22F8   (0x0008)  
	class UStaticMeshComponent*                        SM_Com_Roc_01AS;                                            // 0x2300   (0x0008)  
	class UKuroPostProcessComponent*                   LUTPostProcess;                                             // 0x2308   (0x0008)  
	class UStaticMeshComponent*                        SM_Stars;                                                   // 0x2310   (0x0008)  
	class UStaticMeshComponent*                        Skybox;                                                     // 0x2318   (0x0008)  
	class UChildActorComponent*                        SnowActor;                                                  // 0x2320   (0x0008)  
	class UPostProcessComponent*                       GlobalPostProcessVolume;                                    // 0x2328   (0x0008)  
	class UDirectionalLightComponent*                  SceneLight;                                                 // 0x2330   (0x0008)  
	class UDirectionalLightComponent*                  AtmoMoonLight;                                              // 0x2338   (0x0008)  
	class UDirectionalLightComponent*                  AtmoSunLight;                                               // 0x2340   (0x0008)  
	class USkyLightComponent*                          SkyLight;                                                   // 0x2348   (0x0008)  
	class UExponentialHeightFogComponent*              HeightFog;                                                  // 0x2350   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x2358   (0x0008)  
	float                                              CharacterLightHorizontal;                                   // 0x2360   (0x0004)  
	float                                              CurrTimeOfDay;                                              // 0x2364   (0x0004)  
	bool                                               EnableTODCycle;                                             // 0x2368   (0x0001)  
	bool                                               PauseTOD;                                                   // 0x2369   (0x0001)  
	bool                                               ____hV;                                                     // 0x236A   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x236B   (0x0001)  MISSED
	float                                              TODCycleTime;                                               // 0x236C   (0x0004)  
	FRotator                                           SenenDirLightRot;                                           // 0x2370   (0x000C)  
	float                                              MainLightAngleLimit;                                        // 0x237C   (0x0004)  
	bool                                               IsGIEnable;                                                 // 0x2380   (0x0001)  
	bool                                               _O_u___g_v_f;                                               // 0x2381   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x2382   (0x0002)  MISSED
	int32_t                                            S_MR_v_Y_;                                                  // 0x2384   (0x0004)  
	FLinearColor                                       _Y3_;                                                       // 0x2388   (0x0010)  
	TArray<FVector2D>                                  SunLightExistTime;                                          // 0x2398   (0x0010)  
	TArray<FVector2D>                                  MoonLightExistTime;                                         // 0x23A8   (0x0010)  
	bool                                               __L__e___;                                                  // 0x23B8   (0x0001)  
	bool                                               UISceneRendering;                                           // 0x23B9   (0x0001)  
	bool                                               IsRootGI;                                                   // 0x23BA   (0x0001)  
	bool                                               D;                                                          // 0x23BB   (0x0001)  
	float                                              D0;                                                         // 0x23BC   (0x0004)  
	int32_t                                            TotalDaysElapsed;                                           // 0x23C0   (0x0004)  
	float                                              MoonFade;                                                   // 0x23C4   (0x0004)  
	FVector2D                                          MoonVisibleTime;                                            // 0x23C8   (0x0008)  
	bool                                               ____hV_NsQ__L;                                              // 0x23D0   (0x0001)  
	bool                                               sQ__;                                                       // 0x23D1   (0x0001)  
	bool                                               RuntimeTimeEnable;                                          // 0x23D2   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1];                                       // 0x23D3   (0x0001)  MISSED
	float                                              MainLightTickSecond;                                        // 0x23D4   (0x0004)  
	float                                              MainLightTickCounter;                                       // 0x23D8   (0x0004)  
	bool                                               ForceUpdateMainLightDir;                                    // 0x23DC   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x23DD   (0x0003)  MISSED
	float                                              WindDir;                                                    // 0x23E0   (0x0004)  
	bool                                               _O_u4N;                                                     // 0x23E4   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x23E5   (0x0003)  MISSED
	class UMaterialInstance*                           TempFogMaterial;                                            // 0x23E8   (0x0008)  
	class UMaterialInstanceDynamic*                    TempFogDMI;                                                 // 0x23F0   (0x0008)  
	class UMaterialInstance*                           SkyBoxMaterial;                                             // 0x23F8   (0x0008)  
	FLinearColor                                       SunDiscColor;                                               // 0x2400   (0x0010)  
	FLinearColor                                       SunScatterColor;                                            // 0x2410   (0x0010)  
	float                                              SunSize;                                                    // 0x2420   (0x0004)  
	FLinearColor                                       MoonDiscColor;                                              // 0x2424   (0x0010)  
	FLinearColor                                       MoonScatterColor;                                           // 0x2434   (0x0010)  
	float                                              MoonSize;                                                   // 0x2444   (0x0004)  
	FLinearColor                                       HorizonColor;                                               // 0x2448   (0x0010)  
	float                                              HorizonFalloff;                                             // 0x2458   (0x0004)  
	FLinearColor                                       ZenithColor;                                                // 0x245C   (0x0010)  
	float                                              ExtremWeatherWeight;                                        // 0x246C   (0x0004)  
	FLinearColor                                       ST_TopColor;                                                // 0x2470   (0x0010)  
	FLinearColor                                       ST_DomeColorTint;                                           // 0x2480   (0x0010)  
	float                                              ST_TopWidth;                                                // 0x2490   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x2494   (0x0004)  MISSED
	class UCurveFloat*                                 CharMainLightCurve;                                         // 0x2498   (0x0008)  
	class UCurveFloat*                                 CharSkyLightCurve;                                          // 0x24A0   (0x0008)  
	bool                                               UseCharCustomLighting;                                      // 0x24A8   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x24A9   (0x0003)  MISSED
	FLinearColor                                       CharAmbientColor;                                           // 0x24AC   (0x0010)  
	FLinearColor                                       CharSkinAmbientColor;                                       // 0x24BC   (0x0010)  
	unsigned char                                      UnknownData07_6[0x4];                                       // 0x24CC   (0x0004)  MISSED
	class UCurveFloat*                                 CharShadowCurve;                                            // 0x24D0   (0x0008)  
	class UMaterialInstance*                           LightFunctionMaterial;                                      // 0x24D8   (0x0008)  
	float                                              LightFunctionIntensity;                                     // 0x24E0   (0x0004)  
	unsigned char                                      UnknownData08_6[0x4];                                       // 0x24E4   (0x0004)  MISSED
	class UMaterialInstanceDynamic*                    LightFunctionDMI;                                           // 0x24E8   (0x0008)  
	bool                                               D1;                                                         // 0x24F0   (0x0001)  
	unsigned char                                      UnknownData09_6[0x7];                                       // 0x24F1   (0x0007)  MISSED
	class UMaterialInstance*                           LensFlareMI;                                                // 0x24F8   (0x0008)  
	class UMaterialInstanceDynamic*                    LensFlareDMI;                                               // 0x2500   (0x0008)  
	class UMaterialInstance*                           MobileLensFlareMI_Ghost;                                    // 0x2508   (0x0008)  
	FLinearColor                                       Nadir_Color;                                                // 0x2510   (0x0010)  
	float                                              Nadir_Falloff;                                              // 0x2520   (0x0004)  
	float                                              Sun_Scatter_Size;                                           // 0x2524   (0x0004)  
	float                                              Moon_Scatter_Size;                                          // 0x2528   (0x0004)  
	unsigned char                                      UnknownData10_6[0x4];                                       // 0x252C   (0x0004)  MISSED
	class UMaterialInstance*                           StarsMaterial;                                              // 0x2530   (0x0008)  
	float                                              MainDirectionLightUpdateThreshold_Mobile;                   // 0x2538   (0x0004)  
	float                                              MainDirectionLightUpdateThreshold;                          // 0x253C   (0x0004)  
	FVector                                            GlobalWindDirection;                                        // 0x2540   (0x000C)  
	FVector                                            GlobalWindRightDirection;                                   // 0x254C   (0x000C)  
	float                                              D2;                                                         // 0x2558   (0x0004)  
	unsigned char                                      UnknownData11_6[0x4];                                       // 0x255C   (0x0004)  MISSED
	class ABP_ControlTodTime_C*                        TodTimeController;                                          // 0x2560   (0x0008)  
	float                                              RealTimeOfDay;                                              // 0x2568   (0x0004)  
	unsigned char                                      UnknownData12_6[0x4];                                       // 0x256C   (0x0004)  MISSED
	class ABP_Clouds_C*                                DynamicCloudsActor;                                         // 0x2570   (0x0008)  
	TEnumAsByte<EKuroDynamicCloudType>                 LocalDynamicCloudsType;                                     // 0x2578   (0x0001)  
	unsigned char                                      UnknownData13_6[0x3];                                       // 0x2579   (0x0003)  MISSED
	float                                              RainDensityChangeSpeed;                                     // 0x257C   (0x0004)  
	float                                              RainDensity;                                                // 0x2580   (0x0004)  
	float                                              SnowDensity;                                                // 0x2584   (0x0004)  
	float                                              RainGravity;                                                // 0x2588   (0x0004)  
	float                                              RainGravityChangeSpeed;                                     // 0x258C   (0x0004)  
	float                                              RainWindPower;                                              // 0x2590   (0x0004)  
	float                                              RainWindPowerChangeSpeed;                                   // 0x2594   (0x0004)  
	bool                                               CanSpawnEffect;                                             // 0x2598   (0x0001)  
	unsigned char                                      UnknownData14_6[0x3];                                       // 0x2599   (0x0003)  MISSED
	float                                              FinalSnowDensity;                                           // 0x259C   (0x0004)  
	float                                              FinalRainDensity;                                           // 0x25A0   (0x0004)  
	float                                              FinalRainGravity;                                           // 0x25A4   (0x0004)  
	float                                              DefaultSkyLightShadowSupplement;                            // 0x25A8   (0x0004)  
	float                                              DefaultSkyLightReflectionAddIntensity;                      // 0x25AC   (0x0004)  
	class UMaterialInstance*                           MobileLensFlareMI_Halo;                                     // 0x25B0   (0x0008)  
	class UMaterialInstanceDynamic*                    MobileLensFlareDMI_Ghost;                                   // 0x25B8   (0x0008)  
	class UMaterialInstanceDynamic*                    MobileLensFlareDMI_Halo;                                    // 0x25C0   (0x0008)  
	class UTexture2D*                                  HeightmapTexture;                                           // 0x25C8   (0x0008)  
	bool                                               HeightMapUpdated;                                           // 0x25D0   (0x0001)  
	unsigned char                                      UnknownData15_6[0x3];                                       // 0x25D1   (0x0003)  MISSED
	FVector                                            SunLightDirection;                                          // 0x25D4   (0x000C)  
	bool                                               IsComponentsEnable;                                         // 0x25E0   (0x0001)  
	unsigned char                                      UnknownData16_6[0x7];                                       // 0x25E1   (0x0007)  MISSED
	class UTexture*                                    Last_LightFunction_Map;                                     // 0x25E8   (0x0008)  
	class UTexture*                                    InitLightFunctionMap;                                       // 0x25F0   (0x0008)  
	bool                                               SceneRainConfig_Initialized;                                // 0x25F8   (0x0001)  
	unsigned char                                      UnknownData17_6[0x7];                                       // 0x25F9   (0x0007)  MISSED
	class UKuroSceneRainEmitterConfig*                 SceneRainConfig_Front;                                      // 0x2600   (0x0008)  
	class UKuroSceneRainEmitterConfig*                 SceneRainConfig_Back;                                       // 0x2608   (0x0008)  
	float                                              TODLightLoadingWait;                                        // 0x2610   (0x0004)  
	float                                              DayLightLoadingTime;                                        // 0x2614   (0x0004)  
	float                                              NightLightLoadingTime;                                      // 0x2618   (0x0004)  
	int32_t                                            ComputeLightGridSkipFrames;                                 // 0x261C   (0x0004)  
	class UMaterialInstance*                           MilkyWayMaterial;                                           // 0x2620   (0x0008)  
	bool                                               _O_u_N;                                                     // 0x2628   (0x0001)  
	unsigned char                                      UnknownData18_6[0x3];                                       // 0x2629   (0x0003)  MISSED
	float                                              D3;                                                         // 0x262C   (0x0004)  
	SDK_UNDEFINED(16,1068) /* FMulticastInlineDelegate */ __um(CallCloudChange);                                   // 0x2630   (0x0010)  
	FKuroCurveFloat                                    FogTImeControl;                                             // 0x2640   (0x0090)  
	bool                                               Is_Editor_Update;                                           // 0x26D0   (0x0001)  
	bool                                               EnableImposterUpdate;                                       // 0x26D1   (0x0001)  
	// void UpdateEditor();                                                                                                     // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void OnGlobalGITick();                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateBigWorld();                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateMilkWay(class UMaterialInstanceDynamic*& MilkyWayDMI, FKuroMilkyWaySetting& CloudCardSetting);                // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetMilkyWayDMI(class UMaterialInstanceDynamic*& DMIRet);                                                            // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void updateLightFunctions();                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void GetParallaxCorrectCachedCrossFadeShadowDirection(FRotator& NewParam);                                               // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void GetTODCharacterLighting(FLinearColor mainLight, float MainLightIntensity, FLinearColor SkyLight, float SkyLightIntensity, FLinearColor& FrontSideLight, FLinearColor& BackSideLight); // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void GetParallaxCorrectCachedShadowDirection(FRotator& NewParam);                                                        // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FLinearColor ClampLuminance(FLinearColor InColor, float Min, float Max);                                                 // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FVector EulerToForward(float Pitch, float Yaw);                                                                          // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdateRainOrSnowImp(class AKuroRainActor* RainActor, float Density, float Gravity, FVector Wind, bool UpdateHeightMapTexture, bool& RainValid); // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdateDynamicClouds();                                                                                              // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetLevelSequenceTimeControl(class ABP_ControlTodTime_C* TodTimeControl);                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void GetStarsDMI(class UMaterialInstanceDynamic*& DMIRet);                                                               // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdateClusteredStuff();                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void GetSkyboxDMI(class UMaterialInstanceDynamic*& DMIRet);                                                              // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdateSkybox();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateMisc();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateFlowmapSkybox();                                                                                              // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _3u();                                                                                                              // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _N();                                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _N();                                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __();                                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateDayNightDataLayer();                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateCloudCard(FKuroCloudCardSetting& CloudCardSetting);                                                           // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _Y();                                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _YZf0();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___f0();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __();                                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _N();                                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _n();                                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateSkyDome();                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void InitGI();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetAllComponentsStates(bool isEnable);                                                                              // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateLightShaft();                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void GetLightDirectionFromVH(float Vertical, float Horizontal, FRotator& Result);                                        // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdatePostProcessVolume();                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateLightParameters();                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateLightDirection();                                                                                             // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdateMainLight();                                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateUIEnv();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateTime();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void GetViewLocation(FVector& WorldPosition, bool& Suc);                                                                 // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void InitFeature();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void CalculateLightDirectionWithLimit(float V, float H, float Time, FRotator& NewParam);                                 // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void CalculateLightDirection(float Vertical, float Horizontal, float Time, FRotator& NewParam);                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdateAtmosphere();                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateSkyLight();                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void GetSceneLightDirection(FVector& LightDir);                                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void InitGICompoemnt();                                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void InitMaterials();                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateWind();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Get2SkyboxLerpWeight(float startSetting, float EndSetting, float CurrentTime, float& Weight);                       // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdateEnv();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateFog();                                                                                                        // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdateGIData(bool SkipLerpData);                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateCharacterGI();                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void OnKuroInit();                                                                                                       // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void OnKuroRuntimeDestroy();                                                                                             // [0x25a7960] Event|Public|BlueprintEvent 
	// void OnKuroSetRuntimeTime(float CurrentTime);                                                                            // [0x25a7960] Event|Public|BlueprintEvent 
	// void OnKuroStartUiScene(FString InName, class ULevel* InUILevel);                                                        // [0x25a7960] Event|Public|BlueprintEvent 
	// void OnKuroEndUiScene();                                                                                                 // [0x25a7960] Event|Public|BlueprintEvent 
	// void OnKuroTick(float DeltaTime);                                                                                        // [0x25a7960] Event|Public|BlueprintEvent 
	// void OnKuroTickEditor(float DeltaTime);                                                                                  // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_GlobalGI(int32_t EntryPoint);                                                                   // [0x25a7960] Final                
	// void CallCloudChange__DelegateSignature(TEnumAsByte<E_Cloud_Presents> CloudPresents, float ChangeSpeed, bool IsInEditor); // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/World/Bridge/WorldFunctionLibrary.WorldFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UWorldFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// int32_t GetRoleIdIgnoreTrial(int32_t EntityID, class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float GetTimeDilation(class UObject* __WorldContext);                                                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TArray<AActor*> GetFormationControlledRoles(class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetEntityEnable(int32_t EntityID, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class AActor* GetActorByEntityId(int32_t EntityID, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool EntityIsInit(int32_t EntityID, class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetTimeDilation(float TimeDilation, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TArray<AActor*> GetActorsByPbDataIdArray(TArray<int32_t>& pbDataIdArray, class UObject* __WorldContext);                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// class AActor* GetEntityActorByChildActor(class AActor* ChildActor, class UObject* __WorldContext);                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetEntityDestructible(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetVisionId(int32_t visionEntityId, class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// TArray<int32_t> GetSummonEntityIds(int32_t ownerEntityId, class UObject* __WorldContext);                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ChangeRoleInExitSkill(class AActor* goDownPlayer, class AActor* goBattlePlayer, class UObject* __WorldContext);     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int32_t GetSummonerEntityId(int32_t EntityID, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UiCameraAnimationBroadSequenceEvent(FString sequenceEventName, class UObject* __WorldContext);                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int32_t GetControlVisionEntityId(int32_t ownerEntityId, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UiCameraAnimationEnableCustomCreatureActor(class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void UiCameraAnimationDisableCustomCreatureActor(int32_t position1, class UObject* __WorldContext);                      // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void UiCameraAnimationEnablePlayerActor(class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void UiCameraAnimationDisablePlayerActor(class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetCustomEntityEnable(int32_t ownerEntityId, int32_t Pos, bool Enable, class UObject* callObject, FString reason, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetNewUiSceneDebugOpen(bool UseNewUiSceneWorkflow, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// class USplineComponent* InitGameSplineBySplineEntity(int32_t pbDataId1, class ATsGameSplineActor_C* inSplineActor1, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ChangeRole(int32_t Pos, class UObject* __WorldContext);                                                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetEnableCollisionDebug(int32_t entityId1, class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ShowCharacterCollision(bool IsShow, int32_t entityId1, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TArray<FString> GetTestSpawnTemplateEntityString(class UObject* __WorldContext);                                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetEntityRotation(int32_t EntityID, FRotator Rotation, bool sweep, class UObject* __WorldContext);                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetEntityLocationAndRotation(int32_t EntityID, FVector Location, FRotator Rotation, bool sweep, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetEntityLocation(int32_t entityId1, FVector Location, bool sweep, bool Teleport, class UObject* __WorldContext);   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool IsGameRunning(class UObject* __WorldContext);                                                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetCollisionResponseToPawn(class ATsBaseCharacter_C* Actor, TEnumAsByte<EPawnChannel> pawnChannel, TEnumAsByte<ECollisionResponse> NewResponse, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TMap<int32_t, bool> GetFormationAllEntityId(class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetCameraShakeModify(float modify, class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool EnableCreatureCollision(class AActor* Actor, class UObject* callObject, int32_t Handle, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t DisableCreatureCollision(class AActor* Actor, class UObject* callObject, FString reason, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool EnableCreatureActor(class AActor* Actor, class UObject* callObject, int32_t Handle, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t DisableCreatureActor(class AActor* Actor, class UObject* callObject, FString reason, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FVector GetInitPositionByEntity(int32_t entityId1, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FString EvalScript(FString Script, class UObject* __WorldContext);                                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool IsNeedPostEffect(class AActor* Actor, class UObject* __WorldContext);                                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int64_t GetServerIdByEntityId(int32_t EntityID, class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetVisionEnable(int32_t ownerEntityId, bool Enable, class UObject* __WorldContext);                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int32_t GetCustomEntityId(int32_t ownerEntityId, int32_t Pos, class UObject* __WorldContext);                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetVisionEntityId(int32_t ownerEntityId, class UObject* __WorldContext);                                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void MonsterBoomRequest(int64_t creatureDataId, float delay, class UObject* __WorldContext);                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ChangeSubLevel(TArray<FString>& unloadLevels, TArray<FString>& Levels, int32_t screenEffect, FVector Location, FRotator Rotator, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class AActor* GetActorByPbDataId(int32_t pbDataId, class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// class AActor* GetActorByCreatureDataId(int64_t creatureDataId, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// class UTsEntityDebugInfoManager_C* GetEntityDebugInfoManager(class UObject* __WorldContext);                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetChangeFootStepMaterialId(class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetChangeFootStep(class UObject* __WorldContext);                                                                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void TestSpawnTemplateEntityPush(int64_t creatureDataId, int32_t configId, int32_t Level, FTransform Transform, int32_t extraRatioConfigId, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TArray<FString> GetWuYinQuDebugInfo(class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetMonsterType(class AActor* Actor, class UObject* __WorldContext);                                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetConfigIdByActor(class AActor* Actor, class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetEntityTypeByActor(class AActor* Actor, class UObject* __WorldContext);                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetEntityTypeByEntity(int32_t EntityID, class UObject* __WorldContext);                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ChangeEntityState(int32_t entityId1, FString state1, class AActor* changerstActor, int32_t changerstEntityId, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SwitchServerLogMode(class UObject* __WorldContext);                                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetServerLogMode(class UObject* __WorldContext);                                                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SwitchBuffSyncMode(class UObject* __WorldContext);                                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetBuffSyncMode(class UObject* __WorldContext);                                                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SwitchBattleMode(class UObject* __WorldContext);                                                                    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetBattleMode(class UObject* __WorldContext);                                                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TEnumAsByte<EWeatherState> GetCurrentWeatherState(class UObject* __WorldContext);                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetCurrentDayState(class UObject* __WorldContext);                                                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AiChangeBattleState(FString battleActorName, TEnumAsByte<EWuYinQuState> TargetState, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void RemoveSummonEntityRequest(int32_t skillId, int32_t summonerId, int32_t removeId, class UObject* __WorldContext);    // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ChangeBattleState(class ULevelSequenceDirector* director, FString battleActorName, TEnumAsByte<EWuYinQuState> TargetState, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void JumpToMarkLevelSequence(class ULevelSequenceDirector* director, FString markName, class UObject* __WorldContext);   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int64_t SummonRequest(int32_t skillId, bool IsVisible, FTransform Transform, int32_t summonerId, int32_t summonConfigId, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetRoleId(int32_t EntityID, class UObject* __WorldContext);                                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool IsOpenWorld(class UObject* __WorldContext);                                                                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void PlayWuYinLevelSequence(int32_t loopStartFrame, class ULevelSequenceDirector* director, FString sequenceActorName, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void PlayWuYinSequence(FString sequenceName, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void StartStandalone(class UObject* __WorldContext);                                                                     // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool CheckConfigIdByActor(class AActor* Actor, float configId, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool ActorHasSceneItemTag(class AActor* Actor, float Tag, class UObject* __WorldContext);                                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RemovePrivateTags(float EntityID, TArray<FString>& Tags, class UObject* __WorldContext);                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AddPrivateTags(float EntityID, TArray<FString>& Tags, class UObject* __WorldContext);                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int64_t GetOwnerIdByEntity(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// int32_t GetRoleElementId(int32_t EntityID, class UObject* __WorldContext);                                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// int32_t GetPlayerIdByEntity(int32_t EntityID, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// int64_t GetCreatureDataIdByEntity(int32_t EntityID, class UObject* __WorldContext);                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// int32_t GetEntityIdByCreature(int64_t creatureDataId, class UObject* __WorldContext);                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// int64_t GenUniqueId(class UObject* __WorldContext);                                                                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// int32_t GetWorldOwner(class UObject* __WorldContext);                                                                    // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// class AActor* GetDynamicEntity(int32_t EntityID, class UObject* __WorldContext);                                         // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void RemoveStandaloneEntity(int32_t EntityID, int32_t removeEntityType, class UObject* __WorldContext);                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FString GetBlackboardInfosByEntity(int32_t EntityID, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetEntityIdsByEntity(int32_t entityId1, FString key1, TArray<int32_t>& values1, class UObject* __WorldContext);     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// TArray<int32_t> GetEntityIdsByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetEntityIdByEntity(int32_t EntityID, FString Key, int32_t Value, class UObject* __WorldContext);                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int32_t GetEntityIdByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TArray<FRotator> GetRotatorValuesByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetRotatorValueByEntity(int32_t EntityID, FString Key, FRotator Value, class UObject* __WorldContext);              // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FRotator GetRotatorValueByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TArray<FVector> GetVectorValuesByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetVectorValueByEntity(int32_t EntityID, FString Key, FVector Value, class UObject* __WorldContext);                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FVector GetVectorValueByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// bool HasValueByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void RemoveValueByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TArray<FString> GetStringValuesByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetStringValueByEntity(int32_t EntityID, FString Key, FString Value, class UObject* __WorldContext);                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FString GetStringValueByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TArray<float> GetFloatValuesByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetFloatValueByEntity(int32_t EntityID, FString Key, float Value, class UObject* __WorldContext);                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetFloatValueByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetBooleanValueByEntity(int32_t EntityID, FString Key, bool Value, class UObject* __WorldContext);                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetBooleanValueByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TArray<int64_t> GetLongValuesByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                     // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetLongValueByEntity(int32_t EntityID, FString Key, int64_t Value, class UObject* __WorldContext);                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int64_t GetLongValueByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TArray<int32_t> GetIntValuesByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                      // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetIntValueByEntityWithCharacter(class ATsBaseCharacter_C* entity, FString Key, int32_t Value, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetIntValueByEntity(int32_t EntityID, FString Key, int32_t Value, class UObject* __WorldContext);                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// int32_t GetIntValueByEntityWithCharacter(class ATsBaseCharacter_C* entity, FString Key, class UObject* __WorldContext);  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// int32_t GetIntValueByEntity(int32_t EntityID, FString Key, class UObject* __WorldContext);                               // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void RemovePublicTags(float entityId1, TArray<FString>& tags1, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AddPublicTags(float entityId1, TArray<FString>& tags1, class UObject* __WorldContext);                              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/BaseCharacter/BPL_CharacterUtility.BPL_CharacterUtility_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPL_CharacterUtility_C : public UBlueprintFunctionLibrary
{ 
public:
	// void CheckSimpleNpc(class UObject* __WorldContext, TArray<AActor*>& ReturnValues);                                       // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdateCachePoseEnable(class UAnimInstance* Target, class UObject* __WorldContext, bool& CachePoseEnable);           // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void GetTypeQuery(class UObject* __WorldContext, TArray<TEnumAsByte<EObjectTypeQuery>>& NewParam);                       // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdatePhysicsClothSimulateEnable(class UAnimInstance* AnimInstance, bool SrcSimulateEnable, class UObject* __WorldContext, bool& DstSimulateEnable); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void DtGetBlockObjectType(class UObject* __WorldContext, TArray<TEnumAsByte<EObjectTypeQuery>>& Value);                  // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void DtGetAllBulletData(class UDataTable* DataTable, class UObject* __WorldContext, TArray<FSReBulletDataMain>& NewParam); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool DtGetCaughtInfo(class UDataTable* DataTable, FName RowName, class UObject* __WorldContext, FSCaughtInfo& Data);     // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool DtGetVisionInfo(class UDataTable* DataTable, FName RowName, class UObject* __WorldContext, FSVisionData& Data);     // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// TEnumAsByte<EMovementDirection> GetInputMovementDirection(class ATsBaseCharacter_C* baseChar, class UObject* __WorldContext); // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void DtGetAllCharacterPartDatas(class UDataTable* DataTable, TArray<FSCharacterPart>& partArrayRef, class UObject* __WorldContext); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void DtGetAllSkillInfos(class UDataTable* DataTable, class UObject* __WorldContext, TArray<FSSkillInfo>& NewParam);      // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool DtGetNewBulletData(class UDataTable* DataTable, FName RowName, class UObject* __WorldContext, FSReBulletDataMain& Data); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool DtGetEffectData(class UDataTable* DataTable, FName RowName, class UObject* __WorldContext, FSEffectData& Data);     // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool DtGetAttributeModifierData(class UDataTable* DataTable, FName RowName, class UObject* __WorldContext, FSAttributeModifierData& Data); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool DtGetDamageData(class UDataTable* DataTable, FName RowName, class UObject* __WorldContext, FSDamageData& Data);     // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool DtGetSkillInfo(class UDataTable* DataTable, FName RowName, class UObject* __WorldContext, FSSkillInfo& Data);       // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool DtGetHitEffect(class UDataTable* DataTable, FName RowName, FSHitEffect& backData, class UObject* __WorldContext);   // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool DtGetBulletData(class UDataTable* DataTable, FName RowName, class UObject* __WorldContext, FSBulletDataMain& Data); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool DtGetMovementSettings(class UDataTable* DataTable, FName RowName, class UObject* __WorldContext, FSMovementSetting_State& Data); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetLocalWind(class UAnimInstance* AnimInstance, class UObject* __WorldContext, FVector& LocalWind);                 // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Aki/Core/World/BPL_WorldUtility.BPL_WorldUtility_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPL_WorldUtility_C : public UBlueprintFunctionLibrary
{ 
public:
	// void LoadAIConfig(FName RoleName, class UObject* __WorldContext, bool& Exist, FSAIConfig& OutRow);                       // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetEntityProperty(FName RoleName, class UObject* __WorldContext, bool& Exist, FSEntityProperty& OutRow);            // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetMapTableByName(FName RowName, class UObject* __WorldContext, bool& Exist, FSMapConfig& OutRow);                  // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void GetModelTableByName(FName RowName, class UObject* __WorldContext, bool& Exist, FSModelConfig& OutRow);              // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetEntityTableByName(FName RowName, class UObject* __WorldContext, bool& Exist, FSEntityConfig& OutRow);            // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/LevelGamePlay/Parkour/TsParkourCheckPoint.TsParkourCheckPoint_C
/// Size: 0x0040 (64 bytes) (0x0002A8 - 0x0002E8) align 8 pad: 0x0000
class ATsParkourCheckPoint_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USphereComponent*                            SphereComponent;                                            // 0x02B0   (0x0008)  
	int32_t                                            CheckPointIndex;                                            // 0x02B8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02BC   (0x0004)  MISSED
	FString                                            DestroyEffectModelBasePath;                                 // 0x02C0   (0x0010)  
	int32_t                                            ParkourId;                                                  // 0x02D0   (0x0004)  
	int32_t                                            IndexInGroup;                                               // 0x02D4   (0x0004)  
	FString                                            CheckTag;                                                   // 0x02D8   (0x0010)  
	// void GenerateFxByPath(FString effectPath);                                                                               // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void GenerateFx(class UEffectModelBase* inModelBase1);                                                                   // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void SetDetectSphere(float inRadius1);                                                                                   // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x13db470] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x13db470] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsParkourCheckPoint(int32_t EntryPoint);                                                           // [0x13db470] Final|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/NPC/BPI_NPC.BPI_NPC_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPI_NPC_C : public UInterface
{ 
public:
	// FString GetNPCName();                                                                                                    // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInteractionConfig GetCurrInteractionConfig();                                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void InteractNPC();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// bool TriggerNPCInteraction();                                                                                            // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool IsNPCInteractable();                                                                                                // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool ApplyEntityConfig(FSEntityConfig inConfig);                                                                         // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void N(FName EventId);                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/GamePlay/InteractiveObject/BPI_PhysicInteraction.BPI_PhysicInteraction_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPI_PhysicInteraction_C : public UInterface
{ 
public:
	// void IsPhysicInteracted(bool& OutInteracted);                                                                            // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void WeightResponse(int32_t inMode);                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ScanResponse();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void GrabedResponse(bool inGrabed);                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Render/RuntimeBP/ScreenEffect/Data/EffectScreenPlayData.EffectScreenPlayData_C
/// Size: 0x0030 (48 bytes) (0x000038 - 0x000068) align 8 pad: 0x0000
class UEffectScreenPlayData_C : public UPrimaryDataAsset
{ 
public:
	float                                              Start;                                                      // 0x0038   (0x0004)  
	float                                              Loop;                                                       // 0x003C   (0x0004)  
	float                                              End;                                                        // 0x0040   (0x0004)  
	TEnumAsByte<E_SE_PlayOrder>                        PlayOrderType;                                              // 0x0044   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0045   (0x0003)  MISSED
	class UPrefabAsset*                                LGUIPrefab;                                                 // 0x0048   (0x0008)  
	bool                                               bStopByCall;                                                // 0x0050   (0x0001)  
	bool                                               bNormalizeTime;                                             // 0x0051   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x0052   (0x0002)  MISSED
	int32_t                                            Order;                                                      // 0x0054   (0x0004)  
	float                                              fadeSpeed;                                                  // 0x0058   (0x0004)  
	bool                                               bUsedForSequence;                                           // 0x005C   (0x0001)  
	bool                                               bAutoDestroy;                                               // 0x005D   (0x0001)  
	bool                                               bUseAudio;                                                  // 0x005E   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1];                                       // 0x005F   (0x0001)  MISSED
	class UAkAudioEvent*                               AudioEvent;                                                 // 0x0060   (0x0008)  
};

/// Class /Game/Aki/Render/RuntimeBP/ScreenEffect/BP_ScreenEffectSystem.BP_ScreenEffectSystem_C
/// Size: 0x00AC (172 bytes) (0x0002A8 - 0x000354) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ABP_ScreenEffectSystem_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	class UEffectScreenPlayData_C*                     DebugData;                                                  // 0x02B8   (0x0008)  
	SDK_UNDEFINED(80,1069) /* TMap<UEffectScreenPlayData_C*, ABP_ScreenEffectPlayer_C*> */ __um(Effects);          // 0x02C0   (0x0050)  
	TArray<class UEffectScreenPlayData_C*>             OrderDatas;                                                 // 0x0310   (0x0010)  
	TArray<class UEffectScreenPlayData_C*>             IndependentDatas;                                           // 0x0320   (0x0010)  
	bool                                               bEvaluateOrderEffects;                                      // 0x0330   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0331   (0x0007)  MISSED
	class AUIContainerActor*                           EditorScreenRoot;                                           // 0x0338   (0x0008)  
	class AUIContainerActor*                           ScreenEffectFightRoot;                                      // 0x0340   (0x0008)  
	class AUIContainerActor*                           ScreenEffectPlotRoot;                                       // 0x0348   (0x0008)  
	float                                              EnvironmentFactorDebug;                                     // 0x0350   (0x0004)  
	// void UpdateEnvironmentFactorDebug();                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateSEEnvironmentFactor(class UEffectScreenPlayData_C* Data, float EnvironmentFactor);                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void DestroyScreenEffect(class UEffectScreenPlayData_C* Data);                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SpawnPlayer(class UEffectScreenPlayData_C* Data, class ABP_ScreenEffectPlayer_C*& OutputPlayer);                    // [0x25a7960] Private|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetScreenEffectPlotRoot(class AUIContainerActor*& ScreenEffectPlotRoot);                                            // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void InitSEPlotRoot();                                                                                                   // [0x25a7960] Private|BlueprintCallable|BlueprintEvent 
	// void InitSEFightRoot();                                                                                                  // [0x25a7960] Private|BlueprintCallable|BlueprintEvent 
	// void GetScreenEffectFightRoot(class AUIContainerActor*& ScreenEffectFightRoot);                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdateLGUIMaterialParams();                                                                                         // [0x25a7960] Private|BlueprintCallable|BlueprintEvent 
	// void ClearSystem();                                                                                                      // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void SetVisibilityOfSystem(bool Visibility, bool bOverrideFadeSpeed, float OverrideFadeSpeed);                           // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void EndEffectDebug();                                                                                                   // [0x25a7960] Private|BlueprintCallable|BlueprintEvent 
	// void EndScreenEffect(class UEffectScreenPlayData_C* Data);                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EvaluateOrderEffects();                                                                                             // [0x25a7960] Private|BlueprintCallable|BlueprintEvent 
	// void PlayEffectDebug();                                                                                                  // [0x25a7960] Private|BlueprintCallable|BlueprintEvent 
	// void PlayScreenEffect(class UEffectScreenPlayData_C* Data);                                                              // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AddEffect(class UEffectScreenPlayData_C* Data, class ABP_ScreenEffectPlayer_C*& EffectPlayer);                      // [0x25a7960] Private|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_ScreenEffectSystem(int32_t EntryPoint);                                                         // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Input/Blueprints/BP_InputComponent.BP_InputComponent_C
/// Size: 0x00A5 (165 bytes) (0x000178 - 0x00021D) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UBP_InputComponent_C : public UBP_InputBase_C
{ 
public:
	SDK_UNDEFINED(80,1070) /* TMap<TEnumAsByte<EInputAction>, FSInputCaches> */ __um(__eQ);                        // 0x0178   (0x0050)  
	SDK_UNDEFINED(80,1071) /* TMap<TEnumAsByte<EInputAction>, FSInputHoldConfig> */ __um(___c);                    // 0x01C8   (0x0050)  
	bool                                               ___u_;                                                      // 0x0218   (0x0001)  
	bool                                               ____;                                                       // 0x0219   (0x0001)  
	bool                                               ___u_0;                                                     // 0x021A   (0x0001)  
	bool                                               ____1;                                                      // 0x021B   (0x0001)  
	bool                                               ___u_2;                                                     // 0x021C   (0x0001)  
	// FSInputCommand __a_2(float Time);                                                                                        // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _w_Q(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _b__1(float Time);                                                                                        // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void _____v_h(float Time);                                                                                               // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// FSInputCommand ___u_N(float Time);                                                                                       // [0x25a7960] Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _e_Q(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputHoldConfig GetUnrealHoldConfig(int32_t Action);                                                                   // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCaches GetUnrealCacheConfig(int32_t Action);                                                                      // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSInputCommand __a_1(float Time);                                                                                        // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand ____(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand (float Time);                                                                                             // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void _____c(float Time);                                                                                                 // [0x25a7960] Protected|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _____v(float Time);                                                                                       // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand p____R(float Time);                                                                                       // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand ____(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/Camera/SBaseCurve.SBaseCurve
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 4 pad: 0x0000
struct FSBaseCurve
{ 
	TEnumAsByte<EBaseCurveType>                        CurveType_4_A660E42245DE5A4982B9C1BAB3F4D355;               // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              N_9_7CEB15CF49A05BD4117208970B830890;                       // 0x0004   (0x0004)  
};

/// Struct /Game/Aki/Character/BaseCharacter/Camera/SCameraModifier.SCameraModifier
/// Size: 0x0108 (264 bytes) (0x000000 - 0x000108) align 8 pad: 0x0000
struct FSCameraModifier
{ 
	float                                              Duration_19_CC48372641C41CCA3F37CB9D6EB3EBDC;               // 0x0000   (0x0004)  
	float                                              BlendInTime_21_3D943AE242CFA3E81426A0AF7032CAA0;            // 0x0004   (0x0004)  
	float                                              BlendOutTime_23_89AC5C7A45BD2E7C14127BA750374C33;           // 0x0008   (0x0004)  
	float                                              BreakBlendOutTime_25_2DFC41B44379579C9E97B8B96748FB46;      // 0x000C   (0x0004)  
	FSCameraModifier_Settings                          Settings_27_AFA995314C12BDFF81B03CA2548F123C;               // 0x0010   (0x00E8)  
	FSBaseCurve                                        BlendInCurve_29_355F2D4B4516215F0E9882B24357B6A8;           // 0x00F8   (0x0008)  
	FSBaseCurve                                        BlendOutCurve_31_83684B51406A4C68E4E65FBD074A5596;          // 0x0100   (0x0008)  
};

/// Struct /Game/Aki/Character/BaseCharacter/Camera/SSettlementCamera.SSettlementCamera
/// Size: 0x0130 (304 bytes) (0x000000 - 0x000130) align 8 pad: 0x0000
struct FSSettlementCamera
{ 
	float                                              MinRandomPitch_8_29BF509945CABA0D6B035DAE737B9413;          // 0x0000   (0x0004)  
	float                                              MaxRandomPitch_10_182FF33C456B92E4A5B2CE9E4B4F9925;         // 0x0004   (0x0004)  
	float                                              TopAdditionZ_13_E2DBF33F4EA646A0F7C6BAA11E4DF6A8;           // 0x0008   (0x0004)  
	float                                              BottomAdditionZ_15_B7F22E2C4A07CF8BB0D9E1BBE075C7E5;        // 0x000C   (0x0004)  
	float                                              LeftMinYawRange_18_90FF2D5A43695534DE37E38601DC1837;        // 0x0010   (0x0004)  
	float                                              LeftMaxYawRange_20_85FCAA33493EC242D39C11A687F899C8;        // 0x0014   (0x0004)  
	float                                              RightMinYawRange_22_A796DE3A4B5057EEB4DFE5AB11CF8824;       // 0x0018   (0x0004)  
	float                                              RightMaxYawRange_24_192450894F44F3746EC00FBF96F8C682;       // 0x001C   (0x0004)  
	float                                              MinValidYawRange_26_6CD241194E170E4953D55EB046C2B921;       // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	FSCameraModifier                                   CameraModifier_30_5BAEE0E5443E5FC96BE9359A1F0BEA53;         // 0x0028   (0x0108)  
};

/// Class /Game/Aki/Data/Camera/BP_FightCameraConfig.BP_FightCameraConfig_C
/// Size: 0x08B0 (2224 bytes) (0x000038 - 0x0008E8) align 8 pad: 0x0000
class UBP_FightCameraConfig_C : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(80,1072) /* TMap<TEnumAsByte<EFightCameraDefault>, float> */ __um(_W);                           // 0x0038   (0x0050)  
	SDK_UNDEFINED(80,1073) /* TMap<TEnumAsByte<EFightCameraDefault>, FSBaseCurve> */ __um(_W_x_f);                 // 0x0088   (0x0050)  
	SDK_UNDEFINED(80,1074) /* TMap<TEnumAsByte<EFightCameraAdjust>, float> */ __um(_b__);                          // 0x00D8   (0x0050)  
	SDK_UNDEFINED(80,1075) /* TMap<TEnumAsByte<EFightCameraAdjust>, FSBaseCurve> */ __um(_b___Ock);                // 0x0128   (0x0050)  
	SDK_UNDEFINED(80,1076) /* TMap<TEnumAsByte<EFightCameraAuto>, float> */ __um(___R);                            // 0x0178   (0x0050)  
	SDK_UNDEFINED(80,1077) /* TMap<TEnumAsByte<EFightCameraAuto>, FSBaseCurve> */ __um(___R__4Y);                  // 0x01C8   (0x0050)  
	SDK_UNDEFINED(80,1078) /* TMap<TEnumAsByte<EFightCameraFocus>, float> */ __um(____);                           // 0x0218   (0x0050)  
	SDK_UNDEFINED(80,1079) /* TMap<TEnumAsByte<EFightCameraFocus>, FSBaseCurve> */ __um(______4Y);                 // 0x0268   (0x0050)  
	SDK_UNDEFINED(80,1080) /* TMap<TEnumAsByte<EFightCameraInput>, float> */ __um(__4Y);                           // 0x02B8   (0x0050)  
	SDK_UNDEFINED(80,1081) /* TMap<TEnumAsByte<EFightCameraInput>, FSBaseCurve> */ __um(__4Y__eQ);                 // 0x0308   (0x0050)  
	SDK_UNDEFINED(80,1082) /* TMap<TEnumAsByte<EFightCameraModify>, float> */ __um(M);                             // 0x0358   (0x0050)  
	SDK_UNDEFINED(80,1083) /* TMap<TEnumAsByte<EFightCameraModify>, FSBaseCurve> */ __um(M);                       // 0x03A8   (0x0050)  
	SDK_UNDEFINED(80,1084) /* TMap<TEnumAsByte<EFightCameraGuide>, float> */ __um(____);                           // 0x03F8   (0x0050)  
	SDK_UNDEFINED(80,1085) /* TMap<TEnumAsByte<EFightCameraGuide>, FSBaseCurve> */ __um(______4Y);                 // 0x0448   (0x0050)  
	SDK_UNDEFINED(80,1086) /* TMap<TEnumAsByte<EFightCameraExplore>, float> */ __um(___V);                         // 0x0498   (0x0050)  
	SDK_UNDEFINED(80,1087) /* TMap<TEnumAsByte<EFightCameraExplore>, FSBaseCurve> */ __um(___V__4Y);               // 0x04E8   (0x0050)  
	SDK_UNDEFINED(80,1088) /* TMap<TEnumAsByte<EFightCameraDialogue>, float> */ __um(____);                        // 0x0538   (0x0050)  
	SDK_UNDEFINED(80,1089) /* TMap<TEnumAsByte<EFightCameraDialogue>, FSBaseCurve> */ __um(______4Y);              // 0x0588   (0x0050)  
	SDK_UNDEFINED(80,1090) /* TMap<TEnumAsByte<EFightCameraClimb>, float> */ __um(null);                           // 0x05D8   (0x0050)  
	SDK_UNDEFINED(80,1091) /* TMap<TEnumAsByte<EFightCameraClimb>, FSBaseCurve> */ __um(null);                     // 0x0628   (0x0050)  
	SDK_UNDEFINED(80,1092) /* TMap<TEnumAsByte<EFightCameraSidestep>, float> */ __um(_y_R__);                      // 0x0678   (0x0050)  
	SDK_UNDEFINED(80,1093) /* TMap<TEnumAsByte<EFightCameraSidestep>, FSBaseCurve> */ __um(_y_R___R__);            // 0x06C8   (0x0050)  
	SDK_UNDEFINED(80,1094) /* TMap<TEnumAsByte<EFightCameraHook>, float> */ __um(____);                            // 0x0718   (0x0050)  
	SDK_UNDEFINED(80,1095) /* TMap<TEnumAsByte<EFightCameraHook>, FSBaseCurve> */ __um(______4Y);                  // 0x0768   (0x0050)  
	FSSettlementCamera                                 ____8;                                                      // 0x07B8   (0x0130)  
};

/// Class /Game/Aki/Data/Camera/BP_CameraConfig.BP_CameraConfig_C
/// Size: 0x01E8 (488 bytes) (0x000038 - 0x000220) align 8 pad: 0x0000
class UBP_CameraConfig_C : public UPrimaryDataAsset
{ 
public:
	float                                              _Rbc__r__v_g__;                                             // 0x0038   (0x0004)  
	float                                              _W4l_NDd_P_g_x_d;                                           // 0x003C   (0x0004)  
	float                                              ___x_x_d_hK;                                                // 0x0040   (0x0004)  
	float                                              ___R_O_N____eQ_NL;                                          // 0x0044   (0x0004)  
	float                                              ___R_O_N____eQ_NL0;                                         // 0x0048   (0x0004)  
	float                                              ___R_O_N____e;                                              // 0x004C   (0x0004)  
	float                                              ___R_O_N____e1;                                             // 0x0050   (0x0004)  
	float                                              ___R_O_N_____;                                              // 0x0054   (0x0004)  
	float                                              ___R_O_N_____2;                                             // 0x0058   (0x0004)  
	float                                              ___R_O_N____eQ_NL3;                                         // 0x005C   (0x0004)  
	float                                              ___R_O_N____eQ_NL4;                                         // 0x0060   (0x0004)  
	float                                              ___R_O_N____e5;                                             // 0x0064   (0x0004)  
	float                                              ___R_O_N____e6;                                             // 0x0068   (0x0004)  
	float                                              ___R_O_N_____7;                                             // 0x006C   (0x0004)  
	float                                              ___R_O_N_____8;                                             // 0x0070   (0x0004)  
	float                                              Dd_P_g;                                                     // 0x0074   (0x0004)  
	float                                              Dd_P_g9;                                                    // 0x0078   (0x0004)  
	float                                              Dd_P_g10;                                                   // 0x007C   (0x0004)  
	float                                              Dd_P_g11;                                                   // 0x0080   (0x0004)  
	float                                              _____;                                                      // 0x0084   (0x0004)  
	float                                              _____y_Oc;                                                  // 0x0088   (0x0004)  
	float                                              _____y_Oc12;                                                // 0x008C   (0x0004)  
	float                                              _____y_Oc13;                                                // 0x0090   (0x0004)  
	float                                              _____y_Oc14;                                                // 0x0094   (0x0004)  
	float                                              _hKmO_U__;                                                  // 0x0098   (0x0004)  
	float                                              _hKmO_U__15;                                                // 0x009C   (0x0004)  
	float                                              _hKmO_U__16;                                                // 0x00A0   (0x0004)  
	float                                              _hKmO_U__17;                                                // 0x00A4   (0x0004)  
	float                                              _v_h_k__r__f___;                                            // 0x00A8   (0x0004)  
	float                                              ___Y______pe;                                               // 0x00AC   (0x0004)  
	float                                              ___Y______pe_;                                              // 0x00B0   (0x0004)  
	float                                              ___Y__4ls_OP_;                                              // 0x00B4   (0x0004)  
	float                                              ___Y;                                                       // 0x00B8   (0x0004)  
	float                                              __r_O_U_;                                                   // 0x00BC   (0x0004)  
	float                                              ___Y___W_vOP_y__pe____;                                     // 0x00C0   (0x0004)  
	float                                              ___Y___W_;                                                  // 0x00C4   (0x0004)  
	float                                              ___Y___W_vOP_y__;                                           // 0x00C8   (0x0004)  
	float                                              ___Y18;                                                     // 0x00CC   (0x0004)  
	float                                              ______;                                                     // 0x00D0   (0x0004)  
	float                                              __OP_y_;                                                    // 0x00D4   (0x0004)  
	float                                              _hKmO_U__QM;                                                // 0x00D8   (0x0004)  
	float                                              _hKmO_U__QM19;                                              // 0x00DC   (0x0004)  
	float                                              _hKmO_U__QM20;                                              // 0x00E0   (0x0004)  
	float                                              _hKmO_U__QM21;                                              // 0x00E4   (0x0004)  
	float                                              ___el__;                                                    // 0x00E8   (0x0004)  
	float                                              _nn_t_q__;                                                  // 0x00EC   (0x0004)  
	float                                              _______S;                                                   // 0x00F0   (0x0004)  
	float                                              __OP_y___;                                                  // 0x00F4   (0x0004)  
	float                                              _el____S;                                                   // 0x00F8   (0x0004)  
	float                                              F;                                                          // 0x00FC   (0x0004)  
	float                                              _b___Ock;                                                   // 0x0100   (0x0004)  
	float                                              G;                                                          // 0x0104   (0x0004)  
	float                                              G22;                                                        // 0x0108   (0x0004)  
	float                                              G23;                                                        // 0x010C   (0x0004)  
	float                                              G24;                                                        // 0x0110   (0x0004)  
	float                                              G25;                                                        // 0x0114   (0x0004)  
	float                                              G26;                                                        // 0x0118   (0x0004)  
	float                                              G27;                                                        // 0x011C   (0x0004)  
	float                                              G28;                                                        // 0x0120   (0x0004)  
	float                                              G29;                                                        // 0x0124   (0x0004)  
	float                                              GInRangeMin;                                                // 0x0128   (0x0004)  
	float                                              GInRangeMax;                                                // 0x012C   (0x0004)  
	float                                              GOutRangeMin;                                               // 0x0130   (0x0004)  
	float                                              GOutRangeMax;                                               // 0x0134   (0x0004)  
	float                                              GCameraPitchMin;                                            // 0x0138   (0x0004)  
	float                                              GCameraPitchMax;                                            // 0x013C   (0x0004)  
	float                                              GCameraPitchOffset;                                         // 0x0140   (0x0004)  
	float                                              GNearerRange;                                               // 0x0144   (0x0004)  
	float                                              E;                                                          // 0x0148   (0x0004)  
	float                                              E30;                                                        // 0x014C   (0x0004)  
	float                                              EInRangeMin;                                                // 0x0150   (0x0004)  
	float                                              EInRangeMax;                                                // 0x0154   (0x0004)  
	float                                              EOutRangeMin;                                               // 0x0158   (0x0004)  
	float                                              EOutRangeMax;                                               // 0x015C   (0x0004)  
	float                                              E31;                                                        // 0x0160   (0x0004)  
	float                                              E32;                                                        // 0x0164   (0x0004)  
	float                                              D;                                                          // 0x0168   (0x0004)  
	float                                              D33;                                                        // 0x016C   (0x0004)  
	float                                              D34;                                                        // 0x0170   (0x0004)  
	float                                              D35;                                                        // 0x0174   (0x0004)  
	float                                              D36;                                                        // 0x0178   (0x0004)  
	float                                              D37;                                                        // 0x017C   (0x0004)  
	float                                              D38;                                                        // 0x0180   (0x0004)  
	float                                              D39;                                                        // 0x0184   (0x0004)  
	float                                              D40;                                                        // 0x0188   (0x0004)  
	float                                              D41;                                                        // 0x018C   (0x0004)  
	float                                              D42;                                                        // 0x0190   (0x0004)  
	float                                              null;                                                       // 0x0194   (0x0004)  
	float                                              null43;                                                     // 0x0198   (0x0004)  
	float                                              C;                                                          // 0x019C   (0x0004)  
	float                                              C44;                                                        // 0x01A0   (0x0004)  
	float                                              C45;                                                        // 0x01A4   (0x0004)  
	float                                              C46;                                                        // 0x01A8   (0x0004)  
	float                                              C47;                                                        // 0x01AC   (0x0004)  
	float                                              C48;                                                        // 0x01B0   (0x0004)  
	float                                              C49;                                                        // 0x01B4   (0x0004)  
	float                                              C50;                                                        // 0x01B8   (0x0004)  
	float                                              C51;                                                        // 0x01BC   (0x0004)  
	float                                              C52;                                                        // 0x01C0   (0x0004)  
	float                                              C53;                                                        // 0x01C4   (0x0004)  
	float                                              C54;                                                        // 0x01C8   (0x0004)  
	float                                              C55;                                                        // 0x01CC   (0x0004)  
	float                                              S;                                                          // 0x01D0   (0x0004)  
	float                                              C56;                                                        // 0x01D4   (0x0004)  
	float                                              C57;                                                        // 0x01D8   (0x0004)  
	float                                              S58;                                                        // 0x01DC   (0x0004)  
	float                                              S59;                                                        // 0x01E0   (0x0004)  
	float                                              S60;                                                        // 0x01E4   (0x0004)  
	float                                              S61;                                                        // 0x01E8   (0x0004)  
	float                                              S62;                                                        // 0x01EC   (0x0004)  
	float                                              _9______N___p;                                              // 0x01F0   (0x0004)  
	float                                              _9______N___p_W;                                            // 0x01F4   (0x0004)  
	float                                              _9______N___p63;                                            // 0x01F8   (0x0004)  
	float                                              _9______N___p4l;                                            // 0x01FC   (0x0004)  
	float                                              S64;                                                        // 0x0200   (0x0004)  
	float                                              C65;                                                        // 0x0204   (0x0004)  
	float                                              C66;                                                        // 0x0208   (0x0004)  
	float                                              __4Y__eQ;                                                   // 0x020C   (0x0004)  
	float                                              __4Y_W_Qup;                                                 // 0x0210   (0x0004)  
	float                                              __4Y_W_QupOe;                                               // 0x0214   (0x0004)  
	float                                              __4Y__eQ_;                                                  // 0x0218   (0x0004)  
	float                                              __4Y__eQ_67;                                                // 0x021C   (0x0004)  
};

/// Class /Game/Aki/Character/BaseCharacter/Camera/BPL_CameraUtility.BPL_CameraUtility_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPL_CameraUtility_C : public UBlueprintFunctionLibrary
{ 
public:
	// void DtGetCameraConfigList(TArray<FSCameraConfig>& CameraSettings, class UDataTable* DataTable, class UObject* __WorldContext); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void DtGetCameraConfigs(TArray<FSCamera_Setting>& CameraSettings, class UDataTable* DataTable, class UObject* __WorldContext); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/BaseCharacter/Camera/BP_CineCamera.BP_CineCamera_C
/// Size: 0x00C8 (200 bytes) (0x000950 - 0x000A18) align 16 pad: 0x0008
#pragma pack(push, 0x1)
class ABP_CineCamera_C : public ACineCameraActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0950   (0x0008)  
	float                                              ResolutionAdaptFactor;                                      // 0x0958   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x095C   (0x0004)  MISSED
	FDataTableRowHandle                                UiCameraAnimationRow;                                       // 0x0960   (0x0018)  
	bool                                               IsAutoTransform;                                            // 0x0978   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0979   (0x0003)  MISSED
	float                                              OffsetTime;                                                 // 0x097C   (0x0004)  
	float                                              MaxOffsetTime;                                              // 0x0980   (0x0004)  
	FCameraFilmbackSettings                            Filmback;                                                   // 0x0984   (0x000C)  
	bool                                               Constrain_Aspect_Ratio;                                     // 0x0990   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0991   (0x0003)  MISSED
	float                                              Current_Focal_Length;                                       // 0x0994   (0x0004)  
	float                                              Current_Aperture;                                           // 0x0998   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x099C   (0x0004)  MISSED
	FCameraFocusSettings                               Focus_Settings;                                             // 0x09A0   (0x0060)  
	FCameraLensSettings                                Lens_Settings;                                              // 0x0A00   (0x0018)  
	// void ResetSeqCineCamSetting();                                                                                           // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ApplyUiCameraSettings();                                                                                            // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void BeginAutoTransform(float TimeLength);                                                                               // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void EndAutoTransform();                                                                                                 // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_CineCamera(int32_t EntryPoint);                                                                 // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Data/PathLine/Pathline_EdgeWall/BP_BasePathLine_Edgewall.BP_BasePathLine_Edgewall_C
/// Size: 0x0029 (41 bytes) (0x0002A8 - 0x0002D1) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class ABP_BasePathLine_Edgewall_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USplineComponent*                            Spline;                                                     // 0x02B0   (0x0008)  
	FVector                                            OriginalLocation;                                           // 0x02B8   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02C4   (0x0004)  MISSED
	class AActor*                                      DebugTarget;                                                // 0x02C8   (0x0008)  
	bool                                               IsAttachedToEntity;                                         // 0x02D0   (0x0001)  
	// void Save();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _4_0W();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_BP_BasePathLine_Edgewall(int32_t EntryPoint);                                                      // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Data/PathLine/BP_MovePathLine.BP_MovePathLine_C
/// Size: 0x0025 (37 bytes) (0x0002A8 - 0x0002CD) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class ABP_MovePathLine_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class UKuroMoveSplineComponent*                    Spline;                                                     // 0x02B0   (0x0008)  
	class AActor*                                      DebugTarget;                                                // 0x02B8   (0x0008)  
	FVector                                            OriginalLocation;                                           // 0x02C0   (0x000C)  
	bool                                               IsAttachedToEntity;                                         // 0x02CC   (0x0001)  
	// void _4_0W();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Save();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_BP_MovePathLine(int32_t EntryPoint);                                                               // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Data/PathLine/BP_BasePathLine.BP_BasePathLine_C
/// Size: 0x0029 (41 bytes) (0x0002A8 - 0x0002D1) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class ABP_BasePathLine_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USplineComponent*                            Spline;                                                     // 0x02B0   (0x0008)  
	FVector                                            OriginalLocation;                                           // 0x02B8   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02C4   (0x0004)  MISSED
	class AActor*                                      DebugTarget;                                                // 0x02C8   (0x0008)  
	bool                                               IsAttachedToEntity;                                         // 0x02D0   (0x0001)  
	// void Save();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _4_0W();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_BP_BasePathLine(int32_t EntryPoint);                                                               // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/NPC/Common/BPI_NpcEcological.BPI_NpcEcological_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPI_NpcEcological_C : public UInterface
{ 
public:
	// void HandlePlayerAttackEnd();                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void HandlePlayerAttack();                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void HandlePlayerImpactEnd();                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void HandlePlayerImpact();                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void HandlePlayerExit();                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void HandlePlayerEnter();                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void HandleQuestChanged();                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void HandleDayStateChanged();                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void HandleWeatherChanged();                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/BaseCharacter/BP_CharacterController.BP_CharacterController_C
/// Size: 0x0020 (32 bytes) (0x000730 - 0x000750) align 8 pad: 0x0000
class ABP_CharacterController_C : public ATsCharacterController_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0730   (0x0008)  
	class ATsBaseCharacter_C*                          S_MR_d;                                                     // 0x0738   (0x0008)  
	bool                                               GmIsOpen;                                                   // 0x0740   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0741   (0x0007)  MISSED
	class UBP_KuroCheatManager_C*                      KuroCheatManager;                                           // 0x0748   (0x0008)  
	// void ReceiveUnPossess(class APawn* UnpossessedPawn);                                                                     // [0x25a7960] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceivePossess(class APawn* PossessedPawn);                                                                         // [0x25a7960] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnPressAnyKey(FKey Key);                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnReleaseAnyKey(FKey Key);                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_CharacterController(int32_t EntryPoint);                                                        // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/UI/Manager/BP_EventManager.BP_EventManager_C
/// Size: 0x0150 (336 bytes) (0x000048 - 0x000198) align 8 pad: 0x0000
class UBP_EventManager_C : public UBP_ManagerBase_C
{ 
public:
	SDK_UNDEFINED(16,1096) /* FMulticastInlineDelegate */ __um(Lub__u_T);                                          // 0x0048   (0x0010)  
	SDK_UNDEFINED(16,1097) /* FMulticastInlineDelegate */ __um(S__g__r);                                           // 0x0058   (0x0010)  
	SDK_UNDEFINED(16,1098) /* FMulticastInlineDelegate */ __um(S_____Lu);                                          // 0x0068   (0x0010)  
	SDK_UNDEFINED(16,1099) /* FMulticastInlineDelegate */ __um(_Rd_);                                              // 0x0078   (0x0010)  
	SDK_UNDEFINED(16,1100) /* FMulticastInlineDelegate */ __um(WorldDoneNotify);                                   // 0x0088   (0x0010)  
	SDK_UNDEFINED(16,1101) /* FMulticastInlineDelegate */ __um(_X_R);                                              // 0x0098   (0x0010)  
	SDK_UNDEFINED(16,1102) /* FMulticastInlineDelegate */ __um(S_bc_N);                                            // 0x00A8   (0x0010)  
	SDK_UNDEFINED(16,1103) /* FMulticastInlineDelegate */ __um(P_9__);                                             // 0x00B8   (0x0010)  
	SDK_UNDEFINED(16,1104) /* FMulticastInlineDelegate */ __um(__r___MO_);                                         // 0x00C8   (0x0010)  
	SDK_UNDEFINED(16,1105) /* FMulticastInlineDelegate */ __um(__r___MO1);                                         // 0x00D8   (0x0010)  
	SDK_UNDEFINED(16,1106) /* FMulticastInlineDelegate */ __um(A);                                                 // 0x00E8   (0x0010)  
	SDK_UNDEFINED(16,1107) /* FMulticastInlineDelegate */ __um(___ci);                                             // 0x00F8   (0x0010)  
	SDK_UNDEFINED(16,1108) /* FMulticastInlineDelegate */ __um(CaughtEntity);                                      // 0x0108   (0x0010)  
	SDK_UNDEFINED(16,1109) /* FMulticastInlineDelegate */ __um(__r__r_);                                           // 0x0118   (0x0010)  
	SDK_UNDEFINED(16,1110) /* FMulticastInlineDelegate */ __um(S____S__);                                          // 0x0128   (0x0010)  
	SDK_UNDEFINED(16,1111) /* FMulticastInlineDelegate */ __um(S__g__r);                                           // 0x0138   (0x0010)  
	SDK_UNDEFINED(16,1112) /* FMulticastInlineDelegate */ __um(_____b_e_);                                         // 0x0148   (0x0010)  
	SDK_UNDEFINED(16,1113) /* FMulticastInlineDelegate */ __um(_____b___);                                         // 0x0158   (0x0010)  
	SDK_UNDEFINED(16,1114) /* FMulticastInlineDelegate */ __um(_b_S_v_);                                           // 0x0168   (0x0010)  
	SDK_UNDEFINED(16,1115) /* FMulticastInlineDelegate */ __um(Pg___d_);                                           // 0x0178   (0x0010)  
	SDK_UNDEFINED(16,1116) /* FMulticastInlineDelegate */ __um(S_____);                                            // 0x0188   (0x0010)  
	// void S______f_e_e_();                                                                                                    // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void Pg___d_e___g_e_(int32_t Pg__);                                                                                      // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void _b_S_v_h_b_R_e_(int32_t RoleEntityId, int32_t CaughtEntityId, FString CaughtID);                                    // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void _____b___v_h9e_S_e_(class ATsBaseCharacter_C* _v);                                                                  // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void _____b_e_r__9e_S_e_(bool _f_T__);                                                                                   // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void S__g__r__k_N_e_(class ATsBaseCharacter_C* __);                                                                      // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void S____S__V__N_N_e_(int32_t __V__N, FSHitInformation _S_Q);                                                           // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void __r__r___Rbc_e_(class ATsBaseCharacter_C* __, TEnumAsByte<ECharacterState> ___, TEnumAsByte<ECharacterState> _e_, bool _N); // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void CaughtEntity__DelegateSignature(int32_t RoleEntityId, int32_t CaughtEntityId, FString CaughtID, TEnumAsByte<ECaughtResultType> Result); // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void ___cir___d_();                                                                                                      // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void A(class ATsBaseCharacter_C* __, int32_t Index);                                                                     // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void __r___MO1__pSb_Q_e_(class ATsBaseCharacter_C* __, FGameplayTag __MOT, class ATsBaseCharacter_C* _e_);               // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void __r___MO_____S_S_e_(class ATsBaseCharacter_C* __, FGameplayTag __MOT, float _S_SMR_, float _S_S_T_);                // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void P_9__T_NMR_(int32_t BulletId, int32_t EntityID);                                                                    // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void S_bc_N___b_e_();                                                                                                    // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void _X_R__SO_(int32_t __SO, class AActor* entity);                                                                      // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void WorldDoneNotify__DelegateSignature();                                                                               // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void Rd___SO_(class AActor* Rd__);                                                                                       // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void S_____Lub_Sb(FName inID);                                                                                           // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void S__g__r__S_Q_e_(class ATsBaseCharacter_C* __, FSHitInformation _S_Q);                                               // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void Lub__u_ThT_g9e_S_(char _u_ThT, class UObject* Lub_);                                                                // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Sequence/Manager/BP_SequenceData.BP_SequenceData_C
/// Size: 0x00C0 (192 bytes) (0x000038 - 0x0000F8) align 16 pad: 0x0008
#pragma pack(push, 0x1)
class UBP_SequenceData_C : public UPrimaryDataAsset
{ 
public:
	TEnumAsByte<EPlotSequenceType>                     __;                                                         // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0039   (0x0007)  MISSED
	TArray<class ULevelSequence*>                      gR__;                                                       // 0x0040   (0x0010)  
	FString                                            _e_gD_;                                                     // 0x0050   (0x0010)  
	TArray<FName>                                      ______;                                                     // 0x0060   (0x0010)  
	FString                                            ____w__;                                                    // 0x0070   (0x0010)  
	bool                                               _f_T_V_;                                                    // 0x0080   (0x0001)  
	bool                                               NeedSwitchMainCharacter;                                    // 0x0081   (0x0001)  
	bool                                               IsTransformOverride;                                        // 0x0082   (0x0001)  
	unsigned char                                      UnknownData01_6[0xD];                                       // 0x0083   (0x000D)  MISSED
	FTransform                                         OverrideTransform;                                          // 0x0090   (0x0030)  
	float                                              AnimationBlendInTime;                                       // 0x00C0   (0x0004)  
	float                                              AnimationBlendOutTime;                                      // 0x00C4   (0x0004)  
	float                                              CameraBlendInTime;                                          // 0x00C8   (0x0004)  
	float                                              CameraBlendOutTime;                                         // 0x00CC   (0x0004)  
	bool                                               MovementSync;                                               // 0x00D0   (0x0001)  
	bool                                               SaveFinalTransform;                                         // 0x00D1   (0x0001)  
	bool                                               _h___N_o;                                                   // 0x00D2   (0x0001)  
	bool                                               HidePlayer;                                                 // 0x00D3   (0x0001)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x00D4   (0x0004)  MISSED
	class UBP_SequenceData_Generated_C*                GeneratedData;                                              // 0x00D8   (0x0008)  
	int32_t                                            k___;                                                       // 0x00E0   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x00E4   (0x0004)  MISSED
	FString                                            GraphName;                                                  // 0x00E8   (0x0010)  
};
#pragma pack(pop)

/// Class /Game/Aki/UI/Framework/DataTableUtil.DataTableUtil_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UDataTableUtil_C : public UBlueprintFunctionLibrary
{ 
public:
	// void GetDataTableOnEditor(FString Path, class UObject* __WorldContext, class UDataTable*& Return);                       // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadAiWeaponSocketConfigs(FName RowName, int32_t& Key, class UObject* __WorldContext, FSWeaponSocketItem& Weapon);  // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadAiWeaponSocket(FName RowName, class UObject* __WorldContext, FSAiWeaponSocket& OutRow);                         // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadAllAiWeaponSockets(class UObject* __WorldContext, TMap<int32_t, FSAiWeaponSocket>& Sockets);                    // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSSceneUITagConfig LoadSceneUITagConfig(FString RowName, class UObject* __WorldContext, bool& bFound);                   // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FSSceneDecorationConfig LoadSceneDecorationConfig(FString RowName, class UObject* __WorldContext, bool& bFound);         // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadManipulateItemConfig(FString InRow, class UObject* __WorldContext, FSManipulateConfig& outConfig, bool& outFound); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadManipulatePrecastConfig(FString InRow, class UObject* __WorldContext, FSManipulateConfig& outConfig, bool& outFound); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadCharacterFightInfo(class UDataTable* CharacterFightInfo, FString CharacterResourcePath, class UObject* __WorldContext, FSCharacterFightInfo& OutInfo, bool& outIsFound); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// TArray<FSSkillMontage> LoadAllSkillMontages(class UObject* __WorldContext);                                              // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadParkourConfig(FName RowName, class UObject* __WorldContext, FSParkourConfig& ___, bool& found);                 // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// TArray<FSCamp> LoadAllCampConfigs(class UObject* __WorldContext);                                                        // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetCampNum(int32_t Camp, class UObject* __WorldContext, TEnumAsByte<ECamp>& Num);                                   // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void LoadHitMapConfig(int32_t MapID, class UObject* __WorldContext, FSHitMapping& Result, bool& found);                  // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadCampConfig(int32_t CampNum, class UObject* __WorldContext, FSCamp& CampInfo, bool& found);                      // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadAIConfig(FString inConfigId, class UObject* __WorldContext, FSAIConfig& OutRow, bool& outFound);                // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSUiCameraAnimationBlendSettings LoadUiCameraAnimationBlendSettings(FString RowName, class UObject* __WorldContext, bool& bFound); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSUiCameraAnimationSettings LoadUiCameraAnimationSettings(FString RowName, class UObject* __WorldContext, bool& bFound); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadInteractionConfig(FString InRow, class UObject* __WorldContext, FSInteractionConfig& ouConfig, bool& outFound); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadCipherInfo(FString InRow, class UObject* __WorldContext, FSCipherGameplay& outConfig, bool& outFound);          // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void LoadConditionGroupInfo(FString InRow, class UObject* __WorldContext, FSConditionGroup& outConfig, bool& outFound);  // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadGmOrderInfo(class UObject* __WorldContext, TArray<FSGMOrderInfo>& gmInfoList1);                                 // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadSeqNetworksInfo(class UDataTable* inSeqNetwork, FString InRow, class UObject* __WorldContext, FSSequencesNetwork& OutInfo, bool& outIsFound); // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadVisionInfo(FString phantomId, class UObject* __WorldContext, FSVisionData& visionConfig, bool& found);          // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadServerInfo(class UObject* __WorldContext, TArray<FSServerInfo>& NewParam);                                      // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadModelConfig(FString Row, class UObject* __WorldContext, bool& bSucc, FSModelConfig& Result);                    // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void LoadRoleQualityInfo(FString Row, class UObject* __WorldContext, bool& bSucc, FSRoleQualityInfo& Result);            // [0x25a7960] Static|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/UI/Framework/LGUIEventSystemActor.LGUIEventSystemActor_C
/// Size: 0x0068 (104 bytes) (0x0002B0 - 0x000318) align 8 pad: 0x0000
class ALGUIEventSystemActor_C : public ALGUIEventSystemActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B0   (0x0008)  
	class ULGUI_TouchInputModule*                      LGUI_TouchInputModule;                                      // 0x02B8   (0x0008)  
	class ULGUI_StandaloneInputModule*                 LGUI_StandaloneInputModule;                                 // 0x02C0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C8   (0x0008)  
	class ULGUI_PointerInputModule*                    ValidInputModule;                                           // 0x02D0   (0x0008)  
	SDK_UNDEFINED(16,1117) /* FMulticastInlineDelegate */ __um(OnMiddleMouseScroll);                               // 0x02D8   (0x0010)  
	SDK_UNDEFINED(16,1118) /* FMulticastInlineDelegate */ __um(OnTouch);                                           // 0x02E8   (0x0010)  
	SDK_UNDEFINED(16,1119) /* FMulticastInlineDelegate */ __um(OnTouchMove);                                       // 0x02F8   (0x0010)  
	SDK_UNDEFINED(16,1120) /* FMulticastInlineDelegate */ __um(OnClickKey);                                        // 0x0308   (0x0010)  
	// void InpActEvt_Gamepad_FaceButton_Bottom_K2Node_InputKeyEvent(FKey Key);                                                 // [0x25a7960] BlueprintEvent       
	// void InpActEvt_Down_K2Node_InputKeyEvent(FKey Key);                                                                      // [0x25a7960] BlueprintEvent       
	// void InpActEvt_Up_K2Node_InputKeyEvent(FKey Key);                                                                        // [0x25a7960] BlueprintEvent       
	// void InpActEvt_Right_K2Node_InputKeyEvent(FKey Key);                                                                     // [0x25a7960] BlueprintEvent       
	// void InpActEvt_Left_K2Node_InputKeyEvent(FKey Key);                                                                      // [0x25a7960] BlueprintEvent       
	// void InpActEvt_Enter_K2Node_InputKeyEvent(FKey Key);                                                                     // [0x25a7960] BlueprintEvent       
	// void InpTchEvt_Moved(TEnumAsByte<ETouchIndex> FingerIndex, FVector Location);                                            // [0x25a7960] BlueprintEvent       
	// void InpTchEvt_Released(TEnumAsByte<ETouchIndex> FingerIndex, FVector Location);                                         // [0x25a7960] BlueprintEvent       
	// void InpTchEvt_Pressed(TEnumAsByte<ETouchIndex> FingerIndex, FVector Location);                                          // [0x25a7960] BlueprintEvent       
	// void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent(FKey Key);                                                           // [0x25a7960] BlueprintEvent       
	// void InpActEvt_Gamepad_LeftStick_Left_K2Node_InputKeyEvent(FKey Key);                                                    // [0x25a7960] BlueprintEvent       
	// void InpActEvt_Gamepad_LeftStick_Right_K2Node_InputKeyEvent(FKey Key);                                                   // [0x25a7960] BlueprintEvent       
	// void InpActEvt_Gamepad_LeftStick_Up_K2Node_InputKeyEvent(FKey Key);                                                      // [0x25a7960] BlueprintEvent       
	// void InpActEvt_Gamepad_LeftStick_Down_K2Node_InputKeyEvent(FKey Key);                                                    // [0x25a7960] BlueprintEvent       
	// void InpActEvt_RightMouseButton_K2Node_InputKeyEvent(FKey Key);                                                          // [0x25a7960] BlueprintEvent       
	// void InpActEvt_MiddleMouseButton_K2Node_InputKeyEvent(FKey Key);                                                         // [0x25a7960] BlueprintEvent       
	// void InpActEvt_AnyKey_K2Node_InputKeyEvent(FKey Key);                                                                    // [0x25a7960] BlueprintEvent       
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent(float AxisValue);                                             // [0x25a7960] BlueprintEvent       
	// void ExecuteUbergraph_LGUIEventSystemActor(int32_t EntryPoint);                                                          // [0x25a7960] Final|HasDefaults    
	// void OnClickKey__DelegateSignature(FKey KeyCode, bool IsPress);                                                          // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void OnTouchMove__DelegateSignature(int32_t TouchID, FVector TouchPointPosition);                                        // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void OnTouch__DelegateSignature(bool TouchPress, int32_t TouchID, FVector TouchPointPosition);                           // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void OnMiddleMouseScroll__DelegateSignature(float AxisValue);                                                            // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Audio/BP_AudioVisualizer.BP_AudioVisualizer_C
/// Size: 0x00B0 (176 bytes) (0x0002A8 - 0x000358) align 8 pad: 0x0000
class ABP_AudioVisualizer_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class UAkComponent*                                Ak;                                                         // 0x02B0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B8   (0x0008)  
	float                                              LeftRight_Amount_E70A81694434E6033ACF01BCCBB3EA40;          // 0x02C0   (0x0004)  
	float                                              LeftRight_Speed_E70A81694434E6033ACF01BCCBB3EA40;           // 0x02C4   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    LeftRight__Direction_E70A81694434E6033ACF01BCCBB3EA40;      // 0x02C8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02C9   (0x0007)  MISSED
	class UTimelineComponent*                          LeftRight;                                                  // 0x02D0   (0x0008)  
	float                                              Timeline_1_Amount_E9903C6548E1132FB686C5B44E42F03F;         // 0x02D8   (0x0004)  
	float                                              Timeline_1_Speed_E9903C6548E1132FB686C5B44E42F03F;          // 0x02DC   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    Timeline_1__Direction_E9903C6548E1132FB686C5B44E42F03F;     // 0x02E0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x02E1   (0x0007)  MISSED
	class UTimelineComponent*                          Timeline;                                                   // 0x02E8   (0x0008)  
	float                                              BassTimeline_Amount_56F891924BAD722F43E980B6AFE54B74;       // 0x02F0   (0x0004)  
	float                                              BassTimeline_Speed_56F891924BAD722F43E980B6AFE54B74;        // 0x02F4   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    BassTimeline__Direction_56F891924BAD722F43E980B6AFE54B74;   // 0x02F8   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x02F9   (0x0007)  MISSED
	class UTimelineComponent*                          BassTimeline;                                               // 0x0300   (0x0008)  
	float                                              Timeline_0_Amount_84FB19EE41A244783A5C418B4069C9D8;         // 0x0308   (0x0004)  
	float                                              Timeline_0_Speed_84FB19EE41A244783A5C418B4069C9D8;          // 0x030C   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    Timeline_0__Direction_84FB19EE41A244783A5C418B4069C9D8;     // 0x0310   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0311   (0x0007)  MISSED
	class UTimelineComponent*                          Timeline0;                                                  // 0x0318   (0x0008)  
	int32_t                                            NewVar;                                                     // 0x0320   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x0324   (0x0004)  MISSED
	class UAkAudioEvent*                               Ak_Event;                                                   // 0x0328   (0x0008)  
	float                                              A01Time;                                                    // 0x0330   (0x0004)  
	float                                              A02Time;                                                    // 0x0334   (0x0004)  
	float                                              A03Time;                                                    // 0x0338   (0x0004)  
	float                                              A04Time;                                                    // 0x033C   (0x0004)  
	float                                              A01Speed;                                                   // 0x0340   (0x0004)  
	float                                              A02Speed;                                                   // 0x0344   (0x0004)  
	float                                              A03Speed;                                                   // 0x0348   (0x0004)  
	float                                              A04Speed;                                                   // 0x034C   (0x0004)  
	bool                                               UsingMax_;                                                  // 0x0350   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0x0351   (0x0003)  MISSED
	int32_t                                            PlayID;                                                     // 0x0354   (0x0004)  
	// void StopAllEffects();                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void NotifyMidi(class UAkCallbackInfo* CallbackInfo, EAkCallbackType CallbackType, FString State);                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BassTimeline__FinishedFunc();                                                                                       // [0x25a7960] BlueprintEvent       
	// void BassTimeline__UpdateFunc();                                                                                         // [0x25a7960] BlueprintEvent       
	// void Timeline_0__FinishedFunc();                                                                                         // [0x25a7960] BlueprintEvent       
	// void Timeline_0__UpdateFunc();                                                                                           // [0x25a7960] BlueprintEvent       
	// void Timeline_1__FinishedFunc();                                                                                         // [0x25a7960] BlueprintEvent       
	// void Timeline_1__UpdateFunc();                                                                                           // [0x25a7960] BlueprintEvent       
	// void LeftRight__FinishedFunc();                                                                                          // [0x25a7960] BlueprintEvent       
	// void LeftRight__UpdateFunc();                                                                                            // [0x25a7960] BlueprintEvent       
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void C_4On();                                                                                                            // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void D4On();                                                                                                             // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void D_4On();                                                                                                            // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void E4On();                                                                                                             // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void F4On();                                                                                                             // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void F_4On();                                                                                                            // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void G4On();                                                                                                             // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void G_4On();                                                                                                            // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void F_4Off();                                                                                                           // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void C4On();                                                                                                             // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void MIDICall(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo, FString State);                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void Stop();                                                                                                             // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_AudioVisualizer(int32_t EntryPoint);                                                            // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Core/Fight/Manager/BP_FightManager.BP_FightManager_C
/// Size: 0x01A4 (420 bytes) (0x000048 - 0x0001EC) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_FightManager_C : public UBP_ManagerBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0048   (0x0008)  
	class UBP_ActorManager_C*                          __r__;                                                      // 0x0050   (0x0008)  
	bool                                               _R_Y_;                                                      // 0x0058   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0059   (0x0007)  MISSED
	SDK_UNDEFINED(16,1121) /* FMulticastInlineDelegate */ __um(_N_m);                                              // 0x0060   (0x0010)  
	SDK_UNDEFINED(16,1122) /* FMulticastInlineDelegate */ __um(_Q__);                                              // 0x0070   (0x0010)  
	SDK_UNDEFINED(16,1123) /* FMulticastInlineDelegate */ __um(4x_va);                                             // 0x0080   (0x0010)  
	SDK_UNDEFINED(16,1124) /* FMulticastInlineDelegate */ __um(_N__);                                              // 0x0090   (0x0010)  
	class UDataTable*                                  _5___sQ;                                                    // 0x00A0   (0x0008)  
	SDK_UNDEFINED(16,1125) /* FMulticastInlineDelegate */ __um(___O__r_);                                          // 0x00A8   (0x0010)  
	SDK_UNDEFINED(80,1126) /* TMap<int32_t, UObject*> */ __um(B);                                                  // 0x00B8   (0x0050)  
	TArray<class UObject*>                             __ir4N_eB;                                                  // 0x0108   (0x0010)  
	bool                                               _Wof_R;                                                     // 0x0118   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0119   (0x0007)  MISSED
	SDK_UNDEFINED(80,1127) /* TMap<FString, ATsBaseCharacter_C*> */ __um(D);                                       // 0x0120   (0x0050)  
	SDK_UNDEFINED(16,1128) /* FMulticastInlineDelegate */ __um(_m_RD);                                             // 0x0170   (0x0010)  
	SDK_UNDEFINED(16,1129) /* FMulticastInlineDelegate */ __um(_Rd_D);                                             // 0x0180   (0x0010)  
	SDK_UNDEFINED(80,1130) /* TMap<int32_t, int32_t> */ __um(_zMO__);                                              // 0x0190   (0x0050)  
	class UDataTable*                                  _S_Q___;                                                    // 0x01E0   (0x0008)  
	int32_t                                            _e_QM;                                                      // 0x01E8   (0x0004)  
	// void _g___S_Q(int32_t ID, FSHitMapping& _S_Q, bool& _f_T);                                                               // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _zMO(TArray<UObject*>& __ir);                                                                                       // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Rd_D(class ATsBaseCharacter_C*& baseChar);                                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _m_RD(class ATsBaseCharacter_C*& baseChar);                                                                         // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _l_QB(class UObject* B);                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _p_____S_b_();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _p_____();                                                                                                          // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void _5___(TEnumAsByte<ECamp> ____, TEnumAsByte<ECamp> _v_h, TEnumAsByte<ERelation>& sQ, int32_t& sQ__);                 // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _R_(class UBP_MainGameInstance_C* _8n_b);                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _b_e_();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Tick(float DeltaSeconds);                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void S_5____R();                                                                                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_FightManager(int32_t EntryPoint);                                                               // [0x25a7960] Final                
	// void ___O__r__R_____b_();                                                                                                // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void _4x_vag___S_(class ATsBaseCharacter_C* ___);                                                                        // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void _Q_____S_(class ATsBaseCharacter_C* ___);                                                                           // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void _N_m___S_(class ATsBaseCharacter_C* ___);                                                                           // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void _N_____S_(class ATsBaseCharacter_C* ___);                                                                           // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/BP_BasePlatform.BP_BasePlatform_C
/// Size: 0x0018 (24 bytes) (0x0002A8 - 0x0002C0) align 8 pad: 0x0000
class ABP_BasePlatform_C : public AActor
{ 
public:
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02A8   (0x0008)  
	float                                              LeaveSphereRadius;                                          // 0x02B0   (0x0004)  
	FVector                                            LeaveSphereCenter;                                          // 0x02B4   (0x000C)  
};

/// Class /Game/Aki/Render/RuntimeBP/Interaction/PDA_InteractionPlayerConfig.PDA_InteractionPlayerConfig_C
/// Size: 0x0030 (48 bytes) (0x000038 - 0x000068) align 8 pad: 0x0000
class UPDA_InteractionPlayerConfig_C : public UPrimaryDataAsset
{ 
public:
	bool                                               _T_u_i;                                                     // 0x0038   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0039   (0x0003)  MISSED
	float                                              _i___N;                                                     // 0x003C   (0x0004)  
	float                                              _i___N_;                                                    // 0x0040   (0x0004)  
	float                                              _i___N0;                                                    // 0x0044   (0x0004)  
	bool                                               _T_u4l;                                                     // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0049   (0x0007)  MISSED
	class UPDA_WaterEffectConfigs_C*                   _4ly;                                                       // 0x0050   (0x0008)  
	float                                              _____T;                                                     // 0x0058   (0x0004)  
	bool                                               ___RI;                                                      // 0x005C   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x005D   (0x0003)  MISSED
	class UClusteredStuffDataAsset*                    I____;                                                      // 0x0060   (0x0008)  
};

/// Class /Game/Aki/Data/Effect/BPL_EffectUtil.BPL_EffectUtil_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPL_EffectUtil_C : public UBlueprintFunctionLibrary
{ 
public:
	// void InitializeWithPreview(class UObject* WorldContext, bool Refresh, class UObject* __WorldContext, bool& Success);     // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Render/Scene/Item/MaterialController/ItemMaterialControllerActorData.ItemMaterialControllerActorData_C
/// Size: 0x2A00 (10752 bytes) (0x000038 - 0x002A38) align 8 pad: 0x0000
class UItemMaterialControllerActorData_C : public UPrimaryDataAsset
{ 
public:
	float                                              StartTime;                                                  // 0x0038   (0x0004)  
	float                                              LoopTime;                                                   // 0x003C   (0x0004)  
	float                                              EndTime;                                                    // 0x0040   (0x0004)  
	bool                                               EnableBaseColorScale;                                       // 0x0044   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0045   (0x0003)  MISSED
	FKuroCurveFloat                                    BaseColorScale;                                             // 0x0048   (0x0090)  
	bool                                               EnableAddEmissionColor;                                     // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
	FKuroCurveLinearColor                              AddEmissionColor;                                           // 0x00E0   (0x0220)  
	bool                                               EnableRimLight;                                             // 0x0300   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0301   (0x0007)  MISSED
	FKuroCurveLinearColor                              RimLightColor;                                              // 0x0308   (0x0220)  
	bool                                               EnableDissolve;                                             // 0x0528   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0529   (0x0007)  MISSED
	FKuroCurveFloat                                    DissolveProgress;                                           // 0x0530   (0x0090)  
	FKuroCurveFloat                                    DissolveAdjustment;                                         // 0x05C0   (0x0090)  
	FKuroCurveLinearColor                              DissolveTexScaleOffset;                                     // 0x0650   (0x0220)  
	FKuroCurveLinearColor                              DissolveTexSpeed;                                           // 0x0870   (0x0220)  
	FKuroCurveFloat                                    RimPower;                                                   // 0x0A90   (0x0090)  
	TEnumAsByte<ECharacterControllerUVSwitch>          DissolveUv;                                                 // 0x0B20   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x0B21   (0x0007)  MISSED
	FKuroCurveLinearColor                              DissolveEdageColor;                                         // 0x0B28   (0x0220)  
	FKuroCurveFloat                                    DissolveEdageStrength;                                      // 0x0D48   (0x0090)  
	FKuroCurveFloat                                    DissolveEdageWidth;                                         // 0x0DD8   (0x0090)  
	bool                                               EnableScanning;                                             // 0x0E68   (0x0001)  
	unsigned char                                      UnknownData05_6[0x7];                                       // 0x0E69   (0x0007)  MISSED
	FKuroCurveFloat                                    ScanningOutlineStrength;                                    // 0x0E70   (0x0090)  
	FKuroCurveLinearColor                              ScanningOutlineTexScaleOffset;                              // 0x0F00   (0x0220)  
	FKuroCurveLinearColor                              ScanningOutlineColor;                                       // 0x1120   (0x0220)  
	FKuroCurveFloat                                    ScanningOutlineMixNoiseStrength;                            // 0x1340   (0x0090)  
	bool                                               EnableEmissionChange;                                       // 0x13D0   (0x0001)  
	unsigned char                                      UnknownData06_6[0x7];                                       // 0x13D1   (0x0007)  MISSED
	FKuroCurveFloat                                    EmissionLightColorChangeProgress;                           // 0x13D8   (0x0090)  
	FKuroCurveFloat                                    EmissionLightColorChangeStrength;                           // 0x1468   (0x0090)  
	FKuroCurveLinearColor                              EmissionLightColorChangeColor;                              // 0x14F8   (0x0220)  
	FKuroCurveFloat                                    VertexAnimTimeDebug;                                        // 0x1718   (0x0090)  
	FKuroCurveFloat                                    VertexAnimFrame;                                            // 0x17A8   (0x0090)  
	bool                                               EnablePivotPainterWorldPositionOffset;                      // 0x1838   (0x0001)  
	unsigned char                                      UnknownData07_6[0x7];                                       // 0x1839   (0x0007)  MISSED
	FKuroCurveLinearColor                              PivotPainterTransform;                                      // 0x1840   (0x0220)  
	FKuroCurveFloat                                    FloatingThreshold;                                          // 0x1A60   (0x0090)  
	bool                                               DisableFoliageEffect;                                       // 0x1AF0   (0x0001)  
	bool                                               EnableFoliageEffect;                                        // 0x1AF1   (0x0001)  
	bool                                               UseRimlightColorSpecil;                                     // 0x1AF2   (0x0001)  
	unsigned char                                      UnknownData08_6[0x5];                                       // 0x1AF3   (0x0005)  MISSED
	FKuroCurveLinearColor                              RimLightColorSpecil;                                        // 0x1AF8   (0x0220)  
	FKuroCurveFloat                                    RimlightColorStrength;                                      // 0x1D18   (0x0090)  
	bool                                               EnableWorldPositionOffset;                                  // 0x1DA8   (0x0001)  
	unsigned char                                      UnknownData09_6[0x7];                                       // 0x1DA9   (0x0007)  MISSED
	FKuroCurveLinearColor                              WorldPositionOffsetOffset;                                  // 0x1DB0   (0x0220)  
	FKuroCurveFloat                                    WorldPositionOffsetNormal;                                  // 0x1FD0   (0x0090)  
	bool                                               UseEmissionTex;                                             // 0x2060   (0x0001)  
	unsigned char                                      UnknownData10_6[0x7];                                       // 0x2061   (0x0007)  MISSED
	FKuroCurveFloat                                    EmissionTexStrength;                                        // 0x2068   (0x0090)  
	FKuroCurveFloat                                    SimpleUspeed;                                               // 0x20F8   (0x0090)  
	FKuroCurveFloat                                    SimpleVspeed;                                               // 0x2188   (0x0090)  
	FKuroCurveFloat                                    SimpleUseFlow;                                              // 0x2218   (0x0090)  
	bool                                               EnableQuanXiPinTu;                                          // 0x22A8   (0x0001)  
	unsigned char                                      UnknownData11_6[0x7];                                       // 0x22A9   (0x0007)  MISSED
	FKuroCurveFloat                                    TransparencyQuanXiPinTu;                                    // 0x22B0   (0x0090)  
	FKuroCurveLinearColor                              TransparentColorQuanXiPinTu;                                // 0x2340   (0x0220)  
	FKuroCurveLinearColor                              OpaqueColorQuanXiPinTu;                                     // 0x2560   (0x0220)  
	bool                                               EnableQuanXiFengSuo;                                        // 0x2780   (0x0001)  
	unsigned char                                      UnknownData12_6[0x7];                                       // 0x2781   (0x0007)  MISSED
	FKuroCurveFloat                                    TransparencyQuanXiFengSuo;                                  // 0x2788   (0x0090)  
	FKuroCurveLinearColor                              TransparentColorQuanXiFengSuo;                              // 0x2818   (0x0220)  
};

/// Class /Game/Aki/Render/RuntimeBP/StateMachineEffect/BP_StateMachineEffectBase.BP_StateMachineEffectBase_C
/// Size: 0x0440 (1088 bytes) (0x0002B8 - 0x0006F8) align 8 pad: 0x0000
class ABP_StateMachineEffectBase_C : public AKuroEditorTickActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C0   (0x0008)  
	bool                                               IsEditorTick;                                               // 0x02C8   (0x0001)  
	TEnumAsByte<EEffectState>                          CurrentState;                                               // 0x02C9   (0x0001)  
	bool                                               IsInit;                                                     // 0x02CA   (0x0001)  
	TEnumAsByte<EEffectState>                          TargetState;                                                // 0x02CB   (0x0001)  
	bool                                               IsInTransition;                                             // 0x02CC   (0x0001)  
	TEnumAsByte<EEffectState>                          TransitionTargetState;                                      // 0x02CD   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x02CE   (0x0002)  MISSED
	float                                              TransitionCounter;                                          // 0x02D0   (0x0004)  
	float                                              TransitionTime;                                             // 0x02D4   (0x0004)  
	SDK_UNDEFINED(80,1131) /* TMap<FName, float> */    __um(TransitionFloatStartMap);                              // 0x02D8   (0x0050)  
	SDK_UNDEFINED(80,1132) /* TMap<FName, float> */    __um(TransitionFloatEndMap);                                // 0x0328   (0x0050)  
	SDK_UNDEFINED(80,1133) /* TMap<FName, FLinearColor> */ __um(TransitionLinearColorStartMap);                    // 0x0378   (0x0050)  
	SDK_UNDEFINED(80,1134) /* TMap<FName, FLinearColor> */ __um(TransitionLinearColorEndMap);                      // 0x03C8   (0x0050)  
	bool                                               IsInState;                                                  // 0x0418   (0x0001)  
	bool                                               IsStatePreLoop;                                             // 0x0419   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x041A   (0x0002)  MISSED
	float                                              StateCounter;                                               // 0x041C   (0x0004)  
	class UPD_StateMachineEffect_C*                    Data;                                                       // 0x0420   (0x0008)  
	TArray<class UStaticMeshComponent*>                StaticMeshComponents;                                       // 0x0428   (0x0010)  
	TArray<class UMaterialInstanceDynamic*>            StaticMeshDMIs;                                             // 0x0438   (0x0010)  
	FSEffectStateInfo                                  CurrentStateInfo;                                           // 0x0448   (0x0150)  
	bool                                               IsFirstTickInfo;                                            // 0x0598   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0599   (0x0007)  MISSED
	SDK_UNDEFINED(80,1135) /* TMap<FName, float> */    __um(CurrentFloatMap);                                      // 0x05A0   (0x0050)  
	SDK_UNDEFINED(80,1136) /* TMap<FName, FLinearColor> */ __um(CurrentLinearColorMap);                            // 0x05F0   (0x0050)  
	TEnumAsByte<EEffectState>                          InitState;                                                  // 0x0640   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0641   (0x0007)  MISSED
	TArray<class UNiagaraComponent*>                   NiagaraComponents;                                          // 0x0648   (0x0010)  
	SDK_UNDEFINED(80,1137) /* TMap<int32_t, FSTransitionFloatIndexGroup> */ __um(TransitionIndexFloatEndMap);      // 0x0658   (0x0050)  
	SDK_UNDEFINED(80,1138) /* TMap<int32_t, FSTransitionLinearColorIndexGroup> */ __um(TransitionIndexLinearColorEndMap); // 0x06A8   (0x0050)  
	// void SetState(TEnumAsByte<EEffectState> TargetState);                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void D();                                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void CreateTransitionState(TEnumAsByte<EEffectState> TargetState);                                                       // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdateParameters(FName Name, bool IsFloat, float FloatValue, bool IsLinearColor, FLinearColor LinearColorValue, int32_t Index); // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdateLoopState();                                                                                                  // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdatePreLoopState();                                                                                               // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdateTransitionState();                                                                                            // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void Reset();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PlayEffectState(class UPD_StateMachineEffect_C* InputData, TEnumAsByte<EEffectState> TargetState);                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Tick();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Init(TEnumAsByte<EEffectState> TargetState);                                                                        // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void EditorInit();                                                                                                       // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_BP_StateMachineEffectBase(int32_t EntryPoint);                                                     // [0x25a7960] Final                
};

/// Class /Game/Aki/TypeScript/Game/Render/Character/Manager/CharRenderingComponent.CharRenderingComponent_C
/// Size: 0x0010 (16 bytes) (0x0000C0 - 0x0000D0) align 8 pad: 0x0000
class UCharRenderingComponent_C : public UActorComponent
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00C0   (0x0008)  
	class UPDA_InteractionPlayerConfig_C*              InteractionConfig;                                          // 0x00C8   (0x0008)  
	// void ReceiveSeqTick(float DeltaSeconds);                                                                                 // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void RemoveComponentFromDecalShadow(FString Name);                                                                       // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddComponentForDecalShadow(FString Name, class UPrimitiveComponent* Comp);                                          // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void DisableAllShadowByDecalShadowComponent();                                                                           // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetDecalShadowEnabled(bool Enable);                                                                                 // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// float QuickInitAndAddDataGroupWithMeshComponent(class UObject* Data, class UMeshComponent* MeshComponent);               // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetBodyEffectOpacity(float Opacity);                                                                                // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void RegisterBodyEffect(float Handle);                                                                                   // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void RemoveComponentByCase(TEnumAsByte<ECharacterControllerCaseType> caseType);                                          // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetEffectProgress(float progress, int32_t HandleId);                                                                // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool GetInWater();                                                                                                       // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float QuickInitAndAddDataWithMeshComponent(class UObject* Data, class UMeshComponent* MeshComponent);                    // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AddComponentByCase(TEnumAsByte<ECharacterControllerCaseType> caseType, class UMeshComponent* skeletalComp);         // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// float QuickInitAndAddDataGroup(class UObject* Data, class ASkeletalMeshActor* meshActor);                                // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RemoveMaterialControllerDataGroupWithEnding(int32_t Handle);                                                        // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetDitherEffect(float ditherRate, TEnumAsByte<ECharacterDitherType> ditherType);                                    // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetCapsuleDither(float Value);                                                                                      // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetMaterialPropertyColor(TEnumAsByte<ECharacterBodySpecifiedType> bodyType, float SectionIndex, TEnumAsByte<ECharacterSlotSpecifiedType> slotType, FString PropertyName, FLinearColor Value); // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void SetMaterialPropertyFloat(TEnumAsByte<ECharacterBodySpecifiedType> bodyType, float SectionIndex, TEnumAsByte<ECharacterSlotSpecifiedType> slotType, FString PropertyName, float Value); // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// float QuickInitAndAddData(class UObject* Data, class ASkeletalMeshActor* meshActor);                                     // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnFinalizedLevelSequence();                                                                                         // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void RemoveComponent(FString skelName);                                                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddComponent(FString skelName, class UMeshComponent* skeletalComp);                                                 // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// class UPD_MaterialDebug_C* GetDebugInfo();                                                                               // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetDebug(bool Value);                                                                                               // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool CheckInit();                                                                                                        // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RemoveMaterialControllerDataGroup(int32_t Handle);                                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// int32_t AddMaterialControllerDataGroup(class UObject* Data);                                                             // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RemoveMaterialControllerDataWithEnding(int32_t Handle);                                                             // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ResetAllRenderingState();                                                                                           // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// int32_t AddMaterialControllerData(class UObject* Data);                                                                  // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void RemoveMaterialControllerData(int32_t handle1);                                                                      // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void Init(TEnumAsByte<ECharacterRenderingType> renderType);                                                              // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_CharRenderingComponent(int32_t EntryPoint);                                                        // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/Character/TsBaseCharacter.TsBaseCharacter_C
/// Size: 0x0121 (289 bytes) (0x000650 - 0x000771) align 16 pad: 0x0001
#pragma pack(push, 0x1)
class ATsBaseCharacter_C : public ABaseCharacter
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0650   (0x0008)  
	class UNavigationInvokerComponent*                 NavigationInvoker;                                          // 0x0658   (0x0008)  
	class UTsCharacterDebugComponent_C*                TsCharacterDebugComponent;                                  // 0x0660   (0x0008)  
	class UCharRenderingComponent_C*                   CharRenderingComponent;                                     // 0x0668   (0x0008)  
	class UBP_FightManager_C*                          FightManager;                                               // 0x0670   (0x0008)  
	class UDataTable*                                  DtHitEffect;                                                // 0x0678   (0x0008)  
	class UDataTable*                                  DtBaseMovementSetting;                                      // 0x0680   (0x0008)  
	TArray<FName>                                      BattleSockets;                                              // 0x0688   (0x0010)  
	TArray<FName>                                      NormalSockets;                                              // 0x0698   (0x0010)  
	class UPD_CharacterControllerData_C*               WeaponInEffect;                                             // 0x06A8   (0x0008)  
	TEnumAsByte<ECharacterRenderingType>               renderType;                                                 // 0x06B0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x06B1   (0x0007)  MISSED
	class UDataTable*                                  DtNewBulletDataMain;                                        // 0x06B8   (0x0008)  
	class UDataTable*                                  DtCharacterPart;                                            // 0x06C0   (0x0008)  
	FSoftClassPath                                     InputComponentClass;                                        // 0x06C8   (0x0020)  
	class UPrimaryDataAsset*                           FkData;                                                     // 0x06E8   (0x0008)  
	class UEffectModelBase*                            WeaponHideEffect;                                           // 0x06F0   (0x0008)  
	class UPrimaryDataAsset*                           CharacterData;                                              // 0x06F8   (0x0008)  
	SDK_UNDEFINED(80,1139) /* TMap<FName, UAkComponent*> */ __um(AkComponentMap);                                  // 0x0700   (0x0050)  
	bool                                               PhysicsClothSimulateEnable;                                 // 0x0750   (0x0001)  
	bool                                               PhysicsClothSimulateDisableOneFrame;                        // 0x0751   (0x0001)  
	bool                                               CachePoseEnableOneFrame;                                    // 0x0752   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1];                                       // 0x0753   (0x0001)  MISSED
	float                                              CacheTime;                                                  // 0x0754   (0x0004)  
	class UDataTable*                                  DtCameraConfig;                                             // 0x0758   (0x0008)  
	int32_t                                            EntityID;                                                   // 0x0760   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0764   (0x0004)  MISSED
	class ABP_BasePlatform_C*                          BasePlatform;                                               // 0x0768   (0x0008)  
	TEnumAsByte<ECamp>                                 Camp;                                                       // 0x0770   (0x0001)  
	// int32_t GetEntityId();                                                                                                   // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetDitherEffect(float dither, TEnumAsByte<ECharacterDitherType> ditherType);                                        // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void Initialize();                                                                                                       // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void FightCommand(bool isInAir);                                                                                         // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void K2_OnMovementModeChanged(TEnumAsByte<EMovementMode> PrevMovementMode, TEnumAsByte<EMovementMode> NewMovementMode, char PrevCustomMode, char NewCustomMode); // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceivePossessed(class AController* NewController);                                                                 // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveUnpossessed(class AController* OldController);                                                               // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void K2_UpdateCustomMovement(float DeltaTime);                                                                           // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveDestroyed();                                                                                                 // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsBaseCharacter(int32_t EntryPoint);                                                               // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/NPC/Common/BP_BaseNPC.BP_BaseNPC_C
/// Size: 0x005F (95 bytes) (0x000771 - 0x0007D0) align 16 pad: 0x0000
class ABP_BaseNPC_C : public ATsBaseCharacter_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0771   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0778   (0x0008)  
	class UBoxComponent*                               HitCollision;                                               // 0x0780   (0x0008)  
	class UBP_Lipsync_AL_C*                            BP_Lipsync_AL;                                              // 0x0788   (0x0008)  
	class UNavigationInvokerComponent*                 NavigationInvoker;                                          // 0x0790   (0x0008)  
	bool                                               IsBeingImpacted;                                            // 0x0798   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0799   (0x0003)  MISSED
	float                                              Direction;                                                  // 0x079C   (0x0004)  
	float                                              Strength;                                                   // 0x07A0   (0x0004)  
	bool                                               IsBeingAttacked;                                            // 0x07A4   (0x0001)  
	bool                                               CanPlayerImpact;                                            // 0x07A5   (0x0001)  
	bool                                               CanPlayerAttack;                                            // 0x07A6   (0x0001)  
	bool                                               CanLookAtPlayer;                                            // 0x07A7   (0x0001)  
	FSoftObjectPath                                    BornEffect;                                                 // 0x07A8   (0x0020)  
	class USkeletalMeshComponent*                      CombineFaceMesh;                                            // 0x07C8   (0x0008)  
	// void _h_g_f_T(bool& IsAttack);                                                                                           // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ___wA(bool IsAttack);                                                                                               // [0x25a7960] Private|BlueprintCallable|BlueprintEvent 
	// void gbL__e(bool& Success);                                                                                              // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void gbL__Q(bool& Success);                                                                                              // [0x25a7960] Private|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void __n_(bool Value);                                                                                                   // [0x25a7960] Private|BlueprintCallable|BlueprintEvent 
	// void initAI();                                                                                                           // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void BndEvt__BP_BaseNPC_HitCollision_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x25a7960] BlueprintEvent       
	// void BndEvt__BP_BaseNPC_HitCollision_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x25a7960] HasOutParms|BlueprintEvent 
	// void ExecuteUbergraph_BP_BaseNPC(int32_t EntryPoint);                                                                    // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/NCS_Block_Nomal.NCS_Block_Nomal_C
/// Size: 0x0000 (0 bytes) (0x0001B8 - 0x0001B8) align 16 pad: 0x0000
class UNCS_Block_Nomal_C : public UBP_CameraShakeAndForceFeedback_C
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/NCS_Block_Perfect.NCS_Block_Perfect_C
/// Size: 0x0000 (0 bytes) (0x0001B8 - 0x0001B8) align 16 pad: 0x0000
class UNCS_Block_Perfect_C : public UBP_CameraShakeAndForceFeedback_C
{ 
public:
};

/// Struct /Game/Aki/Render/RuntimeBP/Character/MaterialController/SMaterialControllerLoopTime.SMaterialControllerLoopTime
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 4 pad: 0x0000
struct FSMaterialControllerLoopTime
{ 
	float                                              Start_22_B06A1F774CAA9C5F13C71E87B7CCB6C2;                  // 0x0000   (0x0004)  
	float                                              Loop_23_A9391DC74BDC68E6124245910E060D3C;                   // 0x0004   (0x0004)  
	float                                              End_24_21B7494C4AD588EBDC96B18A4CD69845;                    // 0x0008   (0x0004)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Character/MaterialController/SMaterialControllerTextureGroup.SMaterialControllerTextureGroup
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 pad: 0x0000
struct FSMaterialControllerTextureGroup
{ 
	class UTexture2D*                                  Start_22_BA8F63454A2DEDC93ED9DEA8D3925117;                  // 0x0000   (0x0008)  
	class UTexture2D*                                  Loop_23_269796ED40C12C1F3C6137AB71336D35;                   // 0x0008   (0x0008)  
	class UTexture2D*                                  End_24_B983B4EA4F04FBE1C1F527AC87EF2D7B;                    // 0x0010   (0x0008)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Character/MaterialController/SMaterialControllerTextureParameter.SMaterialControllerTextureParameter
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 8 pad: 0x0000
struct FSMaterialControllerTextureParameter
{ 
	FName                                              ParameterName_2_63DBF67741F1C36DF997F194BA36AA4F;           // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FSMaterialControllerTextureGroup                   ParameterValue_12_CC60B0BF4272CF87B5FE94AFE3803E42;         // 0x0010   (0x0018)  
};

/// Class /Game/Aki/Render/RuntimeBP/Character/MaterialController/PD_CharacterControllerData.PD_CharacterControllerData_C
/// Size: 0x4A38 (19000 bytes) (0x000038 - 0x004A70) align 8 pad: 0x0000
class UPD_CharacterControllerData_C : public UPrimaryDataAsset
{ 
public:
	TEnumAsByte<ECharacterControllerType>              DataType;                                                   // 0x0038   (0x0001)  
	TEnumAsByte<ECharacterBodySpecifiedType>           SpecifiedBodyType;                                          // 0x0039   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x003A   (0x0006)  MISSED
	SDK_UNDEFINED(16,1140) /* TArray<TEnumAsByte<ECharacterMeshPart>> */ __um(SpecifiedParts);                     // 0x0040   (0x0010)  
	TEnumAsByte<ECharacterSlotSpecifiedType>           SpecifiedSlotType;                                          // 0x0050   (0x0001)  
	TEnumAsByte<ECharacterControllerApplyType>         MaterialModifyType;                                         // 0x0051   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x0052   (0x0006)  MISSED
	class UMaterialInterface*                          ReplaceMaterial;                                            // 0x0058   (0x0008)  
	bool                                               UseRim;                                                     // 0x0060   (0x0001)  
	bool                                               UseOutline;                                                 // 0x0061   (0x0001)  
	bool                                               UseDissolve;                                                // 0x0062   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1];                                       // 0x0063   (0x0001)  MISSED
	FSMaterialControllerLoopTime                       LoopTime;                                                   // 0x0064   (0x000C)  
	bool                                               RimRevertProperty;                                          // 0x0070   (0x0001)  
	bool                                               RimUseTex;                                                  // 0x0071   (0x0001)  
	TEnumAsByte<ECharacterControllerChannelSwitch>     RimChannel;                                                 // 0x0072   (0x0001)  
	unsigned char                                      UnknownData03_6[0x5];                                       // 0x0073   (0x0005)  MISSED
	FSMaterialControllerFloatGroup                     RimRange;                                                   // 0x0078   (0x01B0)  
	FSMaterialControllerColorGroup                     RimColor;                                                   // 0x0228   (0x0660)  
	bool                                               OutlineRevertProperty;                                      // 0x0888   (0x0001)  
	bool                                               OutlineUseTex;                                              // 0x0889   (0x0001)  
	unsigned char                                      UnknownData04_6[0x6];                                       // 0x088A   (0x0006)  MISSED
	FSMaterialControllerFloatGroup                     OutlineWidth;                                               // 0x0890   (0x01B0)  
	FSMaterialControllerColorGroup                     OutlineColor;                                               // 0x0A40   (0x0660)  
	bool                                               DissolveRevertProperty;                                     // 0x10A0   (0x0001)  
	TEnumAsByte<ECharacterControllerChannelSwitch>     DissolveChannel;                                            // 0x10A1   (0x0001)  
	unsigned char                                      UnknownData05_6[0x6];                                       // 0x10A2   (0x0006)  MISSED
	FSMaterialControllerFloatGroup                     DissolveProgress;                                           // 0x10A8   (0x01B0)  
	FSMaterialControllerColorGroup                     DissolveColor;                                              // 0x1258   (0x0660)  
	FSMaterialControllerFloatGroup                     DissolveColorIntensity;                                     // 0x18B8   (0x01B0)  
	bool                                               UseTextureSample;                                           // 0x1A68   (0x0001)  
	bool                                               TextureSampleRevertProperty;                                // 0x1A69   (0x0001)  
	bool                                               UseAlphaToMask;                                             // 0x1A6A   (0x0001)  
	unsigned char                                      UnknownData06_6[0x5];                                       // 0x1A6B   (0x0005)  MISSED
	class UTexture2D*                                  maskTexture;                                                // 0x1A70   (0x0008)  
	FSMaterialControllerFloatGroup                     Rotation;                                                   // 0x1A78   (0x01B0)  
	TEnumAsByte<ECharacterControllerUVSwitch>          UVSelection;                                                // 0x1C28   (0x0001)  
	unsigned char                                      UnknownData07_6[0x7];                                       // 0x1C29   (0x0007)  MISSED
	FSMaterialControllerColorGroup                     TextureScaleAndOffset;                                      // 0x1C30   (0x0660)  
	FSMaterialControllerColorGroup                     TextureSpeed;                                               // 0x2290   (0x0660)  
	FSMaterialControllerColorGroup                     TextureColorTint;                                           // 0x28F0   (0x0660)  
	FSMaterialControllerFloatGroup                     OutlineIntensity;                                           // 0x2F50   (0x01B0)  
	bool                                               UseOuterOutlineEffect;                                      // 0x3100   (0x0001)  
	bool                                               MobileUseDifferentMaterial;                                 // 0x3101   (0x0001)  
	unsigned char                                      UnknownData08_6[0x6];                                       // 0x3102   (0x0006)  MISSED
	class UMaterialInterface*                          ReplaceMaterialMobile;                                      // 0x3108   (0x0008)  
	bool                                               RevertMaterial;                                             // 0x3110   (0x0001)  
	bool                                               UseParameterModify;                                         // 0x3111   (0x0001)  
	unsigned char                                      UnknownData09_6[0x6];                                       // 0x3112   (0x0006)  MISSED
	TArray<FSMaterialControllerFloatParameter>         FloatParameters;                                            // 0x3118   (0x0010)  
	bool                                               UseColor;                                                   // 0x3128   (0x0001)  
	bool                                               ColorRevertProperty;                                        // 0x3129   (0x0001)  
	bool                                               BaseUseTex;                                                 // 0x312A   (0x0001)  
	unsigned char                                      UnknownData10_6[0x5];                                       // 0x312B   (0x0005)  MISSED
	FSMaterialControllerColorGroup                     BaseColor;                                                  // 0x3130   (0x0660)  
	FSMaterialControllerFloatGroup                     BaseColorIntensity;                                         // 0x3790   (0x01B0)  
	bool                                               EmissionUseTex;                                             // 0x3940   (0x0001)  
	unsigned char                                      UnknownData11_6[0x7];                                       // 0x3941   (0x0007)  MISSED
	FSMaterialControllerColorGroup                     EmissionColor;                                              // 0x3948   (0x0660)  
	FSMaterialControllerFloatGroup                     EmissionIntensity;                                          // 0x3FA8   (0x01B0)  
	TArray<FSMaterialControllerColorParameter>         ColorParameters;                                            // 0x4158   (0x0010)  
	bool                                               UseCustomMaterialEffect;                                    // 0x4168   (0x0001)  
	bool                                               CustomRevertProperty;                                       // 0x4169   (0x0001)  
	unsigned char                                      UnknownData12_6[0x6];                                       // 0x416A   (0x0006)  MISSED
	TArray<FSMaterialControllerFloatParameter>         CustomFloatParameters;                                      // 0x4170   (0x0010)  
	TArray<FSMaterialControllerColorParameter>         CustomColorParameters;                                      // 0x4180   (0x0010)  
	TArray<FSMaterialControllerTextureParameter>       CustomTextureParameters;                                    // 0x4190   (0x0010)  
	bool                                               UseMotionOffset;                                            // 0x41A0   (0x0001)  
	bool                                               MotionOffsetRevertProperty;                                 // 0x41A1   (0x0001)  
	unsigned char                                      UnknownData13_6[0x2];                                       // 0x41A2   (0x0002)  MISSED
	float                                              MotionOffsetLength;                                         // 0x41A4   (0x0004)  
	float                                              MotionAffectVertexRange;                                    // 0x41A8   (0x0004)  
	unsigned char                                      UnknownData14_6[0x4];                                       // 0x41AC   (0x0004)  MISSED
	TArray<FString>                                    WeaponCases;                                                // 0x41B0   (0x0010)  
	bool                                               IgnoreTimeDilation;                                         // 0x41C0   (0x0001)  
	bool                                               HiddenAfterEffect;                                          // 0x41C1   (0x0001)  
	unsigned char                                      UnknownData15_6[0x6];                                       // 0x41C2   (0x0006)  MISSED
	FSMaterialControllerFloatGroup                     DissolveSmooth;                                             // 0x41C8   (0x01B0)  
	FSMaterialControllerFloatGroup                     MotionNoiseSpeed;                                           // 0x4378   (0x01B0)  
	bool                                               UseDitherEffect;                                            // 0x4528   (0x0001)  
	bool                                               DitherRevertProperty;                                       // 0x4529   (0x0001)  
	unsigned char                                      UnknownData16_6[0x6];                                       // 0x452A   (0x0006)  MISSED
	FSMaterialControllerFloatGroup                     DitherValue;                                                // 0x4530   (0x01B0)  
	TArray<FString>                                    OtherCases;                                                 // 0x46E0   (0x0010)  
	class UKuroCharacterMaterialControllerCache*       CacheObject;                                                // 0x46F0   (0x0008)  
	bool                                               IsInitCacheObject;                                          // 0x46F8   (0x0001)  
	bool                                               CleanOriginEffect;                                          // 0x46F9   (0x0001)  
	unsigned char                                      UnknownData17_6[0x6];                                       // 0x46FA   (0x0006)  MISSED
	FSMaterialControllerFloatGroup                     RimIntensity;                                               // 0x4700   (0x01B0)  
	TArray<FString>                                    CustomPartNames;                                            // 0x48B0   (0x0010)  
	FSMaterialControllerFloatGroup                     TextureMaskRange;                                           // 0x48C0   (0x01B0)  
	// void InitCache();                                                                                                        // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
};

/// Struct /Game/Aki/Render/RuntimeBP/Effect/Data/SEffectFloatParameter.SEffectFloatParameter
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 4 pad: 0x0000
struct FSEffectFloatParameter
{ 
	FName                                              Name_2_73B4815B4872FA09388D1E8CAB039F0A;                    // 0x0000   (0x000C)  
	float                                              Value_5_1A3845E1458AF3E64BA76BA32FBE27E2;                   // 0x000C   (0x0004)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Effect/Data/SEffectColorParameter.SEffectColorParameter
/// Size: 0x001C (28 bytes) (0x000000 - 0x00001C) align 4 pad: 0x0000
struct FSEffectColorParameter
{ 
	FName                                              Name_2_73B4815B4872FA09388D1E8CAB039F0A;                    // 0x0000   (0x000C)  
	FLinearColor                                       Value_5_634F3A9F4A18CFF4F73970AA6988EA1F;                   // 0x000C   (0x0010)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Effect/Data/SEffectVectorParameter.SEffectVectorParameter
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 4 pad: 0x0000
struct FSEffectVectorParameter
{ 
	FName                                              Name_6_73B4815B4872FA09388D1E8CAB039F0A;                    // 0x0000   (0x000C)  
	FVector                                            Value_5_AAB84F19447AFF4D03E58D9C8E54EFA8;                   // 0x000C   (0x000C)  
};

/// Class /Game/Aki/Render/RuntimeBP/Effect/BP_EffectActor.BP_EffectActor_C
/// Size: 0x00A3 (163 bytes) (0x0002B8 - 0x00035B) align 8 pad: 0x0003
#pragma pack(push, 0x1)
class ABP_EffectActor_C : public AKuroSceneEffectActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C0   (0x0008)  
	FSoftObjectPath                                    EffectData;                                                 // 0x02C8   (0x0020)  
	bool                                               DebugPrintOnConstruction;                                   // 0x02E8   (0x0001)  
	bool                                               EditorTickWithoutSelected;                                  // 0x02E9   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x02EA   (0x0002)  MISSED
	int32_t                                            EffectComponent;                                            // 0x02EC   (0x0004)  
	TEnumAsByte<EEffectPlay>                           PlayType;                                                   // 0x02F0   (0x0001)  
	TEnumAsByte<EEffectType>                           EffectType;                                                 // 0x02F1   (0x0001)  
	bool                                               FirstTick;                                                  // 0x02F2   (0x0001)  
	bool                                               _O_uyr;                                                     // 0x02F3   (0x0001)  
	float                                              _s_XIQq__;                                                  // 0x02F4   (0x0004)  
	TArray<FSEffectFloatParameter>                     _u7b_SpeF;                                                  // 0x02F8   (0x0010)  
	TArray<FSEffectColorParameter>                     _u7b_SpeC;                                                  // 0x0308   (0x0010)  
	TArray<FSEffectVectorParameter>                    _u7b_SpeV;                                                  // 0x0318   (0x0010)  
	TArray<FSEffectFloatParameter>                     Pg___SpeF;                                                  // 0x0328   (0x0010)  
	TArray<FSEffectColorParameter>                     Pg___SpeC;                                                  // 0x0338   (0x0010)  
	TArray<FSEffectFloatParameter>                     Pg___SpeF0;                                                 // 0x0348   (0x0010)  
	bool                                               UsedInBossFight;                                            // 0x0358   (0x0001)  
	bool                                               ShouldBePlaying;                                            // 0x0359   (0x0001)  
	bool                                               OpenVisibilityOptimize;                                     // 0x035A   (0x0001)  
	// void GetHandle(int32_t& Handle);                                                                                         // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void StopEffect();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PlayEffect();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Play(FString reason);                                                                                               // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool Stop(FString reason, bool Immediately);                                                                             // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void IsEditor(bool& IsEditor);                                                                                           // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void CalculateLifeTime();                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Refresh();                                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void RemoveHandle();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void SetHandle(int32_t Handle);                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void DoHiddenInGame(bool bValue);                                                                                        // [0x25a7960] Event|Public|BlueprintEvent 
	// void OnReceiveHideSceneEffectActor();                                                                                    // [0x25a7960] Event|Protected|BlueprintEvent 
	// void OnReceiveShowSceneEffectActor();                                                                                    // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_BP_EffectActor(int32_t EntryPoint);                                                                // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Map/AkiWorld_WP.AkiWorld_WP_C
/// Size: 0x0008 (8 bytes) (0x0002B0 - 0x0002B8) align 8 pad: 0x0000
class AAkiWorld_WP_C : public ALevelScriptActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B0   (0x0008)  
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_AkiWorld_WP(int32_t EntryPoint);                                                                   // [0x25a7960] Final                
};

/// Class /Game/Aki/Core/BP_TestGameMode.BP_TestGameMode_C
/// Size: 0x0089 (137 bytes) (0x0003A0 - 0x000429) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class ABP_TestGameMode_C : public AKuroSilenceGameMode
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x03A0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x03A8   (0x0008)  
	class AActor*                                      StreamingSource;                                            // 0x03B0   (0x0008)  
	TArray<class APlayerStart*>                        PlayerStarts;                                               // 0x03B8   (0x0010)  
	TArray<FWorldPartitionStreamingQuerySource>        QuerySources;                                               // 0x03C8   (0x0010)  
	FTimerHandle                                       Handler;                                                    // 0x03D8   (0x0008)  
	bool                                               IsMovieRenderQueueMode;                                     // 0x03E0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x03E1   (0x0007)  MISSED
	class UBP_MainGameInstance_C*                      BpMainGameInstance;                                         // 0x03E8   (0x0008)  
	class AActor*                                      StreamingSourceActor;                                       // 0x03F0   (0x0008)  
	bool                                               IsLoginServerReady;                                         // 0x03F8   (0x0001)  
	bool                                               IsWaitingLoginHttpResponse;                                 // 0x03F9   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x03FA   (0x0006)  MISSED
	FString                                            LoginUrl;                                                   // 0x0400   (0x0010)  
	bool                                               IsWaitingApiHttpResponse;                                   // 0x0410   (0x0001)  
	bool                                               IsApiServerReady;                                           // 0x0411   (0x0001)  
	unsigned char                                      UnknownData02_6[0x6];                                       // 0x0412   (0x0006)  MISSED
	FString                                            ApiUrl;                                                     // 0x0418   (0x0010)  
	bool                                               bTriggerLoginOnce;                                          // 0x0428   (0x0001)  
	// void GetServerIpAndPort(FString& serverIp, FString& ApiServerPort, FString& LoginServerPort);                            // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void DelayStreamingSource();                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void StreamingCompleted();                                                                                               // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetPlayerStarts(bool& Exist, TArray<APlayerStart*>& PlayerStarts);                                                  // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void CheckStreamingHandler();                                                                                            // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void Check();                                                                                                            // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void LoginServerStatusResponse(bool Success, int32_t Code, FString Data);                                                // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ApiServereStatusResponse(bool Success, int32_t Code, FString Data);                                                 // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_TestGameMode(int32_t EntryPoint);                                                               // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Effect/Scene/BP_SuperFarFog.BP_SuperFarFog_C
/// Size: 0x00E8 (232 bytes) (0x0002C8 - 0x0003B0) align 8 pad: 0x0000
class ABP_SuperFarFog_C : public AKuroSuperFarFog
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02C8   (0x0008)  
	bool                                               _V__;                                                       // 0x02D0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02D1   (0x0003)  MISSED
	int32_t                                            _4__V;                                                      // 0x02D4   (0x0004)  
	float                                              _SIQgq;                                                     // 0x02D8   (0x0004)  
	FLinearColor                                       __r__T_N_;                                                  // 0x02DC   (0x0010)  
	bool                                               _Y____US_;                                                  // 0x02EC   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02ED   (0x0003)  MISSED
	FLinearColor                                       _Y___v__r_;                                                 // 0x02F0   (0x0010)  
	FKuroCurveFloat                                    _e_Y_m;                                                     // 0x0300   (0x0090)  
	FVector2D                                          Am_R_____;                                                  // 0x0390   (0x0008)  
	class ABP_GlobalGI_C*                              CachedGlobalGI;                                             // 0x0398   (0x0008)  
	FLinearColor                                       ColorTint;                                                  // 0x03A0   (0x0010)  
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void Refresh();                                                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void Update(float DeltaSeconds);                                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_SuperFarFog(int32_t EntryPoint);                                                                // [0x25a7960] Final                
};

/// Class /Game/Aki/Render/RuntimeBP/NewTrail/Sensor/BP_TrailGrassActor.BP_TrailGrassActor_C
/// Size: 0x0010 (16 bytes) (0x0002A8 - 0x0002B8) align 8 pad: 0x0000
class ABP_TrailGrassActor_C : public AActor
{ 
public:
	class UBP_TrailGrassSensorComponent_C*             BP_TrailGrassSensorComponent;                               // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
};

/// Class /Game/Aki/Render/RuntimeBP/NewTrail/Sensor/BP_TrailGrassSensorComponent.BP_TrailGrassSensorComponent_C
/// Size: 0x0080 (128 bytes) (0x000230 - 0x0002B0) align 16 pad: 0x0000
class UBP_TrailGrassSensorComponent_C : public UKuroTrailSensorComponent
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0230   (0x0008)  
	FVector                                            LastPosition;                                               // 0x0238   (0x000C)  
	FVector                                            CurrentPosition;                                            // 0x0244   (0x000C)  
	bool                                               PositionUpdateFirst;                                        // 0x0250   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0251   (0x0007)  MISSED
	class UCanvasRenderTarget2D*                       RT_Draw;                                                    // 0x0258   (0x0008)  
	class UCanvasRenderTarget2D*                       RT_Save;                                                    // 0x0260   (0x0008)  
	class UCanvasRenderTarget2D*                       RT_Use;                                                     // 0x0268   (0x0008)  
	float                                              Radius;                                                     // 0x0270   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0274   (0x0004)  MISSED
	TArray<class UKuroTrailDrawerComponent*>           CurDrawers;                                                 // 0x0278   (0x0010)  
	class UMaterialInstanceDynamic*                    DMI_DrawMat;                                                // 0x0288   (0x0008)  
	class UMaterialInstance*                           MI_DrawMat;                                                 // 0x0290   (0x0008)  
	class UMaterialInstanceDynamic*                    DMI_BlitMat;                                                // 0x0298   (0x0008)  
	class UMaterialInstance*                           MI_BlitMat;                                                 // 0x02A0   (0x0008)  
	FVector2D                                          WorldSize;                                                  // 0x02A8   (0x0008)  
	// void DrawToRenderTarget(FSTrailGrassDrawInfo TrailGrassInfo, class UCanvas* Canvas);                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Update();                                                                                                           // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdatePlayerPosition();                                                                                             // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetPlayerActor(class AActor*& PlayerActor);                                                                         // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnSensorBegin();                                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void OnSensorEnd(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                             // [0x25a7960] Event|Public|BlueprintEvent 
	// void OnSensorTick(float DeltaTime);                                                                                      // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_TrailGrassSensorComponent(int32_t EntryPoint);                                                  // [0x25a7960] Final                
};

/// Class /Game/Aki/Render/RuntimeBP/Rain2/BP_KuroRainGenerator.BP_KuroRainGenerator_C
/// Size: 0x00A5 (165 bytes) (0x0002C0 - 0x000365) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class ABP_KuroRainGenerator_C : public AKuroRainActorV2
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02C0   (0x0008)  
	class UNiagaraComponent*                           Niagara_CommonReverse_UrgentTurn;                           // 0x02C8   (0x0008)  
	class UBP_RainComponent_CommonReverse_C*           BP_RainComponent_CommonReverse_UrgentTurn;                  // 0x02D0   (0x0008)  
	class UNiagaraComponent*                           Niagara_CommonReverse_Fast;                                 // 0x02D8   (0x0008)  
	class UBP_RainComponent_CommonReverse_C*           BP_RainComponent_CommonReverse_Fast;                        // 0x02E0   (0x0008)  
	class UNiagaraComponent*                           Niagara_CommonReverse_Stable;                               // 0x02E8   (0x0008)  
	class UNiagaraComponent*                           Niagara_CommonDrop;                                         // 0x02F0   (0x0008)  
	class UNiagaraComponent*                           Niagara_CommonReverse_Lively;                               // 0x02F8   (0x0008)  
	class UBP_RainComponent_CommonReverse_C*           BP_RainComponent_CommonReverse_Stable;                      // 0x0300   (0x0008)  
	class UBP_RainComponent_CommonDrop_C*              BP_RainComponent_CommonDrop;                                // 0x0308   (0x0008)  
	class UBP_RainComponent_CommonReverse_C*           BP_RainComponent_CommonReverse_Lively;                      // 0x0310   (0x0008)  
	class USceneComponent*                             Scene;                                                      // 0x0318   (0x0008)  
	class AActor*                                      Handle;                                                     // 0x0320   (0x0008)  
	class UPDA_RainConfigs_C*                          Configs;                                                    // 0x0328   (0x0008)  
	float                                              TeleportDistanceToRestart;                                  // 0x0330   (0x0004)  
	TEnumAsByte<EKuroRainType>                         CachedRainType;                                             // 0x0334   (0x0001)  
	TEnumAsByte<EKuroRainType>                         CurrentRainType;                                            // 0x0335   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0336   (0x0002)  MISSED
	float                                              RainDensity;                                                // 0x0338   (0x0004)  
	FVector                                            Wind;                                                       // 0x033C   (0x000C)  
	float                                              RainFogDensity;                                             // 0x0348   (0x0004)  
	FVector                                            CameraPosition;                                             // 0x034C   (0x000C)  
	FVector                                            Distance;                                                   // 0x0358   (0x000C)  
	bool                                               IsEnabled;                                                  // 0x0364   (0x0001)  
	// void StopAll();                                                                                                          // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void StartRain_CommonReverse_UrgentTurn();                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void StartRain_CommonReverse_Fast();                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateRainGlobalParams();                                                                                           // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void StartRain_CommonReverse_Stable();                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateCameraInfos();                                                                                                // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void StartRain_CommonReverse_Lively();                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void StartRain_CommonDrop();                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void DeactivateAll();                                                                                                    // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void RefreshDeactivateStat();                                                                                            // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void PrintSpeed();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void EnableRain();                                                                                                       // [0x25a7960] Event|Public|BlueprintEvent 
	// void DisableRain();                                                                                                      // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_BP_KuroRainGenerator(int32_t EntryPoint);                                                          // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Rain2/BP_RainComponent_CommonDrop.BP_RainComponent_CommonDrop_C
/// Size: 0x0138 (312 bytes) (0x000230 - 0x000368) align 16 pad: 0x0008
#pragma pack(push, 0x1)
class UBP_RainComponent_CommonDrop_C : public UKuroRainComponent
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0230   (0x0008)  
	int32_t                                            RandomSpawnerHandle;                                        // 0x0238   (0x0004)  
	int32_t                                            ArraySpawnerHandle;                                         // 0x023C   (0x0004)  
	int32_t                                            CycleBoxHandle;                                             // 0x0240   (0x0004)  
	FVector                                            Center;                                                     // 0x0244   (0x000C)  
	float                                              Drag;                                                       // 0x0250   (0x0004)  
	FVector                                            Gravity;                                                    // 0x0254   (0x000C)  
	FVector                                            Wind;                                                       // 0x0260   (0x000C)  
	int32_t                                            WindHandle;                                                 // 0x026C   (0x0004)  
	int32_t                                            GravityHandle;                                              // 0x0270   (0x0004)  
	int32_t                                            DragHandle;                                                 // 0x0274   (0x0004)  
	FVector                                            TempSpawnSpeed;                                             // 0x0278   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0284   (0x0004)  MISSED
	class UPDA_RainConfig_CommonDrop_C*                RainConfig;                                                 // 0x0288   (0x0008)  
	SDK_UNDEFINED(80,1141) /* TMap<int32_t, int32_t> */ __um(ArraySpawnerHandles);                                 // 0x0290   (0x0050)  
	SDK_UNDEFINED(80,1142) /* TMap<int32_t, int32_t> */ __um(RandomSpawnerHandles);                                // 0x02E0   (0x0050)  
	float                                              PassTime;                                                   // 0x0330   (0x0004)  
	float                                              SpawnScale;                                                 // 0x0334   (0x0004)  
	bool                                               IsPendingDeactivate;                                        // 0x0338   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0339   (0x0003)  MISSED
	FVector                                            ActualSpawnCenter;                                          // 0x033C   (0x000C)  
	FVector                                            GlobalWind;                                                 // 0x0348   (0x000C)  
	float                                              GlobalDensity;                                              // 0x0354   (0x0004)  
	class UNiagaraComponent*                           NiagaraComponent;                                           // 0x0358   (0x0008)  
	bool                                               NiagaraValid;                                               // 0x0360   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0361   (0x0003)  MISSED
	float                                              RainFogDensity;                                             // 0x0364   (0x0004)  
	// void DeactivateRain();                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void StopRain();                                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void StartRain();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PreSolveRainParticles(float DeltaSeconds);                                                                          // [0x25a7960] Event|Public|BlueprintEvent 
	// void SetupRainEmitters();                                                                                                // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_RainComponent_CommonDrop(int32_t EntryPoint);                                                   // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Rain2/BP_RainComponent_CommonReverse.BP_RainComponent_CommonReverse_C
/// Size: 0x0178 (376 bytes) (0x000230 - 0x0003A8) align 16 pad: 0x0008
#pragma pack(push, 0x1)
class UBP_RainComponent_CommonReverse_C : public UKuroRainComponent
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0230   (0x0008)  
	int32_t                                            RandomSpawnerHandle;                                        // 0x0238   (0x0004)  
	int32_t                                            ArraySpawnerHandle;                                         // 0x023C   (0x0004)  
	int32_t                                            CycleBoxHandle;                                             // 0x0240   (0x0004)  
	FVector                                            Center;                                                     // 0x0244   (0x000C)  
	int32_t                                            WindHandle;                                                 // 0x0250   (0x0004)  
	int32_t                                            GravityHandle;                                              // 0x0254   (0x0004)  
	int32_t                                            DragHandle;                                                 // 0x0258   (0x0004)  
	FVector                                            TempSpawnSpeed;                                             // 0x025C   (0x000C)  
	class UPDA_RainConfig_CommonReverse_C*             RainConfig;                                                 // 0x0268   (0x0008)  
	SDK_UNDEFINED(80,1143) /* TMap<int32_t, int32_t> */ __um(ArraySpawnerHandles);                                 // 0x0270   (0x0050)  
	SDK_UNDEFINED(80,1144) /* TMap<int32_t, int32_t> */ __um(RandomSpawnerHandles);                                // 0x02C0   (0x0050)  
	float                                              PassTime;                                                   // 0x0310   (0x0004)  
	FVector                                            PerformanceGravity;                                         // 0x0314   (0x000C)  
	float                                              PerformanceDrag;                                            // 0x0320   (0x0004)  
	FVector                                            PerformanceWind;                                            // 0x0324   (0x000C)  
	float                                              PerformanceSpawnScale;                                      // 0x0330   (0x0004)  
	float                                              Shape;                                                      // 0x0334   (0x0004)  
	int32_t                                            CustomRandomHandle;                                         // 0x0338   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x033C   (0x0004)  MISSED
	int64_t                                            GravityCurveSampleTaskHandle;                               // 0x0340   (0x0008)  
	int64_t                                            WindCurveSampleTaskHandle;                                  // 0x0348   (0x0008)  
	int64_t                                            DragCurveSampleTaskHandle;                                  // 0x0350   (0x0008)  
	int64_t                                            SpawnCurveSampleTaskHandle;                                 // 0x0358   (0x0008)  
	float                                              SpawnScale;                                                 // 0x0360   (0x0004)  
	bool                                               IsPendingDeactivate;                                        // 0x0364   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0365   (0x0003)  MISSED
	FVector                                            ActualSpawnCenter;                                          // 0x0368   (0x000C)  
	FVector                                            GlobalWind;                                                 // 0x0374   (0x000C)  
	float                                              GlobalDensity;                                              // 0x0380   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0384   (0x0004)  MISSED
	int64_t                                            TimeDilationCurveSampleTaskHandle;                          // 0x0388   (0x0008)  
	float                                              VelocitySpawnScale;                                         // 0x0390   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0394   (0x0004)  MISSED
	class UNiagaraComponent*                           NiagaraComponent;                                           // 0x0398   (0x0008)  
	bool                                               NiagaraValid;                                               // 0x03A0   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x03A1   (0x0003)  MISSED
	float                                              RainFogDensity;                                             // 0x03A4   (0x0004)  
	// void DeactivateRain();                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void StopRain();                                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void StartRain();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PreSolveRainParticles(float DeltaSeconds);                                                                          // [0x25a7960] Event|Public|BlueprintEvent 
	// void SetupRainEmitters();                                                                                                // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_RainComponent_CommonReverse(int32_t EntryPoint);                                                // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Scene/InteractFoliage/Blueprint/BP_InteractFoliageManager.BP_InteractFoliageManager_C
/// Size: 0x0049 (73 bytes) (0x0002A8 - 0x0002F1) align 16 pad: 0x0001
#pragma pack(push, 0x1)
class ABP_InteractFoliageManager_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class UStaticMeshComponent*                        Interactor;                                                 // 0x02B0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B8   (0x0008)  
	FTransform                                         CharacterTransform;                                         // 0x02C0   (0x0030)  
	bool                                               Active;                                                     // 0x02F0   (0x0001)  
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void CheckActive();                                                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void DebugInteractor();                                                                                                  // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_InteractFoliageManager(int32_t EntryPoint);                                                     // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Weather/BP/BP_WeatherController.BP_WeatherController_C
/// Size: 0x0034 (52 bytes) (0x0002B8 - 0x0002EC) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ABP_WeatherController_C : public AKuroEditorTickActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B8   (0x0008)  
	class UChildActorComponent*                        RainDrop;                                                   // 0x02C0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C8   (0x0008)  
	class ABP_GlobalGI_C*                              GlobalGI;                                                   // 0x02D0   (0x0008)  
	class UBP_WeatherData_C*                           WeatherData;                                                // 0x02D8   (0x0008)  
	bool                                               GlobalGI_Legality;                                          // 0x02E0   (0x0001)  
	bool                                               Data_Legality;                                              // 0x02E1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x02E2   (0x0002)  MISSED
	float                                              RainIntensity;                                              // 0x02E4   (0x0004)  
	float                                              Gravity;                                                    // 0x02E8   (0x0004)  
	// void OnRep_GlobalGI();                                                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void TickThunder();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetupThunder();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_WeatherController(int32_t EntryPoint);                                                          // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Weather/BP/Thunder/BP_ThunderGenerator.BP_ThunderGenerator_C
/// Size: 0x00B8 (184 bytes) (0x0004E0 - 0x000598) align 8 pad: 0x0000
class ABP_ThunderGenerator_C : public AThunderGenerator
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x04E0   (0x0008)  
	class UPDA_ThunderConfigMap_C*                     ThunderConfigMap;                                           // 0x04E8   (0x0008)  
	class UPDA_ThunderConfig_C*                        ThunderConfig;                                              // 0x04F0   (0x0008)  
	class UAkAudioEvent*                               CachedAudioEvent2D;                                         // 0x04F8   (0x0008)  
	int32_t                                            CachedTransition;                                           // 0x0500   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0504   (0x0004)  MISSED
	FKuroCurveFloat                                    CachedCloudLightCurve;                                      // 0x0508   (0x0090)  
	// void ClearThunder();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateAudio2D();                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnReceiveThunderAttack(FVector Location, bool bAttack);                                                             // [0x25a7960] Event|Protected|BlueprintEvent 
	// void OnThunderTypeChanged();                                                                                             // [0x25a7960] Event|Protected|BlueprintEvent 
	// void OnUpdateThunderEffect(float DeltaSeconds);                                                                          // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_BP_ThunderGenerator(int32_t EntryPoint);                                                           // [0x25a7960] Final                
};

/// Class /Game/Aki/Render/RuntimeBP/Weather/LensDroplet/BP_LensDropletManager.BP_LensDropletManager_C
/// Size: 0x009C (156 bytes) (0x0002B8 - 0x000354) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ABP_LensDropletManager_C : public AKuroEditorTickActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B8   (0x0008)  
	class UProceduralMeshComponent*                    Droplets;                                                   // 0x02C0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C8   (0x0008)  
	float                                              DropletGenerate_NewTrack_0_43A8026C4C5253C2ECCC34BC1AFDE7FF; // 0x02D0   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    DropletGenerate__Direction_43A8026C4C5253C2ECCC34BC1AFDE7FF; // 0x02D4   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x02D5   (0x0003)  MISSED
	class UTimelineComponent*                          DropletGenerate;                                            // 0x02D8   (0x0008)  
	float                                              Rain_Intensity;                                             // 0x02E0   (0x0004)  
	float                                              Gravity;                                                    // 0x02E4   (0x0004)  
	float                                              DropletIntensityMul;                                        // 0x02E8   (0x0004)  
	float                                              Time;                                                       // 0x02EC   (0x0004)  
	float                                              Speed;                                                      // 0x02F0   (0x0004)  
	FVector2D                                          ScreenSize;                                                 // 0x02F4   (0x0008)  
	float                                              RainDropOpacity;                                            // 0x02FC   (0x0004)  
	bool                                               Inout;                                                      // 0x0300   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0301   (0x0007)  MISSED
	class UMaterialInstanceDynamic*                    DropletDMI;                                                 // 0x0308   (0x0008)  
	float                                              TimeForInOut;                                               // 0x0310   (0x0004)  
	bool                                               InOutActive;                                                // 0x0314   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0315   (0x0003)  MISSED
	float                                              Time0;                                                      // 0x0318   (0x0004)  
	bool                                               IsEditor;                                                   // 0x031C   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x031D   (0x0003)  MISSED
	FVector                                            PrezCamPos;                                                 // 0x0320   (0x000C)  
	FVector                                            PrezCamVec;                                                 // 0x032C   (0x000C)  
	FVector                                            CurrCamPos;                                                 // 0x0338   (0x000C)  
	FVector                                            CurrCamVec;                                                 // 0x0344   (0x000C)  
	float                                              SpawnSpeed;                                                 // 0x0350   (0x0004)  
	// void GenerateOneDroplets();                                                                                              // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Timer(float Time, bool Inout);                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateParameters();                                                                                                 // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void Init();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ConstructPolyMesh(int32_t DropletAmount);                                                                           // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void SetBasicDropletParameters(float RainIntensity, float Gravity);                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void DropletGenerate__FinishedFunc();                                                                                    // [0x25a7960] BlueprintEvent       
	// void DropletGenerate__UpdateFunc();                                                                                      // [0x25a7960] BlueprintEvent       
	// void CustomEvent();                                                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void DropletEnd();                                                                                                       // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void DropletStart();                                                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void CleanMesh();                                                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void DisableDroplets();                                                                                                  // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void EnableDroplets();                                                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_LensDropletManager(int32_t EntryPoint);                                                         // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Weather/BP/Thunder/PDA_ThunderConfig.PDA_ThunderConfig_C
/// Size: 0x0280 (640 bytes) (0x000038 - 0x0002B8) align 8 pad: 0x0000
class UPDA_ThunderConfig_C : public UPrimaryDataAsset
{ 
public:
	float                                              ____;                                                       // 0x0038   (0x0004)  
	float                                              _______;                                                    // 0x003C   (0x0004)  
	float                                              _______0;                                                   // 0x0040   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0044   (0x0004)  MISSED
	class UNiagaraSystem*                              ThunderNiagara;                                             // 0x0048   (0x0008)  
	FKuroCurveFloat                                    opIQ__;                                                     // 0x0050   (0x0090)  
	FKuroCurveFloat                                    opIQJS;                                                     // 0x00E0   (0x0090)  
	FKuroCurveFloat                                    _T_Y_t_;                                                    // 0x0170   (0x0090)  
	float                                              ____1;                                                      // 0x0200   (0x0004)  
	float                                              MOn_;                                                       // 0x0204   (0x0004)  
	float                                              _______2;                                                   // 0x0208   (0x0004)  
	float                                              _______3;                                                   // 0x020C   (0x0004)  
	FKuroCurveFloat                                    _NB_____I;                                                  // 0x0210   (0x0090)  
	class UAkAudioEvent*                               AudioEvent_2D;                                              // 0x02A0   (0x0008)  
	int32_t                                            _2DEventStopTransition;                                     // 0x02A8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x02AC   (0x0004)  MISSED
	class UAkAudioEvent*                               AudioEvent_Lightening;                                      // 0x02B0   (0x0008)  
};

/// Class /Game/Aki/Render/RuntimeBP/Weather/BP/Thunder/PDA_ThunderConfigMap.PDA_ThunderConfigMap_C
/// Size: 0x0050 (80 bytes) (0x000038 - 0x000088) align 8 pad: 0x0000
class UPDA_ThunderConfigMap_C : public UPrimaryDataAsset
{ 
public:
	SDK_UNDEFINED(80,1145) /* TMap<TEnumAsByte<EKuroThunderType>, UPDA_ThunderConfig_C*> */ __um(Data);            // 0x0038   (0x0050)  
};

/// Class /Game/Aki/Render/RuntimeBP/Weather/LensDroplet/BP_Droplets.BP_Droplets_C
/// Size: 0x00C4 (196 bytes) (0x0002B8 - 0x00037C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ABP_Droplets_C : public AKuroEditorTickActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B8   (0x0008)  
	class UProceduralMeshComponent*                    Droplets;                                                   // 0x02C0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C8   (0x0008)  
	float                                              DropletTimeline_Opacity_9099052A40784F2818F181AEB59E1C8F;   // 0x02D0   (0x0004)  
	float                                              DropletTimeline_Time_9099052A40784F2818F181AEB59E1C8F;      // 0x02D4   (0x0004)  
	TEnumAsByte<ETimelineDirection>                    DropletTimeline__Direction_9099052A40784F2818F181AEB59E1C8F; // 0x02D8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02D9   (0x0007)  MISSED
	class UTimelineComponent*                          DropletTimeline;                                            // 0x02E0   (0x0008)  
	class UMaterialInstanceDynamic*                    DropletDMI;                                                 // 0x02E8   (0x0008)  
	float                                              Time;                                                       // 0x02F0   (0x0004)  
	bool                                               Should_Spawn;                                               // 0x02F4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02F5   (0x0003)  MISSED
	FRandomStream                                      RandomStream;                                               // 0x02F8   (0x0008)  
	FVector                                            RandPos;                                                    // 0x0300   (0x000C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x030C   (0x0004)  MISSED
	TArray<FVector>                                    VertexBuffer;                                               // 0x0310   (0x0010)  
	TArray<FVector2D>                                  UV0Buffer;                                                  // 0x0320   (0x0010)  
	TArray<FLinearColor>                               VertexColorBuffer;                                          // 0x0330   (0x0010)  
	int32_t                                            Int;                                                        // 0x0340   (0x0004)  
	FVector                                            CurrCamPos;                                                 // 0x0344   (0x000C)  
	FVector                                            PrezCamPos;                                                 // 0x0350   (0x000C)  
	FVector                                            CurrCamVec;                                                 // 0x035C   (0x000C)  
	bool                                               IsEditor;                                                   // 0x0368   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0369   (0x0003)  MISSED
	float                                              DropletIntensityMul;                                        // 0x036C   (0x0004)  
	float                                              Speed;                                                      // 0x0370   (0x0004)  
	float                                              Gravity;                                                    // 0x0374   (0x0004)  
	float                                              RainIntensity;                                              // 0x0378   (0x0004)  
	// void UpdateParameters();                                                                                                 // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void MakeOneDroplet();                                                                                                   // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void DropletTimeline__FinishedFunc();                                                                                    // [0x25a7960] BlueprintEvent       
	// void DropletTimeline__UpdateFunc();                                                                                      // [0x25a7960] BlueprintEvent       
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void Droplet();                                                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_Droplets(int32_t EntryPoint);                                                                   // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Weather/BP/BP_WeatherData.BP_WeatherData_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBP_WeatherData_C : public UObject
{ 
public:
};

/// Struct /Game/Aki/Render/RuntimeBP/Rain2/Configs/SCommonRainSpawnerConfig.SCommonRainSpawnerConfig
/// Size: 0x0044 (68 bytes) (0x000000 - 0x000044) align 4 pad: 0x0000
struct FSCommonRainSpawnerConfig
{ 
	int32_t                                            Index_39_3CE1C7604B9A5185BCCC1F982DB8D30A;                  // 0x0000   (0x0004)  
	bool                                               UseArraySpawner_5_1C6F11774B481031D6D2BE82D9457251;         // 0x0004   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0005   (0x0003)  MISSED
	int32_t                                            ArraySize_7_DBAE3FFE4167B723DEA21681DE13ED4D;               // 0x0008   (0x0004)  
	float                                              ArrayLength_10_CC15A4604FD5EBDBF6CC4C8FB2B6AFFB;            // 0x000C   (0x0004)  
	float                                              ArraySpawnerRate_12_8E398D734C4CD5CB503A47853A5C2A1E;       // 0x0010   (0x0004)  
	float                                              ArraySpawnerTimeWiggle_14_A22AB66F482C5044533AF4B39061F0C4; // 0x0014   (0x0004)  
	float                                              ArraySpawnerPositionWiggle_16_3EF197464661F5FD339172AD4F5D8BC7; // 0x0018   (0x0004)  
	bool                                               UseRandomSpawner_19_C56A9337488CCA37781E398FA4963A12;       // 0x001C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x001D   (0x0003)  MISSED
	float                                              RandomSpawnRate_46_C200F895438F40A2879FF8B79B7FA5BC;        // 0x0020   (0x0004)  
	float                                              RandomSpawnInnerRadius_47_700C2F1A4269B9C8259529BE86C370B7; // 0x0024   (0x0004)  
	float                                              RandomSpawnOuterRadius_45_379E17E54FCB99AC314BF4B847ED7109; // 0x0028   (0x0004)  
	float                                              LifeTimeMin_40_91566490477A78ACCDE54DBB09B2220D;            // 0x002C   (0x0004)  
	float                                              LifeTimeMax_41_5F2A6F754C9A5AB182F1E59DE8682757;            // 0x0030   (0x0004)  
	float                                              ScaleMin_42_9EE790BB46B5A9938A460DAFB41FBE59;               // 0x0034   (0x0004)  
	float                                              ScaleMax_43_7F1D253E407787F1730E5793BE8881F4;               // 0x0038   (0x0004)  
	float                                              BaseMassMin_50_83742FFD4351F736D7FC5CB3DAEA4809;            // 0x003C   (0x0004)  
	float                                              BaseMassMax_52_7B46DD0045054BD35803F89FB6E01C17;            // 0x0040   (0x0004)  
};

/// Class /Game/Aki/Render/RuntimeBP/Rain2/Configs/PDA_RainConfig_CommonReverse.PDA_RainConfig_CommonReverse_C
/// Size: 0x04F0 (1264 bytes) (0x000038 - 0x000528) align 8 pad: 0x0000
class UPDA_RainConfig_CommonReverse_C : public UPrimaryDataAsset
{ 
public:
	TArray<class UMaterialInterface*>                  Materials;                                                  // 0x0038   (0x0010)  
	TArray<class UStaticMesh*>                         Meshes;                                                     // 0x0048   (0x0010)  
	TArray<FSCommonRainSpawnerConfig>                  Spawners;                                                   // 0x0058   (0x0010)  
	FVector                                            Gravity;                                                    // 0x0068   (0x000C)  
	FVector                                            Wind;                                                       // 0x0074   (0x000C)  
	float                                              Drag;                                                       // 0x0080   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0084   (0x0004)  MISSED
	FKuroCurveFloat                                    OpacityCurve;                                               // 0x0088   (0x0090)  
	FKuroCurveFloat                                    StretchCurve;                                               // 0x0118   (0x0090)  
	FKuroCurveFloat                                    ShapeCurve;                                                 // 0x01A8   (0x0090)  
	float                                              CycleBoxX;                                                  // 0x0238   (0x0004)  
	float                                              CycleBoxY;                                                  // 0x023C   (0x0004)  
	float                                              CycleBoxZ_Positive;                                         // 0x0240   (0x0004)  
	float                                              CycleBoxZ_Negative;                                         // 0x0244   (0x0004)  
	FKuroCurveFloat                                    GravityPerformanceCurve;                                    // 0x0248   (0x0090)  
	FKuroCurveFloat                                    DragPerformanceCurve;                                       // 0x02D8   (0x0090)  
	FKuroCurveFloat                                    WindPerformanceCurve;                                       // 0x0368   (0x0090)  
	FKuroCurveFloat                                    SpawnPerformanceCurve;                                      // 0x03F8   (0x0090)  
	FKuroCurveFloat                                    TimeDilationPerformanceCurve;                               // 0x0488   (0x0090)  
	class UNiagaraSystem*                              Niagara;                                                    // 0x0518   (0x0008)  
	class UAkAudioEvent*                               AudioEvent;                                                 // 0x0520   (0x0008)  
};

/// Class /Game/Aki/Render/RuntimeBP/Rain2/Configs/PDA_RainConfig_CommonDrop.PDA_RainConfig_CommonDrop_C
/// Size: 0x0190 (400 bytes) (0x000038 - 0x0001C8) align 8 pad: 0x0000
class UPDA_RainConfig_CommonDrop_C : public UPrimaryDataAsset
{ 
public:
	TArray<class UMaterialInterface*>                  Materials;                                                  // 0x0038   (0x0010)  
	TArray<class UStaticMesh*>                         Meshes;                                                     // 0x0048   (0x0010)  
	TArray<FSCommonRainSpawnerConfig>                  Spawners;                                                   // 0x0058   (0x0010)  
	FVector                                            Gravity;                                                    // 0x0068   (0x000C)  
	FVector                                            Wind;                                                       // 0x0074   (0x000C)  
	float                                              Drag;                                                       // 0x0080   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0084   (0x0004)  MISSED
	FKuroCurveFloat                                    OpacityCurve;                                               // 0x0088   (0x0090)  
	FKuroCurveFloat                                    StretchCurve;                                               // 0x0118   (0x0090)  
	float                                              CycleBoxX;                                                  // 0x01A8   (0x0004)  
	float                                              CycleBoxY;                                                  // 0x01AC   (0x0004)  
	float                                              CycleBoxZ_Positive;                                         // 0x01B0   (0x0004)  
	float                                              CycleBoxZ_Negative;                                         // 0x01B4   (0x0004)  
	class UNiagaraSystem*                              Niagara;                                                    // 0x01B8   (0x0008)  
	class UAkAudioEvent*                               AudioEvent;                                                 // 0x01C0   (0x0008)  
};

/// Class /Game/Aki/Render/RuntimeBP/Rain2/Configs/PDA_RainConfigs.PDA_RainConfigs_C
/// Size: 0x0028 (40 bytes) (0x000038 - 0x000060) align 8 pad: 0x0000
class UPDA_RainConfigs_C : public UPrimaryDataAsset
{ 
public:
	class UPDA_RainConfig_CommonDrop_C*                RainConfig_CommonDrop;                                      // 0x0038   (0x0008)  
	class UPDA_RainConfig_CommonReverse_C*             RainConfig_CommonReverse_Lively;                            // 0x0040   (0x0008)  
	class UPDA_RainConfig_CommonReverse_C*             RainConfig_CommonReverse_Stable;                            // 0x0048   (0x0008)  
	class UPDA_RainConfig_CommonReverse_C*             RainConfig_CommonReverse_Fast;                              // 0x0050   (0x0008)  
	class UPDA_RainConfig_CommonReverse_C*             RainConfig_CommonReverse_UrgentTurn;                        // 0x0058   (0x0008)  
};

/// Class /Game/Aki/Render/RuntimeBP/NewTrail/Drawer/BP_TrailGrassDrawerComponent.BP_TrailGrassDrawerComponent_C
/// Size: 0x0020 (32 bytes) (0x000220 - 0x000240) align 16 pad: 0x0000
class UBP_TrailGrassDrawerComponent_C : public UKuroTrailDrawerComponent
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0220   (0x0008)  
	bool                                               ShouldUpdate;                                               // 0x0228   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0229   (0x0007)  MISSED
	class UTexture2D*                                  Texture;                                                    // 0x0230   (0x0008)  
	FVector2D                                          Size;                                                       // 0x0238   (0x0008)  
	// void GetDrawInfo(FSTrailGrassDrawInfo& DrawInfo);                                                                        // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void OnDrawerBegin();                                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void OnDrawerEnd(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                             // [0x25a7960] Event|Public|BlueprintEvent 
	// void OnDrawerTick(float DeltaTime);                                                                                      // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_TrailGrassDrawerComponent(int32_t EntryPoint);                                                  // [0x25a7960] Final                
};

/// Class /Game/Aki/Core/BP_MainGameState.BP_MainGameState_C
/// Size: 0x0008 (8 bytes) (0x000320 - 0x000328) align 8 pad: 0x0000
class ABP_MainGameState_C : public AGameState
{ 
public:
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x0320   (0x0008)  
};

/// Class /Game/Aki/Core/BP_MainPlayerState.BP_MainPlayerState_C
/// Size: 0x0008 (8 bytes) (0x0003B0 - 0x0003B8) align 8 pad: 0x0000
class ABP_MainPlayerState_C : public APlayerState
{ 
public:
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x03B0   (0x0008)  
};

/// Class /Game/Aki/TypeScript/UniverseEditor/Common/TsEntity/TsEntityBase.TsEntityBase_C
/// Size: 0x0014 (20 bytes) (0x0002B0 - 0x0002C4) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ATsEntityBase_C : public AKuroEffectActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B8   (0x0008)  
	int32_t                                            ID;                                                         // 0x02C0   (0x0004)  
	// void EditorInit();                                                                                                       // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsEntityBase(int32_t EntryPoint);                                                                  // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/Role/Common/Data/DT/SPerformanceRoleInfo.SPerformanceRoleInfo
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 4 pad: 0x0000
struct FSPerformanceRoleInfo
{ 
	float                                              SkillRotateIn_2_F3D343C34F5B034A32FE80A1352E16FF;           // 0x0000   (0x0004)  
	float                                              SkillRotateOut_4_C23983D940EF5EA7EF99C4948C6E2E83;          // 0x0004   (0x0004)  
};

/// Class /Game/Aki/Character/Role/Common/ABP_PerformanceRole.ABP_PerformanceRole_C
/// Size: 0x5C3C (23612 bytes) (0x000378 - 0x005FB4) align 16 pad: 0x0004
#pragma pack(push, 0x1)
class UABP_PerformanceRole_C : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0378   (0x0008)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0380   (0x0008)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose;                              // 0x0388   (0x0138)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace;                        // 0x04C0   (0x0020)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace;                        // 0x04E0   (0x0020)  
	FAnimNode_RBF                                      AnimGraphNode_RBF;                                          // 0x0500   (0x0150)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0650   (0x0038)  
	FAnimNode_Root                                     AnimGraphNode_Root0;                                        // 0x0688   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult;                             // 0x06C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1;                            // 0x06E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult2;                            // 0x0710   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult3;                            // 0x0738   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult4;                            // 0x0760   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult5;                            // 0x0788   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult6;                            // 0x07B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult7;                            // 0x07D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult8;                            // 0x0800   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult9;                            // 0x0828   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult10;                           // 0x0850   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult11;                           // 0x0878   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult12;                           // 0x08A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult13;                           // 0x08C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult14;                           // 0x08F0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult15;                           // 0x0918   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult16;                           // 0x0940   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult17;                           // 0x0968   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult18;                           // 0x0990   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult19;                           // 0x09B8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult20;                           // 0x09E0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult21;                           // 0x0A08   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult22;                           // 0x0A30   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult23;                           // 0x0A58   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult24;                           // 0x0A80   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult25;                           // 0x0AA8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult26;                           // 0x0AD0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult27;                           // 0x0AF8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult28;                           // 0x0B20   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult29;                           // 0x0B48   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult30;                           // 0x0B70   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult31;                           // 0x0B98   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult32;                           // 0x0BC0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult33;                           // 0x0BE8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult34;                           // 0x0C10   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult35;                           // 0x0C38   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult36;                           // 0x0C60   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult37;                           // 0x0C88   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult38;                           // 0x0CB0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult39;                           // 0x0CD8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult40;                           // 0x0D00   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult41;                           // 0x0D28   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult42;                           // 0x0D50   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult43;                           // 0x0D78   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult44;                           // 0x0DA0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult45;                           // 0x0DC8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult46;                           // 0x0DF0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult47;                           // 0x0E18   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult48;                           // 0x0E40   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult49;                           // 0x0E68   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult50;                           // 0x0E90   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult51;                           // 0x0EB8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult52;                           // 0x0EE0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult53;                           // 0x0F08   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer;                               // 0x0F30   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult;                                  // 0x0FC0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult54;                           // 0x0FF8   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer55;                             // 0x1020   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult56;                                // 0x10B0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult57;                           // 0x10E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult58;                           // 0x1110   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult59;                           // 0x1138   (0x0028)  
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator;                      // 0x1160   (0x0140)  
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator60;                    // 0x12A0   (0x0140)  
	FAnimNode_StateResult                              AnimGraphNode_CustomTransitionResult;                       // 0x13E0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult61;                           // 0x1418   (0x0028)  
	FAnimNode_SequenceEvaluator                        AnimGraphNode_SequenceEvaluator;                            // 0x1440   (0x0060)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult62;                                // 0x14A0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer63;                             // 0x14D8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult64;                                // 0x1568   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer65;                             // 0x15A0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult66;                                // 0x1630   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine;                                 // 0x1668   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult67;                                // 0x17A0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult68;                           // 0x17D8   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer69;                             // 0x1800   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult70;                                // 0x1890   (0x0038)  
	FAnimNode_Slot                                     AnimGraphNode_Slot;                                         // 0x18C8   (0x0060)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer71;                             // 0x1928   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult72;                                // 0x19B8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine73;                               // 0x19F0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult74;                                // 0x1B28   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult75;                           // 0x1B60   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer76;                             // 0x1B88   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult77;                                // 0x1C18   (0x0038)  
	FAnimNode_Slot                                     AnimGraphNode_Slot78;                                       // 0x1C50   (0x0060)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer79;                             // 0x1CB0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult80;                                // 0x1D40   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine81;                               // 0x1D78   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult82;                                // 0x1EB0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult83;                           // 0x1EE8   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer84;                             // 0x1F10   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult85;                                // 0x1FA0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult86;                           // 0x1FD8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult87;                           // 0x2000   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult88;                           // 0x2028   (0x0028)  
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator89;                    // 0x2050   (0x0140)  
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator90;                    // 0x2190   (0x0140)  
	FAnimNode_StateResult                              AnimGraphNode_CustomTransitionResult91;                     // 0x22D0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult92;                           // 0x2308   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult93;                                // 0x2330   (0x0038)  
	FAnimNode_Slot                                     AnimGraphNode_Slot94;                                       // 0x2368   (0x0060)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer95;                             // 0x23C8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult96;                                // 0x2458   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer97;                             // 0x2490   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult98;                                // 0x2520   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine99;                               // 0x2558   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult100;                               // 0x2690   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer101;                            // 0x26C8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult102;                               // 0x2758   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult103;                          // 0x2790   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult104;                          // 0x27B8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult105;                          // 0x27E0   (0x0028)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x2808   (0x0008)  MISSED
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator106;                   // 0x2810   (0x0140)  
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator107;                   // 0x2950   (0x0140)  
	FAnimNode_StateResult                              AnimGraphNode_CustomTransitionResult108;                    // 0x2A90   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult109;                          // 0x2AC8   (0x0028)  
	FAnimNode_SequenceEvaluator                        AnimGraphNode_SequenceEvaluator110;                         // 0x2AF0   (0x0060)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult111;                               // 0x2B50   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer112;                            // 0x2B88   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult113;                               // 0x2C18   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer114;                            // 0x2C50   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult115;                               // 0x2CE0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine116;                              // 0x2D18   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult117;                               // 0x2E50   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult118;                          // 0x2E88   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult119;                          // 0x2EB0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult120;                          // 0x2ED8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult121;                          // 0x2F00   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult122;                          // 0x2F28   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult123;                          // 0x2F50   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult124;                          // 0x2F78   (0x0028)  
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator125;                   // 0x2FA0   (0x0140)  
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator126;                   // 0x30E0   (0x0140)  
	FAnimNode_StateResult                              AnimGraphNode_CustomTransitionResult127;                    // 0x3220   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult128;                          // 0x3258   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult129;                          // 0x3280   (0x0028)  
	FAnimNode_SequenceEvaluator                        AnimGraphNode_SequenceEvaluator130;                         // 0x32A8   (0x0060)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult131;                               // 0x3308   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer132;                            // 0x3340   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult133;                               // 0x33D0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer134;                            // 0x3408   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult135;                               // 0x3498   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult136;                               // 0x34D0   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult137;                               // 0x3508   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine138;                              // 0x3540   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult139;                               // 0x3678   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult140;                          // 0x36B0   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer141;                            // 0x36D8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult142;                               // 0x3768   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult143;                          // 0x37A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult144;                          // 0x37C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult145;                          // 0x37F0   (0x0028)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x3818   (0x0008)  MISSED
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator146;                   // 0x3820   (0x0140)  
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator147;                   // 0x3960   (0x0140)  
	FAnimNode_StateResult                              AnimGraphNode_CustomTransitionResult148;                    // 0x3AA0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult149;                          // 0x3AD8   (0x0028)  
	FAnimNode_SequenceEvaluator                        AnimGraphNode_SequenceEvaluator150;                         // 0x3B00   (0x0060)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult151;                               // 0x3B60   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer152;                            // 0x3B98   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult153;                               // 0x3C28   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer154;                            // 0x3C60   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult155;                               // 0x3CF0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine156;                              // 0x3D28   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult157;                               // 0x3E60   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult158;                          // 0x3E98   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer159;                            // 0x3EC0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult160;                               // 0x3F50   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult161;                          // 0x3F88   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult162;                          // 0x3FB0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult163;                          // 0x3FD8   (0x0028)  
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator164;                   // 0x4000   (0x0140)  
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator165;                   // 0x4140   (0x0140)  
	FAnimNode_StateResult                              AnimGraphNode_CustomTransitionResult166;                    // 0x4280   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult167;                          // 0x42B8   (0x0028)  
	FAnimNode_SequenceEvaluator                        AnimGraphNode_SequenceEvaluator168;                         // 0x42E0   (0x0060)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult169;                               // 0x4340   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer170;                            // 0x4378   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult171;                               // 0x4408   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer172;                            // 0x4440   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult173;                               // 0x44D0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine174;                              // 0x4508   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult175;                               // 0x4640   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult176;                          // 0x4678   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer177;                            // 0x46A0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult178;                               // 0x4730   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult179;                          // 0x4768   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult180;                          // 0x4790   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult181;                          // 0x47B8   (0x0028)  
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator182;                   // 0x47E0   (0x0140)  
	FAnimNode_TransitionPoseEvaluator                  AnimGraphNode_TransitionPoseEvaluator183;                   // 0x4920   (0x0140)  
	FAnimNode_StateResult                              AnimGraphNode_CustomTransitionResult184;                    // 0x4A60   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult185;                          // 0x4A98   (0x0028)  
	FAnimNode_SequenceEvaluator                        AnimGraphNode_SequenceEvaluator186;                         // 0x4AC0   (0x0060)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult187;                               // 0x4B20   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer188;                            // 0x4B58   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult189;                               // 0x4BE8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer190;                            // 0x4C20   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult191;                               // 0x4CB0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine192;                              // 0x4CE8   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult193;                               // 0x4E20   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult194;                          // 0x4E58   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer195;                            // 0x4E80   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult196;                               // 0x4F10   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine197;                              // 0x4F48   (0x0138)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult198;                          // 0x5080   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult199;                          // 0x50A8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult200;                          // 0x50D0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult201;                          // 0x50F8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult202;                          // 0x5120   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult203;                          // 0x5148   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult204;                          // 0x5170   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult205;                          // 0x5198   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult206;                          // 0x51C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult207;                          // 0x51E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult208;                          // 0x5210   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult209;                          // 0x5238   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer210;                            // 0x5260   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult211;                               // 0x52F0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer212;                            // 0x5328   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult213;                               // 0x53B8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer214;                            // 0x53F0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult215;                               // 0x5480   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult216;                          // 0x54B8   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer217;                            // 0x54E0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult218;                               // 0x5570   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult219;                          // 0x55A8   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer220;                            // 0x55D0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult221;                               // 0x5660   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer222;                            // 0x5698   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult223;                               // 0x5728   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer224;                            // 0x5760   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult225;                               // 0x57F0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine226;                              // 0x5828   (0x0138)  
	FAnimNode_BlendListByBool                          AnimGraphNode_BlendListByBool;                              // 0x5960   (0x00B0)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult227;                          // 0x5A10   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult228;                          // 0x5A38   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer229;                            // 0x5A60   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult230;                               // 0x5AF0   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult231;                               // 0x5B28   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine232;                              // 0x5B60   (0x0138)  
	FAnimNode_CombineCurves                            AnimGraphNode_CombineCurves;                                // 0x5C98   (0x0060)  
	FAnimNode_Root                                     AnimGraphNode_Root233;                                      // 0x5CF8   (0x0038)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer;                              // 0x5D30   (0x00C0)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer234;                           // 0x5DF0   (0x00C0)  
	TEnumAsByte<EPerformanceRoleState>                 StateInternal;                                              // 0x5EB0   (0x0001)  
	bool                                               reLoop;                                                     // 0x5EB1   (0x0001)  
	bool                                               bForceChange;                                               // 0x5EB2   (0x0001)  
	unsigned char                                      UnknownData03_6[0x1];                                       // 0x5EB3   (0x0001)  MISSED
	float                                              Delta_Time_X;                                               // 0x5EB4   (0x0004)  
	float                                              HeadAlpha;                                                  // 0x5EB8   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x5EBC   (0x0004)  MISSED
	SDK_UNDEFINED(16,1146) /* FMulticastInlineDelegate */ __um(OnEffectBegin);                                     // 0x5EC0   (0x0010)  
	SDK_UNDEFINED(16,1147) /* FMulticastInlineDelegate */ __um(OnEffectEnd);                                       // 0x5ED0   (0x0010)  
	float                                              PerformDelay;                                               // 0x5EE0   (0x0004)  
	float                                              CurPerformTime;                                             // 0x5EE4   (0x0004)  
	bool                                               bForceChange_Perform;                                       // 0x5EE8   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0x5EE9   (0x0003)  MISSED
	FVector2D                                          CacheViewportSize;                                          // 0x5EEC   (0x0008)  
	FVector                                            LookAtWorld_Position;                                       // 0x5EF4   (0x000C)  
	class USkeletalMeshComponent*                      Mesh;                                                       // 0x5F00   (0x0008)  
	FVector                                            LookAtDirection;                                            // 0x5F08   (0x000C)  
	bool                                               IsCreateRoleState;                                          // 0x5F14   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x5F15   (0x0003)  MISSED
	FVector                                            CreateRoleStartLocation;                                    // 0x5F18   (0x000C)  
	FVector                                            CreateRoleEndLocation;                                      // 0x5F24   (0x000C)  
	float                                              CreateRoleMoveAllTime;                                      // 0x5F30   (0x0004)  
	unsigned char                                      UnknownData07_6[0x4];                                       // 0x5F34   (0x0004)  MISSED
	class ATsUiSceneActor_C*                           Actor;                                                      // 0x5F38   (0x0008)  
	float                                              CreateRoleMoveCurrentTime;                                  // 0x5F40   (0x0004)  
	FRotator                                           CreateRoleStartRotation;                                    // 0x5F44   (0x000C)  
	FVector                                            CreateRoleEndLocationOffset;                                // 0x5F50   (0x000C)  
	FRotator                                           CreateRoleEndRotation;                                      // 0x5F5C   (0x000C)  
	FRotator                                           CreateRoleEndRotationOffset;                                // 0x5F68   (0x000C)  
	float                                              CreateRoleMovePlayRate;                                     // 0x5F74   (0x0004)  
	bool                                               HasInitCreateRoleInfo;                                      // 0x5F78   (0x0001)  
	bool                                               IsLooping;                                                  // 0x5F79   (0x0001)  
	bool                                               bInitCreateRoleInfo;                                        // 0x5F7A   (0x0001)  
	bool                                               InSkillRotate;                                              // 0x5F7B   (0x0001)  
	bool                                               InSkillEndRotate;                                           // 0x5F7C   (0x0001)  
	bool                                               TempRotate;                                                 // 0x5F7D   (0x0001)  
	unsigned char                                      UnknownData08_6[0x2];                                       // 0x5F7E   (0x0002)  MISSED
	FSPerformanceRoleInfo                              PerformanceRoleInfo;                                        // 0x5F80   (0x0008)  
	float                                              BlinkAlpha;                                                 // 0x5F88   (0x0004)  
	bool                                               InBlinking;                                                 // 0x5F8C   (0x0001)  
	unsigned char                                      UnknownData09_6[0x3];                                       // 0x5F8D   (0x0003)  MISSED
	float                                              BlinkEndTime;                                               // 0x5F90   (0x0004)  
	float                                              _w_w_R;                                                     // 0x5F94   (0x0004)  
	float                                              dkn__w_w_;                                                  // 0x5F98   (0x0004)  
	unsigned char                                      UnknownData10_6[0x4];                                       // 0x5F9C   (0x0004)  MISSED
	SDK_UNDEFINED(16,1148) /* TArray<TEnumAsByte<EPerformanceRoleState>> */ __um(SameStateArray01);                // 0x5FA0   (0x0010)  
	bool                                               FALSE235;                                                   // 0x5FB0   (0x0001)  
	bool                                               DirectEnterLoop;                                            // 0x5FB1   (0x0001)  
	TEnumAsByte<EPerformanceRoleState>                 CurrentState;                                               // 0x5FB2   (0x0001)  
	bool                                               reLoopFromLoopToStart;                                      // 0x5FB3   (0x0001)  
	// void PostProcessPose(FPoseLink InPose, FPoseLink& PostProcessPose);                                                      // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void BasePose(FPoseLink& BasePose);                                                                                      // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool IsSameState(TEnumAsByte<EPerformanceRoleState> NewState, TEnumAsByte<EPerformanceRoleState>& StateInternal);        // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void UpdateBlinkInfo();                                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SkillRotate();                                                                                                      // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void GetIsLooping(bool& IsLooping);                                                                                      // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ClearCreateRoleState();                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateCreateRoleLocation();                                                                                         // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void DebugLine(FVector LineStart, FVector LineEnd, FLinearColor LineColor);                                              // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateLookAtRotation();                                                                                             // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void UpdatePerfromTime();                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetPerformDelay(float PerformTime);                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SyncAnimInstance(class UABP_PerformanceRole_C* SourceAnimInstance);                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UpdateHeadRotator();                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// float GetHeadApha();                                                                                                     // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetState(TEnumAsByte<EPerformanceRoleState> State, bool reLoop, bool reLoopFromLoopToStart, bool WaitLaseStateEnd); // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_C60CCB8046FAB6F0C07D51B6B238E4BA(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_83C90D9A461EF15044A8378A68A6F1E7(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_52B4B2CB407931033523C9A14696E52E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_0F4FD3374213D4A81960F6A629673AFD(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_CC733D604E95BE7D9DFA349B1A5B704D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_73AE160147ADB36045B8D9A31DC6AF15(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_7A87E8194AFB02D1564F408592A3BAE7(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_4AEEB993432FEF9CF04A43AFC809B4FC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_2FC853114BF83C19B08BFA8A8E704810(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_DB55A1AE4A9423A5C47525A74E58BEB7(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_A0B917284B95FD2DCEAED29BE0D5525E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_3DADD4CD489C57336548428E9B1B930E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_EF7B72AA40DDC31C385F22A6D2312B57(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_5D88DA9A4E6CB0EE56C4F48CD32B926A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_D841EEBF4C3AAEE4FA4E22A41EEED9B6(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_5BC208AA421FCBC084C7A7B465D64E0E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_04D89DC14225578F83587E82FEB8F549(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_9B9A0DA843AEF6FCA8E554BC94E139A1(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_9DF1923C49FACD33DB7996B4F88AA35F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_D4C08C6346453FFFCC8A24BBA1C4CA70(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_30B0B6454BB641F81FA89F95CA2E7A79(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_942EF62C4B629FF8B62DE58BA4978BE1(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_56C6ACAC4E6FDEC24A16658E3730D394(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_481747314088EF8A503B2B82F47812FC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_3FE8E3C646A416753DEE2AA221F25FA6(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_2A9BD4814CE11A56D9F8B5AD28BCDB54(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_24C99C61467D0205D123EC9AF5E06C23(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_C03E217044F8BF62D9BDACB1542C2794(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_FAF7A35C48527E1EA6A4AAB20EA2F436(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_3D8EDC0949A468E4288C94B5166CDF2E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_0EDB639B401750A5D4E478B1823AE6FC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_7EAEA40441EE79176E27DFA6B4F9FFC5(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_3921814044F2A49574F5B4B48102EC67(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_7331EF0C4FCC8260EC07C4B64D3B1D31(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_DEAF3D294066272ACE060C9862C527BD(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_B66CA673436FECF98D604D97A2B6C06A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_252C9B604DA355A186FC139923D59B56(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_FA89A36640926C129757FAA49AF6A81A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_B16644EE4359CE65D1A16BA8DE0E6A01(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_3BAA36394ACE885F5D49E6B207A23E6C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_87A017DC465C0B783BDB8793686B2399(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_81008DE54870516BAB6E5E90973EF5C6(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_BC16130F44311D0DCB5B3590AECBE007(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_7B44C6194963AAC6D793758E0821AA37(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_3544AA1645E0CF5C1B631BBF34548087(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_A59B1C3E413B4FF0E0A40C8A4E1608A4(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_9C35D5CF4052F823573EDCA339C5BC95(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_05AA19EC4BA5688F5DC376ABA8F556E9(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_BB9DF0D54320499047A5319654D5DC2E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_2C2EF99049E4EE2383BBD8B2786A4567(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_E88CAB8D428F886DE51EB5A9BE372770(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_41DFE03F48C3833355C616B28AAF5009(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_2964307E48D5040F742A49B35F13F408(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_F6F9F8DC40D588C967DF2B9A41C97C25(); // [0x25a7960] BlueprintEvent       
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void AnimNotify_EnterCommonNotify();                                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_LeaveOneLoopAction();                                                                                    // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_D7436D7443A480F5FAF15A882087F30F(); // [0x25a7960] BlueprintEvent       
	// void AnimNotify_EnterPerformIdle();                                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void BlueprintInitializeAnimation();                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_83BA3C6F46EB8037E9C60BB9BDA31608(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_ED21A98E48FA85555EA0D4A7C2A13D4F(); // [0x25a7960] BlueprintEvent       
	// void AnimNotify_EnterLoop();                                                                                             // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_LeaveLoop();                                                                                             // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_AppearanceForwardEnd();                                                                                  // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_BC9EBC4944D2E109BC5CAA94C70EB8BC(); // [0x25a7960] BlueprintEvent       
	// void AnimNotify_SkillEndBegin();                                                                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_PerformanceRole_AnimGraphNode_TransitionResult_1B4EAA5848C16EDBEFB00FB24D38B27F(); // [0x25a7960] BlueprintEvent       
	// void AnimNotify_EnterSkill();                                                                                            // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_LeaveCommonNotify();                                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_ABP_PerformanceRole(int32_t EntryPoint);                                                           // [0x25a7960] Final|HasDefaults    
	// void OnEffectEnd__DelegateSignature();                                                                                   // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
	// void OnEffectBegin__DelegateSignature();                                                                                 // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Module/UiComponent/TsUiAutoPlayLevelSequenceComponent.TsUiAutoPlayLevelSequenceComponent_C
/// Size: 0x0008 (8 bytes) (0x0000E8 - 0x0000F0) align 8 pad: 0x0000
class UTsUiAutoPlayLevelSequenceComponent_C : public ULGUIBehaviour
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00E8   (0x0008)  
	// void AwakeBP();                                                                                                          // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void UpdateBP(float DeltaTime);                                                                                          // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnDestroyBP();                                                                                                      // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void OnUIActiveInHierarchyBP(bool activeOrInactive);                                                                     // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsUiAutoPlayLevelSequenceComponent(int32_t EntryPoint);                                            // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/UI/UIResources/UiFight/LevelSequence/Ani_MissionPnlProcess_StartWithChild.SequenceDirector_C
/// Size: 0x0008 (8 bytes) (0x000038 - 0x000040) align 8 pad: 0x0000
class USequenceDirector_C : public ULevelSequenceDirector
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0038   (0x0008)  
	// void SequenceEvent__ENTRYPOINTSequenceDirector(class AUIContainerActor* PnlParent);                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PnlParentEvent(class AUIContainerActor* PnlParent, FString sequenceName, FString EventName);                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_SequenceDirector(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/UI/UIResources/UiFight/LevelSequence/Ani_MissionPnlProcess_Start.SequenceDirector_C
/// Size: 0x0008 (8 bytes) (0x000038 - 0x000040) align 8 pad: 0x0000
class USequenceDirector_Cdup_0 : public ULevelSequenceDirector
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0038   (0x0008)  
	// void SequenceEvent__ENTRYPOINTSequenceDirector(class AUIContainerActor* PnlParent);                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PnlParent_Event(class AUIContainerActor* PnlParent);                                                                // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_SequenceDirector(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/UI/UIResources/UiFight/LevelSequence/Ani_NewLevelSequence_Up.SequenceDirector_C
/// Size: 0x0008 (8 bytes) (0x000038 - 0x000040) align 8 pad: 0x0000
class USequenceDirector_Cdup_1 : public ULevelSequenceDirector
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0038   (0x0008)  
	// void SequenceEvent__ENTRYPOINTSequenceDirector(class AUINiagaraActor* NiaUp);                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void NiaUp_Event(class AUINiagaraActor* NiaUp);                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_SequenceDirector(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/Data/EffectModelLight.EffectModelLight_C
/// Size: 0x0000 (0 bytes) (0x0006D0 - 0x0006D0) align 8 pad: 0x0000
class UEffectModelLight_C : public UEffectModelLight
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Huabiao/TPrefab_SM_Pro_Tow_03A.TPrefab_SM_Pro_Tow_03A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Tow_03A_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Character/NPC/MaleM/BPData/BP_NH_MaleM_Base.BP_NH_MaleM_Base_C
/// Size: 0x0000 (0 bytes) (0x0007D0 - 0x0007D0) align 16 pad: 0x0000
class ABP_NH_MaleM_Base_C : public ABP_BaseNPC_C
{ 
public:
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/R2T1BaiLianMd10011/ABP_Bailian.ABP_Bailian_C
/// Size: 0x0000 (0 bytes) (0x01ED79 - 0x01ED79) align 16 pad: 0x0000
class UABP_Bailian_C : public UABP_BaseRole_C
{ 
public:
};

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/R2T1KakaluoMd10011/ABP_R2T1KakaluoMd10011_PC.ABP_R2T1KakaluoMd10011_PC_C
/// Size: 0x19D0 (6608 bytes) (0x000378 - 0x001D48) align 16 pad: 0x0008
#pragma pack(push, 0x1)
class UABP_R2T1KakaluoMd10011_PC_C : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0378   (0x0008)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0380   (0x0008)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0388   (0x0038)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose;                              // 0x03C0   (0x0138)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace;                        // 0x04F8   (0x0020)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace;                        // 0x0518   (0x0020)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0538   (0x0008)  MISSED
	FAnimNode_MountBuffer                              AnimGraphNode_MountBuffer;                                  // 0x0540   (0x01D0)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup;                           // 0x0710   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup0;                          // 0x0980   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup1;                          // 0x0BF0   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup2;                          // 0x0E60   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup3;                          // 0x10D0   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup4;                          // 0x1340   (0x0270)  
	FAnimNode_ModifyBone                               AnimGraphNode_ModifyBone;                                   // 0x15B0   (0x0110)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup5;                          // 0x16C0   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup6;                          // 0x1930   (0x0270)  
	FAnimNode_Root                                     AnimGraphNode_Root7;                                        // 0x1BA0   (0x0038)  
	FAnimNode_LinkedAnimGraph                          AnimGraphNode_LinkedAnimGraph;                              // 0x1BD8   (0x00A8)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer;                              // 0x1C80   (0x00C0)  
	bool                                               PhysicsClothSimulateEnable;                                 // 0x1D40   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x1D41   (0x0003)  MISSED
	float                                              PhysicsClothSimulateScale;                                  // 0x1D44   (0x0004)  
	// void PhyCloth(FPoseLink InPose, FPoseLink& PhyCloth);                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdatePhysicsClothSimulateEnable(float DeltaTime);                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_ABP_R2T1KakaluoMd10011_PC(int32_t EntryPoint);                                                     // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/FemaleS/Jueyuan/R2T1JueyuanMd10011/ABP_R2T1JueyuanMd10011_PC.ABP_R2T1JueyuanMd10011_PC_C
/// Size: 0x1B30 (6960 bytes) (0x000378 - 0x001EA8) align 16 pad: 0x0008
#pragma pack(push, 0x1)
class UABP_R2T1JueyuanMd10011_PC_C : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0378   (0x0008)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0380   (0x0008)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0388   (0x0038)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose;                              // 0x03C0   (0x0138)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace;                        // 0x04F8   (0x0020)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace;                        // 0x0518   (0x0020)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0538   (0x0008)  MISSED
	FAnimNode_MountBuffer                              AnimGraphNode_MountBuffer;                                  // 0x0540   (0x01D0)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup;                           // 0x0710   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup0;                          // 0x0980   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup1;                          // 0x0BF0   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup2;                          // 0x0E60   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup3;                          // 0x10D0   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup4;                          // 0x1340   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup5;                          // 0x15B0   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup6;                          // 0x1820   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup7;                          // 0x1A90   (0x0270)  
	FAnimNode_Root                                     AnimGraphNode_Root8;                                        // 0x1D00   (0x0038)  
	FAnimNode_LinkedAnimGraph                          AnimGraphNode_LinkedAnimGraph;                              // 0x1D38   (0x00A8)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer;                              // 0x1DE0   (0x00C0)  
	bool                                               PhysicsClothSimulateEnable;                                 // 0x1EA0   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x1EA1   (0x0003)  MISSED
	float                                              PhysicsClothSimulateScale;                                  // 0x1EA4   (0x0004)  
	// void PhyCloth(FPoseLink InPose, FPoseLink& PhyCloth);                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdatePhysicsClothSimulateEnable(float DeltaTime);                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_ABP_R2T1JueyuanMd10011_PC(int32_t EntryPoint);                                                     // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/R2T1BaiLianMd10011/ABP_R2T1BaiLianMd10011_PC.ABP_R2T1BaiLianMd10011_PC_C
/// Size: 0x2010 (8208 bytes) (0x000378 - 0x002388) align 16 pad: 0x0008
#pragma pack(push, 0x1)
class UABP_R2T1BaiLianMd10011_PC_C : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0378   (0x0008)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0380   (0x0008)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0388   (0x0008)  MISSED
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup;                           // 0x0390   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup0;                          // 0x0600   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup1;                          // 0x0870   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup2;                          // 0x0AE0   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup3;                          // 0x0D50   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup4;                          // 0x0FC0   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup5;                          // 0x1230   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup6;                          // 0x14A0   (0x0270)  
	FAnimNode_MountBuffer                              AnimGraphNode_MountBuffer;                                  // 0x1710   (0x01D0)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace;                        // 0x18E0   (0x0020)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace;                        // 0x1900   (0x0020)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose;                              // 0x1920   (0x0138)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x1A58   (0x0038)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup7;                          // 0x1A90   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup8;                          // 0x1D00   (0x0270)  
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup9;                          // 0x1F70   (0x0270)  
	FAnimNode_Root                                     AnimGraphNode_Root10;                                       // 0x21E0   (0x0038)  
	FAnimNode_LinkedAnimGraph                          AnimGraphNode_LinkedAnimGraph;                              // 0x2218   (0x00A8)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer;                              // 0x22C0   (0x00C0)  
	bool                                               PhysicsClothSimulateEnable;                                 // 0x2380   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x2381   (0x0003)  MISSED
	float                                              PhysicsClothSimulateScale;                                  // 0x2384   (0x0004)  
	// void PhyCloth(FPoseLink InPose, FPoseLink& PhyCloth);                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdatePhysicsClothSimulateEnable(float DeltaTime);                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_ABP_R2T1BaiLianMd10011_PC(int32_t EntryPoint);                                                     // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Weapon/Device/Common/ABP_Device_Common.ABP_Device_Common_C
/// Size: 0x1722 (5922 bytes) (0x000378 - 0x001A9A) align 16 pad: 0x000A
#pragma pack(push, 0x1)
class UABP_Device_Common_C : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0378   (0x0008)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0380   (0x0008)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0388   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult;                             // 0x03C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult0;                            // 0x03E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1;                            // 0x0410   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult2;                            // 0x0438   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult3;                            // 0x0460   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult4;                            // 0x0488   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult5;                            // 0x04B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult6;                            // 0x04D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult7;                            // 0x0500   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult8;                            // 0x0528   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult9;                            // 0x0550   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult10;                           // 0x0578   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult11;                           // 0x05A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult12;                           // 0x05C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult13;                           // 0x05F0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult14;                           // 0x0618   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult15;                           // 0x0640   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult16;                           // 0x0668   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult17;                           // 0x0690   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer;                               // 0x06B8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult;                                  // 0x0748   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer18;                             // 0x0780   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult19;                                // 0x0810   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer20;                             // 0x0848   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult21;                                // 0x08D8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer22;                             // 0x0910   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult23;                                // 0x09A0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer24;                             // 0x09D8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult25;                                // 0x0A68   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer26;                             // 0x0AA0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult27;                                // 0x0B30   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer28;                             // 0x0B68   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult29;                                // 0x0BF8   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult30;                                // 0x0C30   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer31;                             // 0x0C68   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult32;                                // 0x0CF8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine;                                 // 0x0D30   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult33;                                // 0x0E68   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult34;                           // 0x0EA0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult35;                           // 0x0EC8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult36;                           // 0x0EF0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult37;                           // 0x0F18   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult38;                           // 0x0F40   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult39;                           // 0x0F68   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult40;                           // 0x0F90   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult41;                           // 0x0FB8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult42;                           // 0x0FE0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult43;                           // 0x1008   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult44;                           // 0x1030   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult45;                           // 0x1058   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult46;                           // 0x1080   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult47;                           // 0x10A8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult48;                           // 0x10D0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult49;                           // 0x10F8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult50;                           // 0x1120   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer51;                             // 0x1148   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult52;                                // 0x11D8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer53;                             // 0x1210   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult54;                                // 0x12A0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer55;                             // 0x12D8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult56;                                // 0x1368   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer57;                             // 0x13A0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult58;                                // 0x1430   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer59;                             // 0x1468   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult60;                                // 0x14F8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer61;                             // 0x1530   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult62;                                // 0x15C0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer63;                             // 0x15F8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult64;                                // 0x1688   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer65;                             // 0x16C0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult66;                                // 0x1750   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult67;                                // 0x1788   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine68;                               // 0x17C0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult69;                                // 0x18F8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine70;                               // 0x1930   (0x0138)  
	class ATsBaseCharacter_C*                          __r_;                                                       // 0x1A68   (0x0008)  
	bool                                               Weapon_Fire;                                                // 0x1A70   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x1A71   (0x0003)  MISSED
	float                                              BlendSpacePriority;                                         // 0x1A74   (0x0004)  
	bool                                               fkhV_f_;                                                    // 0x1A78   (0x0001)  
	bool                                               IsUI;                                                       // 0x1A79   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x1A7A   (0x0002)  MISSED
	float                                              open_delay;                                                 // 0x1A7C   (0x0004)  
	float                                              Delta_Time;                                                 // 0x1A80   (0x0004)  
	bool                                               _N_RsQ;                                                     // 0x1A84   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x1A85   (0x0003)  MISSED
	float                                              fkhV_S_S_b;                                                 // 0x1A88   (0x0004)  
	float                                              S_MRfkhV;                                                   // 0x1A8C   (0x0004)  
	class ATsUiSceneRoleActor_C*                       U;                                                          // 0x1A90   (0x0008)  
	TEnumAsByte<EWeaponViewName>                       U71;                                                        // 0x1A98   (0x0001)  
	bool                                               _f_Tck_W_d;                                                 // 0x1A99   (0x0001)  
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_496F3339419C67DBA9B833A822499DED(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_75C781B3411C24D24B7D5FAF66DFA385(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_721E50794DDB9A79D4100EAB7E35F299(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_F5DA0AB14BAE650CC9429A95FE081CF9(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_90D0EFAA41EA7FEDDC95AE936D982F81(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_1294B2C4411BA21C085A62B6B010F013(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_5ECEA32A4BDD5F2AF07D60BCD9E35B43(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_D89A6FCA4FF2DAAA1CB2069005BF68E4(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_DA0A1C8845A28BA88991BCAAA1324C83(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_4B9697574747B66C9A2ADCBE0587698F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_56A4CFBB4212CCC969B0F1A9C778E0B5(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_8A2185A841A6505A705C1495FA24D054(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_ECC111D047D595675620C381CD364F46(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_293259C743DE0A8F263870B4C29BAA3A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_9B68E29F49854555551F8F9B640BC309(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_D4A72CC8490E8FBF64E54F955CA235E6(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_4C21884D46658354CD8FA491AB22C799(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_0384BD3F4874F7BD9189C78138933669(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_221B77704AC52D156BA19CA86207F990(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_179FC3464D4423EC0D9F40BD5EB39C4A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_650FE42B4AF795C762BB629A58D6D6F3(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_AF95079347D05829D2D25CAA047A1BA4(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_02EBA3A24EC79133BF3F66847E091ABF(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_39E6A5094AB60E03BE2089B0D0887B00(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_F3B7B59B414C0E84144368B72062FB09(); // [0x25a7960] BlueprintEvent       
	// void BlueprintInitializeAnimation();                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Device_Common_AnimGraphNode_TransitionResult_E7FA0AEA4F4D9515AB5BF5AC37FD3ECF(); // [0x25a7960] BlueprintEvent       
	// void Clear_Open_Delay();                                                                                                 // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void Set_Open_Delay();                                                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void CustomEvent();                                                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_ABP_Device_Common(int32_t EntryPoint);                                                             // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/Render/Scene/Item/SceneInteractionActor.SceneInteractionActor_C
/// Size: 0x0260 (608 bytes) (0x0002A8 - 0x000508) align 8 pad: 0x0000
class ASceneInteractionActor_C : public AKuroSceneInteractionActor
{ 
public:
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02A8   (0x0008)  
	SDK_UNDEFINED(80,1149) /* TMap<EKuroSceneInteractionState, FSSceneInteractionitem> */ __um(States);            // 0x02B0   (0x0050)  
	SDK_UNDEFINED(80,1150) /* TMap<FString, AActor*> */ __um(ReferenceActors);                                     // 0x0300   (0x0050)  
	TArray<class AActor*>                              CollisionActors;                                            // 0x0350   (0x0010)  
	FString                                            LevelName;                                                  // 0x0360   (0x0010)  
	float                                              HandleId;                                                   // 0x0370   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0374   (0x0004)  MISSED
	SDK_UNDEFINED(80,1151) /* TMap<TEnumAsByte<ESceneInteractionEffect>, ABP_EffectActor_C*> */ __um(EndEffects);  // 0x0378   (0x0050)  
	SDK_UNDEFINED(80,1152) /* TMap<TEnumAsByte<ESceneInteractionEffect>, FSScenePropertyEffect> */ __um(Effects);  // 0x03C8   (0x0050)  
	TArray<class AActor*>                              InteractionEffectHookActors;                                // 0x0418   (0x0010)  
	class ATsBaseCharacter_C*                          CharacterForOrgan;                                          // 0x0428   (0x0008)  
	SDK_UNDEFINED(80,1153) /* TMap<FGameplayTag, FSSceneInteractionTags> */ __um(TagsAndCorrespondingEffects);     // 0x0430   (0x0050)  
	TArray<class AActor*>                              ActorsForProjection;                                        // 0x0480   (0x0010)  
	SDK_UNDEFINED(80,1154) /* TMap<AActor*, FGameplayTag> */ __um(PartCollisionActorsAndCorrespondingTags);        // 0x0490   (0x0050)  
	class UMaterialInstance*                           MaterialForProjection;                                      // 0x04E0   (0x0008)  
	TArray<class ASkeletalMeshActor*>                  SkeletalMeshActors;                                         // 0x04E8   (0x0010)  
	TArray<class AActor*>                              ReceivingDecalsActors;                                      // 0x04F8   (0x0010)  
	// void DestroySelf();                                                                                                      // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// class ALevelSequenceActor* GetDirectorBySequence(class ULevelSequence* Sequence);                                        // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void StopExtraEffectOnTagsChange(FGameplayTag Tag);                                                                      // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ResetTagActorHide(FGameplayTag Tag);                                                                                // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddMatrialDataForChildrenActor(class AActor* Actor, class UItemMaterialControllerActorData_C* materialData);        // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddNewEndEffect();                                                                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void UpdateTimeDilation();                                                                                               // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddNewState();                                                                                                      // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddNewEffect();                                                                                                     // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/NPC/MaleM/BPData/BP_NH_MaleM_001.BP_NH_MaleM_001_C
/// Size: 0x0000 (0 bytes) (0x0007D0 - 0x0007D0) align 16 pad: 0x0000
class ABP_NH_MaleM_001_C : public ABP_BaseNPC_C
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/TPrefab_SM_Gat_13A.TPrefab_SM_Gat_13A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_13A_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/TPrefab_SM_Gat_14A.TPrefab_SM_Gat_14A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_14A_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Character/NPC/FemaleM/BPData/BP_NH_FemaleM_Base.BP_NH_FemaleM_Base_C
/// Size: 0x0000 (0 bytes) (0x0007D0 - 0x0007D0) align 16 pad: 0x0000
class ABP_NH_FemaleM_Base_C : public ABP_BaseNPC_C
{ 
public:
};

/// Class /Game/Aki/Character/Item/EmptyEntity1.EmptyEntity1_C
/// Size: 0x0000 (0 bytes) (0x0002DC - 0x0002DC) align 8 pad: 0x0000
class AEmptyEntity1_C : public ABP_BaseItem_C
{ 
public:
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/BP_BaiLian.BP_BaiLian_C
/// Size: 0x0047 (71 bytes) (0x000771 - 0x0007B8) align 16 pad: 0x0008
#pragma pack(push, 0x1)
class ABP_BaiLian_C : public ATsBaseCharacter_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0771   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0778   (0x0008)  
	class UCapsuleComponent*                           Bip001RThighTwist;                                          // 0x0780   (0x0008)  
	class UCapsuleComponent*                           Bip001LThighTwist;                                          // 0x0788   (0x0008)  
	class UCapsuleComponent*                           Bip001LCalf;                                                // 0x0790   (0x0008)  
	class UCapsuleComponent*                           Bip001RCalf;                                                // 0x0798   (0x0008)  
	class UCapsuleComponent*                           Bip001Spine2;                                               // 0x07A0   (0x0008)  
	class USkeletalMeshComponent*                      WeaponCase0;                                                // 0x07A8   (0x0008)  
	int32_t                                            _9____k;                                                    // 0x07B0   (0x0004)  
	int32_t                                            S_MR9_;                                                     // 0x07B4   (0x0004)  
	// void FightCommand(bool isInAir);                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_BP_BaiLian(int32_t EntryPoint);                                                                    // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/FemaleS/Jueyuan/BP_Jueyuan.BP_Jueyuan_C
/// Size: 0x001F (31 bytes) (0x000771 - 0x000790) align 16 pad: 0x0000
class ABP_Jueyuan_C : public ATsBaseCharacter_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0771   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0778   (0x0008)  
	class UCameraComponent*                            Camera;                                                     // 0x0780   (0x0008)  
	class USkeletalMeshComponent*                      WeaponCase0;                                                // 0x0788   (0x0008)  
	// void FightCommand(bool isInAir);                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// bool ___SS_MR_____f_T();                                                                                                 // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_BP_Jueyuan(int32_t EntryPoint);                                                                    // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/BP_Kakaluo.BP_Kakaluo_C
/// Size: 0x003F (63 bytes) (0x000771 - 0x0007B0) align 16 pad: 0x0000
class ABP_Kakaluo_C : public ATsBaseCharacter_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0771   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0778   (0x0008)  
	class USkeletalMeshComponent*                      WeaponCase0;                                                // 0x0780   (0x0008)  
	class USkeletalMeshComponent*                      OtherCase1;                                                 // 0x0788   (0x0008)  
	class USkeletalMeshComponent*                      OtherCase2;                                                 // 0x0790   (0x0008)  
	bool                                               ____;                                                       // 0x0798   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0799   (0x0007)  MISSED
	FString                                            NewVar;                                                     // 0x07A0   (0x0010)  
	// void FightCommand(bool isInAir);                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_BP_Kakaluo(int32_t EntryPoint);                                                                    // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/FemaleS/Jueyuan/R2T1JueyuanMd10011/ABP_Jueyuan.ABP_Jueyuan_C
/// Size: 0x0000 (0 bytes) (0x01ED79 - 0x01ED79) align 16 pad: 0x0000
class UABP_Jueyuan_C : public UABP_BaseRole_C
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateEnterWaterMoveOffset.TsAnimNotifyStateEnterWaterMoveOffset_C
/// Size: 0x0004 (4 bytes) (0x000048 - 0x00004C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UTsAnimNotifyStateEnterWaterMoveOffset_C : public UKuroAnimNotifyState
{ 
public:
	float                                              EnterWaterVelocityZ;                                        // 0x0048   (0x0004)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateAddLocationBlackboard.TsAnimNotifyStateAddLocationBlackboard_C
/// Size: 0x0029 (41 bytes) (0x000048 - 0x000071) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsAnimNotifyStateAddLocationBlackboard_C : public UKuroAnimNotifyState
{ 
public:
	class UCurveFloat*                                 Curve;                                                      // 0x0048   (0x0008)  
	bool                                               NeedChangeToFlying;                                         // 0x0050   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0051   (0x0007)  MISSED
	FText                                              AddLocationKey;                                             // 0x0058   (0x0018)  
	TEnumAsByte<EAnsBlackboardType>                    ___g;                                                       // 0x0070   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateAccelInSplineMove.TsAnimNotifyStateAccelInSplineMove_C
/// Size: 0x0000 (0 bytes) (0x000048 - 0x000048) align 8 pad: 0x0000
class UTsAnimNotifyStateAccelInSplineMove_C : public UKuroAnimNotifyState
{ 
public:
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyChangeAcceleration.TsAnimNotifyChangeAcceleration_C
/// Size: 0x0005 (5 bytes) (0x000048 - 0x00004D) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UTsAnimNotifyChangeAcceleration_C : public UKuroAnimNotify
{ 
public:
	float                                              Time;                                                       // 0x0048   (0x0004)  
	TEnumAsByte<ECharState>                            MoveState;                                                  // 0x004C   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyClearCharInput.TsAnimNotifyClearCharInput_C
/// Size: 0x0000 (0 bytes) (0x000048 - 0x000048) align 8 pad: 0x0000
class UTsAnimNotifyClearCharInput_C : public UKuroAnimNotify
{ 
public:
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyRoleSitDown.TsAnimNotifyRoleSitDown_C
/// Size: 0x0000 (0 bytes) (0x000048 - 0x000048) align 8 pad: 0x0000
class UTsAnimNotifyRoleSitDown_C : public UKuroAnimNotify
{ 
public:
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateTurnAdd.TsAnimNotifyStateTurnAdd_C
/// Size: 0x0000 (0 bytes) (0x000048 - 0x000048) align 8 pad: 0x0000
class UTsAnimNotifyStateTurnAdd_C : public UKuroAnimNotifyState
{ 
public:
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateSetWalkOff.TsAnimNotifyStateSetWalkOff_C
/// Size: 0x0000 (0 bytes) (0x000048 - 0x000048) align 8 pad: 0x0000
class UTsAnimNotifyStateSetWalkOff_C : public UKuroAnimNotifyState
{ 
public:
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateAudioEvent.TsAnimNotifyStateAudioEvent_C
/// Size: 0x00C8 (200 bytes) (0x000048 - 0x000110) align 8 pad: 0x0000
class UTsAnimNotifyStateAudioEvent_C : public UKuroAnimNotifyState
{ 
public:
	SDK_UNDEFINED(48,1155) /* TWeakObjectPtr<UAkAudioEvent*> */ __um(AudioEvent);                                  // 0x0048   (0x0030)  
	FName                                              SocketName;                                                 // 0x0078   (0x000C)  
	bool                                               Follow;                                                     // 0x0084   (0x0001)  
	bool                                               KeepAlive;                                                  // 0x0085   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0086   (0x0002)  MISSED
	int32_t                                            FadeDuration;                                               // 0x0088   (0x0004)  
	EAudioFadeCurve                                    FadeCurve;                                                  // 0x008C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x008D   (0x0003)  MISSED
	SDK_UNDEFINED(48,1156) /* TWeakObjectPtr<UAkAudioEvent*> */ __um(TrailingAudioEvent);                          // 0x0090   (0x0030)  
	SDK_UNDEFINED(80,1157) /* TMap<AActor*, float> */  __um(HandleMap);                                            // 0x00C0   (0x0050)  
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateAddTag.TsAnimNotifyStateAddTag_C
/// Size: 0x000D (13 bytes) (0x000048 - 0x000055) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UTsAnimNotifyStateAddTag_C : public UKuroAnimNotifyState
{ 
public:
	FGameplayTag                                       Tag;                                                        // 0x0048   (0x000C)  
	bool                                               NeedDelayTrigger;                                           // 0x0054   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyAudioEvent.TsAnimNotifyAudioEvent_C
/// Size: 0x003D (61 bytes) (0x000048 - 0x000085) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UTsAnimNotifyAudioEvent_C : public UKuroAnimNotify
{ 
public:
	SDK_UNDEFINED(48,1158) /* TWeakObjectPtr<UAkAudioEvent*> */ __um(AudioEvent);                                  // 0x0048   (0x0030)  
	FName                                              SocketName;                                                 // 0x0078   (0x000C)  
	bool                                               Follow;                                                     // 0x0084   (0x0001)  
	// void PostAudioEventAsync(FString audioEventPath, class USkeletalMeshComponent* MeshComponent, class UAnimSequenceBase* AnimSequence); // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
};
#pragma pack(pop)

/// Class /Game/Aki/Render/RuntimeBP/Character/AnimNotify/BP_AnimNotify_AddMaterialControllerData.BP_AnimNotify_AddMaterialControllerData_C
/// Size: 0x0000 (0 bytes) (0x000051 - 0x000051) align 8 pad: 0x0000
class UBP_AnimNotify_AddMaterialControllerData_C : public UAnimNotifyAddMaterialControllerData_C
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateRoleRotate.TsAnimNotifyStateRoleRotate_C
/// Size: 0x002E (46 bytes) (0x000048 - 0x000076) align 8 pad: 0x0006
#pragma pack(push, 0x1)
class UTsAnimNotifyStateRoleRotate_C : public UKuroAnimNotifyState
{ 
public:
	bool                                               _f_T___R;                                                   // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0049   (0x0007)  MISSED
	FGameplayTagContainer                              TagContainer;                                               // 0x0050   (0x0020)  
	float                                              _el_;                                                       // 0x0070   (0x0004)  
	bool                                               _W_j_g_j;                                                   // 0x0074   (0x0001)  
	bool                                               _S_W_j_g_;                                                  // 0x0075   (0x0001)  
	// void Init();                                                                                                             // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/R2T1KakaluoMd10011/ABP_Kakaluo.ABP_Kakaluo_C
/// Size: 0x0000 (0 bytes) (0x01ED79 - 0x01ED79) align 16 pad: 0x0000
class UABP_Kakaluo_C : public UABP_BaseRole_C
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateWeaponHang.TsAnimNotifyStateWeaponHang_C
/// Size: 0x0030 (48 bytes) (0x000048 - 0x000078) align 8 pad: 0x0000
class UTsAnimNotifyStateWeaponHang_C : public UKuroAnimNotifyState
{ 
public:
	int32_t                                            ID;                                                         // 0x0048   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x004C   (0x0004)  MISSED
	TArray<FName>                                      _e_v_c;                                                     // 0x0050   (0x0010)  
	TArray<FTransform>                                 _c___v;                                                     // 0x0060   (0x0010)  
	int32_t                                            ___g_;                                                      // 0x0070   (0x0004)  
	float                                              ___Q;                                                       // 0x0074   (0x0004)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateSetRootMotionScale.TsAnimNotifyStateSetRootMotionScale_C
/// Size: 0x000C (12 bytes) (0x000048 - 0x000054) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UTsAnimNotifyStateSetRootMotionScale_C : public UKuroAnimNotifyState
{ 
public:
	FGameplayTag                                       Tag;                                                        // 0x0048   (0x000C)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyChangeSkillPriority.TsAnimNotifyChangeSkillPriority_C
/// Size: 0x0004 (4 bytes) (0x000048 - 0x00004C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UTsAnimNotifyChangeSkillPriority_C : public UKuroAnimNotify
{ 
public:
	float                                              Priority;                                                   // 0x0048   (0x0004)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyBreakPoint.TsAnimNotifyBreakPoint_C
/// Size: 0x0000 (0 bytes) (0x000048 - 0x000048) align 8 pad: 0x0000
class UTsAnimNotifyBreakPoint_C : public UKuroAnimNotify
{ 
public:
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateRotate.TsAnimNotifyStateRotate_C
/// Size: 0x003A (58 bytes) (0x000048 - 0x000082) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class UTsAnimNotifyStateRotate_C : public UKuroAnimNotifyState
{ 
public:
	float                                              _el_;                                                       // 0x0048   (0x0004)  
	bool                                               _f_T___R;                                                   // 0x004C   (0x0001)  
	bool                                               _f_Ts_;                                                     // 0x004D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x004E   (0x0002)  MISSED
	class UCurveFloat*                                 Curve;                                                      // 0x0050   (0x0008)  
	bool                                               _f_T___u;                                                   // 0x0058   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0059   (0x0003)  MISSED
	float                                              _el_0;                                                      // 0x005C   (0x0004)  
	bool                                               __n__N_g_;                                                  // 0x0060   (0x0001)  
	TEnumAsByte<EAnsRotateBlackboardType>              ___g;                                                       // 0x0061   (0x0001)  
	unsigned char                                      UnknownData02_6[0x6];                                       // 0x0062   (0x0006)  MISSED
	FString                                            _g_T___;                                                    // 0x0068   (0x0010)  
	float                                              _Pbk_e;                                                     // 0x0078   (0x0004)  
	float                                              _____e;                                                     // 0x007C   (0x0004)  
	bool                                               _W_j_g_j;                                                   // 0x0080   (0x0001)  
	bool                                               _S_W_j_g_;                                                  // 0x0081   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// void Initialize();                                                                                                       // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateShowUiWeapon.TsAnimNotifyStateShowUiWeapon_C
/// Size: 0x0039 (57 bytes) (0x000048 - 0x000081) align 16 pad: 0x0001
#pragma pack(push, 0x1)
class UTsAnimNotifyStateShowUiWeapon_C : public UKuroAnimNotifyState
{ 
public:
	int32_t                                            WeaponIndex;                                                // 0x0048   (0x0004)  
	bool                                               ShowMaterialController;                                     // 0x004C   (0x0001)  
	bool                                               HideEffect;                                                 // 0x004D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x004E   (0x0002)  MISSED
	FTransform                                         Transform;                                                  // 0x0050   (0x0030)  
	bool                                               NeedDelayTrigger;                                           // 0x0080   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyWeaponHide.TsAnimNotifyWeaponHide_C
/// Size: 0x000A (10 bytes) (0x000048 - 0x000052) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class UTsAnimNotifyWeaponHide_C : public UKuroAnimNotify
{ 
public:
	bool                                               Hide;                                                       // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0049   (0x0003)  MISSED
	int32_t                                            WeaponIndex;                                                // 0x004C   (0x0004)  
	bool                                               HideEffect;                                                 // 0x0050   (0x0001)  
	bool                                               useHighPriority;                                            // 0x0051   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifySendGamePlayEvent.TsAnimNotifySendGamePlayEvent_C
/// Size: 0x000C (12 bytes) (0x000048 - 0x000054) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UTsAnimNotifySendGamePlayEvent_C : public UKuroAnimNotify
{ 
public:
	FGameplayTag                                       _N_NT;                                                      // 0x0048   (0x000C)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyCameraShake.TsAnimNotifyCameraShake_C
/// Size: 0x000D (13 bytes) (0x000048 - 0x000055) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UTsAnimNotifyCameraShake_C : public UKuroAnimNotify
{ 
public:
	class UClass*                                      ___R;                                                       // 0x0048   (0x0008)  
	float                                              Radius;                                                     // 0x0050   (0x0004)  
	bool                                               bForSelf;                                                   // 0x0054   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyCameraModify.TsAnimNotifyCameraModify_C
/// Size: 0x0130 (304 bytes) (0x000048 - 0x000178) align 8 pad: 0x0000
class UTsAnimNotifyCameraModify_C : public UKuroAnimNotify
{ 
public:
	FGameplayTag                                       Tag;                                                        // 0x0048   (0x000C)  
	float                                              _c__;                                                       // 0x0054   (0x0004)  
	float                                              _meQ;                                                       // 0x0058   (0x0004)  
	float                                              _m_Q;                                                       // 0x005C   (0x0004)  
	float                                              Sb_e_m;                                                     // 0x0060   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0064   (0x0004)  MISSED
	FSCameraModifier_Settings                          _v_g_O;                                                     // 0x0068   (0x00E8)  
	TEnumAsByte<ECameraAnsEffectiveClientType>         _uHe__7;                                                    // 0x0150   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0151   (0x0007)  MISSED
	FString                                            CameraAttachSocket;                                         // 0x0158   (0x0010)  
	TArray<FSCameraModifier_Condition>                 ag;                                                         // 0x0168   (0x0010)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/NCS_Role_Manipulate_Intercat.NCS_Role_Manipulate_Intercat_C
/// Size: 0x0000 (0 bytes) (0x0001B8 - 0x0001B8) align 16 pad: 0x0000
class UNCS_Role_Manipulate_Intercat_C : public UBP_CameraShakeAndForceFeedback_C
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_HuanXiangShouFu.GA_HuanXiangShouFu_C
/// Size: 0x0014 (20 bytes) (0x000538 - 0x00054C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_HuanXiangShouFu_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	FVector                                            Loc;                                                        // 0x0540   (0x000C)  
	// void b__T_v(class ATsBaseCharacter_C* _v, FVector b__T);                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_HuanXiangShouFu(int32_t EntryPoint);                                                            // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/FemaleS/Jueyuan/Data/Camera/CS_Jueyuan_Attack01.CS_Jueyuan_Attack01_C
/// Size: 0x0000 (0 bytes) (0x000190 - 0x000190) align 16 pad: 0x0000
class UCS_Jueyuan_Attack01_C : public UMatineeCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/FemaleS/Jueyuan/Data/Camera/CS_Jueyuan_Skill02.CS_Jueyuan_Skill02_2_C
/// Size: 0x0000 (0 bytes) (0x000190 - 0x000190) align 16 pad: 0x0000
class UCS_Jueyuan_Skill02_2_C : public UMatineeCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Common_ManipulateSwitchMode.GA_Common_ManipulateSwitchMode_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Common_ManipulateSwitchMode_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Common_ManipulateSwitchMode(int32_t EntryPoint);                                                // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Vision/GA/Role/GA_Role_Manipulate_Interact.GA_Role_Manipulate_Interact_C
/// Size: 0x003D (61 bytes) (0x00052C - 0x000569) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UGA_Role_Manipulate_Interact_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          _e_;                                                        // 0x0538   (0x0008)  
	FVector                                            Location;                                                   // 0x0540   (0x000C)  
	FVector                                            Offset;                                                     // 0x054C   (0x000C)  
	int32_t                                            Entity_Id;                                                  // 0x0558   (0x0004)  
	float                                              Angle;                                                      // 0x055C   (0x0004)  
	class UGameplayTask_WaitDelay*                     __ek;                                                       // 0x0560   (0x0008)  
	bool                                               NeedEndInteract;                                            // 0x0568   (0x0001)  
	// void _b_S__ir();                                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EventReceived_44FF63264A230FD9F18960A3EB76974F(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_00C8196443CD5DE9C29235873B26B2E6(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_51373DD5419FFE14CB0708A249637F19();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_Manipulate_Interact(int32_t EntryPoint);                                                   // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Vision/GA/Role/GA_Role_Manipulate_ExtraAction.GA_Role_Manipulate_ExtraAction_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Role_Manipulate_ExtraAction_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_Manipulate_ExtraAction(int32_t EntryPoint);                                                // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Interaction_DurationInteract.GA_Interaction_DurationInteract_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_Interaction_DurationInteract_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class AActor*                                      ___;                                                        // 0x0538   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81303EAA5E();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81303EAA5E();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81303EAA5E();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81303EAA5E();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81303EAA5E();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Interaction_DurationInteract(int32_t EntryPoint);                                               // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Interaction_StandControl.GA_Interaction_StandControl_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_Interaction_StandControl_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class AActor*                                      ___;                                                        // 0x0538   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E8166FD408C();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8166FD408C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8166FD408C();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8166FD408C();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8166FD408C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Interaction_StandControl(int32_t EntryPoint);                                                   // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Interaction_StandControl_Passive.GA_Interaction_StandControl_Passive_C
/// Size: 0x0008 (8 bytes) (0x000538 - 0x000540) align 8 pad: 0x0000
class UGA_Interaction_StandControl_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Interaction_StandControl_Passive(int32_t EntryPoint);                                           // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Interaction_Bounce_Passive.GA_Interaction_Bounce_Passive_C
/// Size: 0x0008 (8 bytes) (0x000538 - 0x000540) align 8 pad: 0x0000
class UGA_Interaction_Bounce_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Interaction_Bounce_Passive(int32_t EntryPoint);                                                 // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Interaction_Catapult_Passive.GA_Interaction_Catapult_Passive_C
/// Size: 0x0008 (8 bytes) (0x000538 - 0x000540) align 8 pad: 0x0000
class UGA_Interaction_Catapult_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Interaction_Catapult_Passive(int32_t EntryPoint);                                               // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Interaction_Giant_Passive.GA_Interaction_Giant_Passive_C
/// Size: 0x0008 (8 bytes) (0x000538 - 0x000540) align 8 pad: 0x0000
class UGA_Interaction_Giant_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Interaction_Giant_Passive(int32_t EntryPoint);                                                  // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Role_LandEnd_Net.GA_Role_LandEnd_Net_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Role_LandEnd_Net_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void Added_B7E505E3445443CA4C27F38B7FAAFD98(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_CF97F8BF4298CF4D3C76EB9D81A391D8(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnFinish_60C8757C4F274DFA6A15BFB2BBC51946();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E8120D6F4B4();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8120D6F4B4();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8120D6F4B4();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8120D6F4B4();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8120D6F4B4();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_LandEnd_Net(int32_t EntryPoint);                                                           // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Role_Move_B_Net.GA_Role_Move_B_Net_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Role_Move_B_Net_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// bool K2_CanActivateAbility(FGameplayAbilityActorInfo ActorInfo, FGameplayTagContainer& RelevantTags);                    // [0x25a7960] Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|Const 
	// void Added_21071CB943CD992BF8EFD6A308FB4881(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81A7B032EA();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81A7B032EA();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81A7B032EA();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81A7B032EA();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81A7B032EA();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_Move_B_Net(int32_t EntryPoint);                                                            // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_HuKouSanMai_Ball_Passive.GA_WuYinQu_HuKouSanMai_Ball_Passive_C
/// Size: 0x0008 (8 bytes) (0x000538 - 0x000540) align 8 pad: 0x0000
class UGA_WuYinQu_HuKouSanMai_Ball_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_HuKouSanMai_Ball_Passive(int32_t EntryPoint);                                           // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_HuKouSanMai_Ball.GA_WuYinQu_HuKouSanMai_Ball_C
/// Size: 0x0024 (36 bytes) (0x00052C - 0x000550) align 8 pad: 0x0000
class UGA_WuYinQu_HuKouSanMai_Ball_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	float                                              ___g;                                                       // 0x0538   (0x0004)  
	float                                              ___g0;                                                      // 0x053C   (0x0004)  
	FString                                            P_9__;                                                      // 0x0540   (0x0010)  
	// bool K2_CanActivateAbility(FGameplayAbilityActorInfo ActorInfo, FGameplayTagContainer& RelevantTags);                    // [0x25a7960] Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|Const 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_HuKouSanMai_Ball(int32_t EntryPoint);                                                   // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_YiLuoYuanXiang_Ball_Passive.GA_WuYinQu_YiLuoYuanXiang_Ball_Passive_C
/// Size: 0x0008 (8 bytes) (0x000538 - 0x000540) align 8 pad: 0x0000
class UGA_WuYinQu_YiLuoYuanXiang_Ball_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_YiLuoYuanXiang_Ball_Passive(int32_t EntryPoint);                                        // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_YiLuoYuanXiang_Ball.GA_WuYinQu_YiLuoYuanXiang_Ball_C
/// Size: 0x0024 (36 bytes) (0x00052C - 0x000550) align 8 pad: 0x0000
class UGA_WuYinQu_YiLuoYuanXiang_Ball_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	float                                              ___g;                                                       // 0x0538   (0x0004)  
	float                                              ___g0;                                                      // 0x053C   (0x0004)  
	FString                                            P_9__;                                                      // 0x0540   (0x0010)  
	// bool K2_CanActivateAbility(FGameplayAbilityActorInfo ActorInfo, FGameplayTagContainer& RelevantTags);                    // [0x25a7960] Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|Const 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_YiLuoYuanXiang_Ball(int32_t EntryPoint);                                                // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_HuangShiGaoDi2_Attack_Passive.GA_WuYinQu_HuangShiGaoDi2_Attack_Passive_C
/// Size: 0x0008 (8 bytes) (0x000538 - 0x000540) align 8 pad: 0x0000
class UGA_WuYinQu_HuangShiGaoDi2_Attack_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_HuangShiGaoDi2_Attack_Passive(int32_t EntryPoint);                                      // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_HuangShiGaoDi2_Attack.GA_WuYinQu_HuangShiGaoDi2_Attack_C
/// Size: 0x0024 (36 bytes) (0x00052C - 0x000550) align 8 pad: 0x0000
class UGA_WuYinQu_HuangShiGaoDi2_Attack_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	int32_t                                            ____;                                                       // 0x0538   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x053C   (0x0004)  MISSED
	FString                                            P_9__;                                                      // 0x0540   (0x0010)  
	// bool K2_CanActivateAbility(FGameplayAbilityActorInfo ActorInfo, FGameplayTagContainer& RelevantTags);                    // [0x25a7960] Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|Const 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_HuangShiGaoDi2_Attack(int32_t EntryPoint);                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_HuangShiGaoDi2__Environment_Passive.GA_WuYinQu_HuangShiGaoDi2__Environment_Passive_C
/// Size: 0x0008 (8 bytes) (0x000538 - 0x000540) align 8 pad: 0x0000
class UGA_WuYinQu_HuangShiGaoDi2__Environment_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_HuangShiGaoDi2__Environment_Passive(int32_t EntryPoint);                                // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_HuangShiGaoDi2__Environment.GA_WuYinQu_HuangShiGaoDi2__Environment_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_WuYinQu_HuangShiGaoDi2__Environment_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	float                                              ___g;                                                       // 0x0538   (0x0004)  
	float                                              ___g0;                                                      // 0x053C   (0x0004)  
	// bool K2_CanActivateAbility(FGameplayAbilityActorInfo ActorInfo, FGameplayTagContainer& RelevantTags);                    // [0x25a7960] Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|Const 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_HuangShiGaoDi2__Environment(int32_t EntryPoint);                                        // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_YuanNiaoZe_Passive.GA_WuYinQu_YuanNiaoZe_Passive_C
/// Size: 0x0008 (8 bytes) (0x000538 - 0x000540) align 8 pad: 0x0000
class UGA_WuYinQu_YuanNiaoZe_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_YuanNiaoZe_Passive(int32_t EntryPoint);                                                 // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_YuanNiaoZe.GA_WuYinQu_YuanNiaoZe_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_WuYinQu_YuanNiaoZe_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	float                                              ___g;                                                       // 0x0538   (0x0004)  
	float                                              ___g0;                                                      // 0x053C   (0x0004)  
	// bool K2_CanActivateAbility(FGameplayAbilityActorInfo ActorInfo, FGameplayTagContainer& RelevantTags);                    // [0x25a7960] Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|Const 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_YuanNiaoZe(int32_t EntryPoint);                                                         // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_HuangShiGaoDi_Environment_Passive.GA_WuYinQu_HuangShiGaoDi_Environment_Passive_C
/// Size: 0x0008 (8 bytes) (0x000538 - 0x000540) align 8 pad: 0x0000
class UGA_WuYinQu_HuangShiGaoDi_Environment_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_HuangShiGaoDi_Environment_Passive(int32_t EntryPoint);                                  // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_HuangShiGaoDi_Environment.GA_WuYinQu_HuangShiGaoDi_Environment_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_WuYinQu_HuangShiGaoDi_Environment_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	float                                              ___g;                                                       // 0x0538   (0x0004)  
	float                                              ___g0;                                                      // 0x053C   (0x0004)  
	// bool K2_CanActivateAbility(FGameplayAbilityActorInfo ActorInfo, FGameplayTagContainer& RelevantTags);                    // [0x25a7960] Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|Const 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_HuangShiGaoDi_Environment(int32_t EntryPoint);                                          // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_QiChiCun_RandomQTE_Passive.GA_WuYinQu_QiChiCun_RandomQTE_Passive_C
/// Size: 0x0008 (8 bytes) (0x000538 - 0x000540) align 8 pad: 0x0000
class UGA_WuYinQu_QiChiCun_RandomQTE_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_QiChiCun_RandomQTE_Passive(int32_t EntryPoint);                                         // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_WuYinQu_QiChiCun_RandomQTE.GA_WuYinQu_QiChiCun_RandomQTE_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_WuYinQu_QiChiCun_RandomQTE_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	float                                              ___g;                                                       // 0x0538   (0x0004)  
	float                                              ___g0;                                                      // 0x053C   (0x0004)  
	// bool K2_CanActivateAbility(FGameplayAbilityActorInfo ActorInfo, FGameplayTagContainer& RelevantTags);                    // [0x25a7960] Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|Const 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_WuYinQu_QiChiCun_RandomQTE(int32_t EntryPoint);                                                 // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Vision/GA/Tools/GA_Tool_ScreenShot.GA_Tool_ScreenShot_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Tool_ScreenShot_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Tool_ScreenShot(int32_t EntryPoint);                                                            // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Vision/GA/Role/GA_Role_Suyan.GA_Role_Suyan_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Role_Suyan_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_Suyan(int32_t EntryPoint);                                                                 // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Vision/GA/Role/GA_Role_ShowVision.GA_Role_ShowVision_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Role_ShowVision_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_ShowVision(int32_t EntryPoint);                                                            // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Vision/GA/Role/GA_Role_ManipulateCancle.GA_Role_ManipulateCancle_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_Role_ManipulateCancle_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class UObject*                                     __r__c;                                                     // 0x0538   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_ManipulateCancle(int32_t EntryPoint);                                                      // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Vision/GA/Role/GA_Role_ManipulateThrow.GA_Role_ManipulateThrow_C
/// Size: 0x0010 (16 bytes) (0x00052C - 0x00053C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_Role_ManipulateThrow_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	int32_t                                            Entity_Id;                                                  // 0x0538   (0x0004)  
	// void OnTick_5D118C384AE61F1C80292E81ECC61D57();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81ECC61D57();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81ECC61D57();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81ECC61D57();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81ECC61D57();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_AF1BF1C04B887958A892F295ED5B1B60();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_ManipulateThrow(int32_t EntryPoint);                                                       // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Hook_Swinging.GA_Hook_Swinging_C
/// Size: 0x011C (284 bytes) (0x00052C - 0x000648) align 8 pad: 0x0000
class UGA_Hook_Swinging_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class UObject*                                     Rope;                                                       // 0x0538   (0x0008)  
	float                                              Distance;                                                   // 0x0540   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0544   (0x0004)  MISSED
	FTimerHandle                                       SwingingTimer;                                              // 0x0548   (0x0008)  
	FVector                                            _y_R;                                                       // 0x0550   (0x000C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x055C   (0x0004)  MISSED
	FSCameraModifier_Settings                          CameraModifySettings;                                       // 0x0560   (0x00E8)  
	// void SwingingRotaion();                                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EventReceived_5442B24C45E0D351ADA243874004C8BC(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_8D96293640861CE3D30811B2BF5219AD();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_8D96293640861CE3D30811B2BF5219AD();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Hook_Swinging(int32_t EntryPoint);                                                              // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Role_Hook.GA_Role_Hook_C
/// Size: 0x003C (60 bytes) (0x00052C - 0x000568) align 8 pad: 0x0000
class UGA_Role_Hook_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          __;                                                         // 0x0538   (0x0008)  
	FVector                                            Forward;                                                    // 0x0540   (0x000C)  
	FVector                                            EndPos;                                                     // 0x054C   (0x000C)  
	bool                                               InWater;                                                    // 0x0558   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0559   (0x0003)  MISSED
	FVector                                            LastLocation;                                               // 0x055C   (0x000C)  
	// void EventReceived_BE49D8B84159B3E2C93AFC8C33E21F9B(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E813209EC9F();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E813209EC9F();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E813209EC9F();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E813209EC9F();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E813209EC9F();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_Hook(int32_t EntryPoint);                                                                  // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_VisionControl.GA_VisionControl_C
/// Size: 0x0010 (16 bytes) (0x00052C - 0x00053C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_VisionControl_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	int32_t                                            Count;                                                      // 0x0538   (0x0004)  
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_VisionControl(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Vision/GA/Role/GA_Role_Zhaohuan.GA_Role_Zhaohuan_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Role_Zhaohuan_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_Zhaohuan(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/FemaleS/Jueyuan/Abilities/GA/GA_JueyuanSpecialEnergy.GA_JueyuanSpecialEnergy_C
/// Size: 0x001C (28 bytes) (0x000538 - 0x000554) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_JueyuanSpecialEnergy_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	TArray<int64_t>                                    Buff_Id;                                                    // 0x0540   (0x0010)  
	int32_t                                            CurrentEnergy;                                              // 0x0550   (0x0004)  
	// void UpdateEnergyShow(int32_t newEnergy);                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnChange_4EC546D844F2A6D6483560BFEE1F0CE3();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_JueyuanSpecialEnergy(int32_t EntryPoint);                                                       // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/FemaleS/Jueyuan/Abilities/GA/GA_Skill01.GA_Skill01_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Skill01_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E815E3B69F0();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E815E3B69F0();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E815E3B69F0();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E815E3B69F0();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E815E3B69F0();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_78C11FDC4E31F4AA834B36AA5270976D(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Skill01(int32_t EntryPoint);                                                                    // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleS/Jueyuan/Abilities/GA/GA_Skill03.GA_Skill03_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Skill03_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81AD868444();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81AD868444();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81AD868444();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81AD868444();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81AD868444();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_8EC676D941E5C7FD48F4F7BAB15C4824(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Skill03(int32_t EntryPoint);                                                                    // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/BaseCharacter/Abilities/GA/GA_Common_AirAttack.GA_Common_AirAttack_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_Common_AirAttack_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	bool                                               __0W;                                                       // 0x0538   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0539   (0x0003)  MISSED
	float                                              BlockTime;                                                  // 0x053C   (0x0004)  
	// void OnTick_5D118C384AE61F1C80292E8132E47F3E();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8132E47F3E();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8132E47F3E();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8132E47F3E();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8132E47F3E();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E810CE84E38();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E810CE84E38();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E810CE84E38();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E810CE84E38();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E810CE84E38();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E8133A9FB93();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8133A9FB93();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8133A9FB93();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8133A9FB93();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8133A9FB93();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Common_AirAttack(int32_t EntryPoint);                                                           // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_CommonBurst.GA_CommonBurst_C
/// Size: 0x0010 (16 bytes) (0x00052C - 0x00053C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_CommonBurst_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	float                                              _Seg;                                                       // 0x0538   (0x0004)  
	// void OnTick_5D118C384AE61F1C80292E81DADDF27C();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81DADDF27C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81DADDF27C();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81DADDF27C();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81DADDF27C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_CommonBurst(int32_t EntryPoint);                                                                // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/FemaleS/Jueyuan/Abilities/GA/GA_Atttack03.GA_Atttack03_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Atttack03_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81E1B956C8();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81E1B956C8();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81E1B956C8();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81E1B956C8();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81E1B956C8();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81EF7BD26E();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81EF7BD26E();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81EF7BD26E();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81EF7BD26E();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81EF7BD26E();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Atttack03(int32_t EntryPoint);                                                                  // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Vision/BP_BaseVision.BP_BaseVision_C
/// Size: 0x000F (15 bytes) (0x000771 - 0x000780) align 16 pad: 0x0000
class ABP_BaseVision_C : public ATsBaseCharacter_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0771   (0x0007)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0778   (0x0008)  
	// void ___S_S(class ATsBaseCharacter_C*& _S_U);                                                                            // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S__(FSVisionData& __a_);                                                                                         // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_BaseVision(int32_t EntryPoint);                                                                 // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Vision/VM_Lord/VM_ML1Qunnie/Md00401/Ability/GA_Qunnie_Role.GA_Qunnie_Role_C
/// Size: 0x001C (28 bytes) (0x00052C - 0x000548) align 8 pad: 0x0000
class UGA_Qunnie_Role_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ABP_BaseVision_C*                            __;                                                         // 0x0538   (0x0008)  
	class ATsBaseCharacter_C*                          _S_U;                                                       // 0x0540   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E813CFD910C();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E813CFD910C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E813CFD910C();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E813CFD910C();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E813CFD910C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Qunnie_Role(int32_t EntryPoint);                                                                // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Hook_SwingingEnd.GA_Hook_SwingingEnd_C
/// Size: 0x0018 (24 bytes) (0x00052C - 0x000544) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_Hook_SwingingEnd_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	FVector                                            Fda__W;                                                     // 0x0538   (0x000C)  
	// void OnTick_5D118C384AE61F1C80292E8136286539();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8136286539();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8136286539();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8136286539();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8136286539();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_395B7D3941A9DA8F2A9D14B334F75D10(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void Added_54E5FB1C47764D94BD245DAB78EF78CB(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Hook_SwingingEnd(int32_t EntryPoint);                                                           // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Data/Camera/BP_Fx_Soul_QTE.BP_Fx_Soul_QTE_C
/// Size: 0x0000 (0 bytes) (0x000190 - 0x000190) align 16 pad: 0x0000
class UBP_Fx_Soul_QTE_C : public UMatineeCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Up/NCS_Up_Lv5.NCS_Up_Lv5_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Up_Lv5_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Left/NCS_Left_Lv2.NCS_Left_Lv2_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Left_Lv2_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/In/NCS_In_Lv1.NCS_In_Lv1_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_In_Lv1_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/GamePlay/InteractiveObject/GamePlayScan.GamePlayScan_C
/// Size: 0x0059 (89 bytes) (0x0002A8 - 0x000301) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class AGamePlayScan_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	TArray<class ATsBaseCharacter_C*>                  Array_TsBaseCharacter;                                      // 0x02B8   (0x0010)  
	TArray<class AActor*>                              Actors;                                                     // 0x02C8   (0x0010)  
	float                                              CurScanRadius;                                              // 0x02D8   (0x0004)  
	float                                              ScanRadiusSpace;                                            // 0x02DC   (0x0004)  
	float                                              MaxScanDistance;                                            // 0x02E0   (0x0004)  
	float                                              MaxScanInteractionEffectDistance;                           // 0x02E4   (0x0004)  
	float                                              CurrentElapsedTimes;                                        // 0x02E8   (0x0004)  
	float                                              ScanEndTime;                                                // 0x02EC   (0x0004)  
	float                                              ScanDestroyTime;                                            // 0x02F0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02F4   (0x0004)  MISSED
	class ABP_Fx_Scanning_C*                           ScanEffect;                                                 // 0x02F8   (0x0008)  
	bool                                               hasTarget;                                                  // 0x0300   (0x0001)  
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_GamePlayScan(int32_t EntryPoint);                                                                  // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Input/Blueprints/BPL_Input.BPL_Input_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UBPL_Input_C : public UBlueprintFunctionLibrary
{ 
public:
	// bool IsKeyDown(TEnumAsByte<EInputAction> NewParam, class UObject* __WorldContext);                                       // [0x25a7960] Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/Character/Common/Blueprint/Utils/TsSceneInteractBlueprintFunctionLibrary.TsSceneInteractBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UTsSceneInteractBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// bool IsDropItem(int32_t EntityID, class UObject* __WorldContext);                                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void InteractSceneItem(int32_t EntityID, int32_t targetEntityId, class UObject* __WorldContext);                         // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void PickUpDropItem(int32_t entityId1, int32_t targetEntityId, class UObject* __WorldContext);                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool IsAiDriver(int32_t EntityID, class UObject* __WorldContext);                                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EndBounce(int32_t EntityID, class UObject* __WorldContext);                                                         // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void EndCatapult(int32_t EntityID, class UObject* __WorldContext);                                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// class AActor* GetGiantActor(int32_t EntityID, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void LeaveSitDownAction(int32_t EntityID, class UObject* __WorldContext);                                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void PreLeaveSitDownAction(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// float GetLeaveSitDownIndex(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// float GetEnterSitDownIndex(int32_t EntityID, class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool GetSitDownState(int32_t EntityID, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Up/NCS_Up_Lv1.NCS_Up_Lv1_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Up_Lv1_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Up/NCS_Up_Lv4.NCS_Up_Lv4_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Up_Lv4_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/Rogue/GA_Passive_Bailian_Rogue.GA_Passive_Bailian_Rogue_C
/// Size: 0x0029 (41 bytes) (0x000538 - 0x000561) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UGA_Passive_Bailian_Rogue_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	FTimerHandle                                       _Y_bP_9_H;                                                  // 0x0540   (0x0008)  
	int32_t                                            __9__S;                                                     // 0x0548   (0x0004)  
	int32_t                                            __9__T;                                                     // 0x054C   (0x0004)  
	bool                                               _S_Y_b_;                                                    // 0x0550   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0551   (0x0007)  MISSED
	class ATsBaseCharacter_C*                          B_;                                                         // 0x0558   (0x0008)  
	bool                                               _Y__EQ;                                                     // 0x0560   (0x0001)  
	// void EventReceived_18B59F5945020DB23C42FD88764B4BC3(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD883DA72164(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD887802422F(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD8859D1CA2E(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void Removed_DB9F64004F8908FEAD99D381F3D22D70(FGameplayTag& Tag);                                                        // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnFinish_704CBA004A3FA84A92CA06919C4280A9();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_B092FC5E4D581E3C0790AE86EF80D3BB();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD885280A0D0(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_24EB8B844D21D066CA74859F896AA054();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_056156B947AA9044B06C73B910D453D4();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void _Y_b();                                                                                                             // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void _y_y_(class ATsBaseCharacter_C* __, FSHitInformation _S_Q);                                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_GA_Passive_Bailian_Rogue(int32_t EntryPoint);                                                      // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_ChangeCharacterAttack.GA_ChangeCharacterAttack_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_ChangeCharacterAttack_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ABP_BaiLian_C*                               _v;                                                         // 0x0538   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81DC75867D();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81DC75867D();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81DC75867D();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81DC75867D();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81DC75867D();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_ChangeCharacterAttack(int32_t EntryPoint);                                                      // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_Bailian_SoulDeath.GA_Bailian_SoulDeath_C
/// Size: 0x0008 (8 bytes) (0x000538 - 0x000540) align 8 pad: 0x0000
class UGA_Bailian_SoulDeath_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Bailian_SoulDeath(int32_t EntryPoint);                                                          // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_LimitDodge_Bailian.GA_LimitDodge_Bailian_C
/// Size: 0x0020 (32 bytes) (0x000538 - 0x000558) align 8 pad: 0x0000
class UGA_LimitDodge_Bailian_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	int32_t                                            _S_U_;                                                      // 0x0540   (0x0004)  
	int32_t                                            _S_Ui;                                                      // 0x0544   (0x0004)  
	class ATsBaseCharacter_C*                          _S_;                                                        // 0x0548   (0x0008)  
	class ATsBaseCharacter_C*                          B_;                                                         // 0x0550   (0x0008)  
	// void _v__(bool _f_T_N___z);                                                                                              // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void __n__(class ATsBaseCharacter_C* _S_);                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void S__R_(int32_t __SO, class AActor* entity);                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// FTransform ___S_S();                                                                                                     // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_LimitDodge_Bailian(int32_t EntryPoint);                                                         // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_LimitFightBack_Bailian.GA_LimitFightBack_Bailian_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_LimitFightBack_Bailian_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ABP_BaiLian_C*                               _v;                                                         // 0x0538   (0x0008)  
	// void OnFinish_8D96293640861CE3D30811B2AB08CA4B();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_8D96293640861CE3D30811B2AB08CA4B();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81F9D7D69D();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81F9D7D69D();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81F9D7D69D();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81F9D7D69D();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81F9D7D69D();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_LimitFightBack_Bailian(int32_t EntryPoint);                                                     // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_LoosenAttack.GA_LoosenAttack_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_LoosenAttack_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81AB600830();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81AB600830();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81AB600830();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81AB600830();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81AB600830();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_LoosenAttack(int32_t EntryPoint);                                                               // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_HoldAttack.GA_HoldAttack_2_C
/// Size: 0x030C (780 bytes) (0x00052C - 0x000838) align 8 pad: 0x0000
class UGA_HoldAttack_2_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ABP_BaiLian_C*                               __;                                                         // 0x0538   (0x0008)  
	FGameplayEffectSpecHandle                          Gameplay_Effect_Spec_Handle;                                // 0x0540   (0x0010)  
	FSCameraModifier_Settings                          Camera_Modify_Settings;                                     // 0x0550   (0x00E8)  
	class UObject*                                     As_Camera_Manager_Proxy;                                    // 0x0638   (0x0008)  
	float                                              Time;                                                       // 0x0640   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0644   (0x0004)  MISSED
	FSCameraModifier_Settings                          _4N_eC;                                                     // 0x0648   (0x00E8)  
	float                                              Delta_Time;                                                 // 0x0730   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0734   (0x0004)  MISSED
	FSCameraModifier_Settings                          __n_;                                                       // 0x0738   (0x00E8)  
	class ATsBaseCharacter_C*                          B_;                                                         // 0x0820   (0x0008)  
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0828   (0x0008)  
	int32_t                                            TargetObjectEntityID;                                       // 0x0830   (0x0004)  
	float                                              CurrentHP;                                                  // 0x0834   (0x0004)  
	// void _V_Y_u_T_P();                                                                                                       // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E810A74991B();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E810A74991B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E810A74991B();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E810A74991B();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E810A74991B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3565655AF(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A318DF74BB(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3DE127FF3(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E812BA16FED();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E812BA16FED();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E812BA16FED();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E812BA16FED();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E812BA16FED();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_HoldAttack(int32_t EntryPoint);                                                                 // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/TypeScript/Game/Camera/CameraBlueprintFunctionLibrary.CameraBlueprintFunctionLibrary_C
/// Size: 0x0000 (0 bytes) (0x000030 - 0x000030) align 8 pad: 0x0000
class UCameraBlueprintFunctionLibrary_C : public UBlueprintFunctionLibrary
{ 
public:
	// void SwitchCameraDebugToolDrawSettlementCamera(class UObject* __WorldContext);                                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void PlaySettlementCamera(class UObject* __WorldContext);                                                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ExitSpecialGameplayCamera2(class UObject* __WorldContext);                                                          // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// class ACameraActor* EnterSpecialGameplayCamera(int32_t gameplayId, class UObject* __WorldContext);                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// class ACameraActor* GetWidgetCameraActor(class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// class ALevelSequenceActor* GetSequenceCameraActor(class UObject* __WorldContext);                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ApplyCameraModify(FGameplayTag Tag, float Duration, float BlendInTime, float BlendOutTime, float BreakBlendOutTime, FSCameraModifier_Settings CameraModifySettings, class UAnimMontage* Montage, FSBaseCurve BlendInCurve, FSBaseCurve BlendOutCurve, FString CameraAttachSocket, int32_t EntityID, TEnumAsByte<ECameraAnsEffectiveClientType> cameraEffectiveClientType, TArray<FSCameraModifier_Condition>& cameraModifierContions, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SwitchCameraDebugToolDrawLockCameraMoveLine(class UObject* __WorldContext);                                         // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FSCameraDebugTool_CameraModeInfo GetCamereModeInfo(class UObject* __WorldContext);                                       // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TMap<FString, FString> GetDebugDesiredCameraProps(class UObject* __WorldContext);                                        // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SwitchCameraDebugToolDrawCameraCollision(class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ExitSpecialGameplayCamera(class UObject* __WorldContext);                                                           // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool GetIsCameraTargetInScreen(class UObject* __WorldContext);                                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetAimAssistMode(TEnumAsByte<EAimAssistMode> Mode, class UObject* __WorldContext);                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TArray<FSCameraDebugTool_ControllerModification> GetControllerModifications(class UObject* __WorldContext);              // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// TArray<FSCameraDebugTool_SubCameraModification> GetSubCameraModifications(class UObject* __WorldContext);                // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SwitchCameraDebugToolDrawSpringArmEdgeRange(class UObject* __WorldContext);                                         // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SwitchCameraDebugToolDrawFocusTargetLine(class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SwitchCameraDebugToolDrawSpringArm(class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetCameraDebugToolEnabled(bool InEnable, class UObject* __WorldContext);                                            // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool IsRoleOnCameraRight(class UObject* __WorldContext);                                                                 // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void StopCameraOrbital(class UObject* __WorldContext);                                                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void PlayCameraOrbital(class ULevelSequence* LevelSequence, FVector startLocation1, FVector endLocation1, float blendInTime1, float blendOutTime1, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// class ACameraActor* GetFightCameraActor(class UObject* __WorldContext);                                                  // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ReloadCameraConfig(class UObject* __WorldContext);                                                                  // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ExitCameraMode(TEnumAsByte<ECustomCameraMode> cameraMode, float BlendTime, TEnumAsByte<EViewTargetBlendFunction> BlendFunction, float BlendExp, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void EnterCameraMode(TEnumAsByte<ECustomCameraMode> cameraMode, float BlendTime, TEnumAsByte<EViewTargetBlendFunction> BlendFunction, float BlendExp, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// bool PlayCameraSequence(FSSequenceCamera_Settings Settings, bool resetFightCamera, FRotator AdditiveRotation, class ATsBaseCharacter_C* Target, FString socketName1, FString lockSocketName1, FVector RelativeLocation, float Radius, bool isShowLine, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ExitSequenceDialogue(class UObject* __WorldContext);                                                                // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void EnterSequenceDialogue(class AActor* Target, class UObject* __WorldContext);                                         // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ExitCameraExplore(int32_t ID, class UObject* __WorldContext);                                                       // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void EnterCameraExplore(int32_t ID, FVector lookAt1, FVector lookAt2, float prepTime, float FadeDistance, float armLengthMin, float armLengthMax, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void ResetFightCameraPitchAndArmLength(class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// void SetFightCameraFollow(bool Follow, class UObject* __WorldContext);                                                   // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FVector GetFightCameraLocation(class UObject* __WorldContext);                                                           // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetWidgetCameraBlendParams(float BlendTime, TEnumAsByte<EViewTargetBlendFunction> BlendFunction, float BlendExp, bool blendLocation, bool isRelativeLocation, bool overrideLocation, FVector NewLocation, bool blendRotation, bool isRelativeRotation, bool overrideRotation, FRotator NewRotation, class UObject* __WorldContext); // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// FVector GetTargetSocketLocation(class UObject* __WorldContext);                                                          // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void SetCameraRotation(FRotator Rotator, class UObject* __WorldContext);                                                 // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
	// TEnumAsByte<ECustomCameraMode> GetCameraMode(class UObject* __WorldContext);                                             // [0x13db470] Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void OnPossess(class APawn* Pawn, class UObject* __WorldContext);                                                        // [0x13db470] Native|Static|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/Role/Common/Data/Structure/BP_QTE_Camera.BP_QTE_Camera_C
/// Size: 0x0160 (352 bytes) (0x000038 - 0x000198) align 8 pad: 0x0000
class UBP_QTE_Camera_C : public UPrimaryDataAsset
{ 
public:
	FSCameraModifier_Settings                          _v_g;                                                       // 0x0038   (0x00E8)  
	float                                              Duration;                                                   // 0x0120   (0x0004)  
	float                                              BlendInTime;                                                // 0x0124   (0x0004)  
	float                                              BlendOutTime;                                               // 0x0128   (0x0004)  
	float                                              BreakBlendOutTime;                                          // 0x012C   (0x0004)  
	FSBaseCurve                                        BlendInCurve;                                               // 0x0130   (0x0008)  
	FSBaseCurve                                        BlendOutCurve;                                              // 0x0138   (0x0008)  
	float                                              __n_Q;                                                      // 0x0140   (0x0004)  
	float                                              __n_Q0;                                                     // 0x0144   (0x0004)  
	float                                              __n_Q1;                                                     // 0x0148   (0x0004)  
	float                                              __n_Q2;                                                     // 0x014C   (0x0004)  
	float                                              __n_Q3;                                                     // 0x0150   (0x0004)  
	float                                              __n_Q4;                                                     // 0x0154   (0x0004)  
	float                                              _O_uQ;                                                      // 0x0158   (0x0004)  
	float                                              _O_uQ5;                                                     // 0x015C   (0x0004)  
	float                                              Q;                                                          // 0x0160   (0x0004)  
	FGameplayTag                                       Tag;                                                        // 0x0164   (0x000C)  
	TEnumAsByte<ECameraAnsEffectiveClientType>         _uHe__7;                                                    // 0x0170   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0171   (0x0007)  MISSED
	FString                                            CameraAttachSocket;                                         // 0x0178   (0x0010)  
	TArray<FSCameraModifier_Condition>                 ag;                                                         // 0x0188   (0x0010)  
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Up/NCS_Up_Lv6.NCS_Up_Lv6_C
/// Size: 0x0000 (0 bytes) (0x0001B8 - 0x0001B8) align 16 pad: 0x0000
class UNCS_Up_Lv6_C : public UBP_CameraShakeAndForceFeedback_C
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Common_Paralysis_Camera.GA_Common_Paralysis_Camera_C
/// Size: 0x0158 (344 bytes) (0x000538 - 0x000690) align 8 pad: 0x0000
class UGA_Common_Paralysis_Camera_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	FVector                                            _v_g;                                                       // 0x0540   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x054C   (0x0004)  MISSED
	class UBP_QTE_Camera_C*                            __r__WO_U__;                                                // 0x0550   (0x0008)  
	class UBP_QTE_Camera_C*                            __r__WO_U__0;                                               // 0x0558   (0x0008)  
	class UBP_QTE_Camera_C*                            __r__WO_U__1;                                               // 0x0560   (0x0008)  
	class UBP_QTE_Camera_C*                            __r__WO_U__2;                                               // 0x0568   (0x0008)  
	class UBP_QTE_Camera_C*                            __ir_N_Y_N_v_g_Q_;                                          // 0x0570   (0x0008)  
	class UBP_QTE_Camera_C*                            __ir_N_Y_N_v_g_Q_3;                                         // 0x0578   (0x0008)  
	class UBP_QTE_Camera_C*                            __ir_N_Y_N_v_g_Q_4;                                         // 0x0580   (0x0008)  
	class UBP_QTE_Camera_C*                            __ir_N_Y_N_v_g_Q_5;                                         // 0x0588   (0x0008)  
	FSCameraModifier_Settings                          Camera_Modify_Settings;                                     // 0x0590   (0x00E8)  
	int32_t                                            __ir;                                                       // 0x0678   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x067C   (0x0004)  MISSED
	TArray<FSCameraModifier_Condition>                 Camera_Modifier_Contions;                                   // 0x0680   (0x0010)  
	// void ______4Y(float __ir, float _SMR, float __MR, float _S_T, float ___T, int32_t& __4Y);                                // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnFinish_256560A8464BEDA6591444843B3076A1();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_98A95071428C8D18044A4CADAAA243F5();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Common_Paralysis_Camera(int32_t EntryPoint);                                                    // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Interaction_Bounce.GA_Interaction_Bounce_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_Interaction_Bounce_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class AActor*                                      ___;                                                        // 0x0538   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E818F2F100F();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E818F2F100F();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E818F2F100F();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E818F2F100F();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E818F2F100F();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void MovementModeChange(class ACharacter* Character, TEnumAsByte<EMovementMode> PrevMovementMode, char PreviousCustomMode); // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_GA_Interaction_Bounce(int32_t EntryPoint);                                                         // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Interaction_Catapult.GA_Interaction_Catapult_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_Interaction_Catapult_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class AActor*                                      ___;                                                        // 0x0538   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81BB40C26D();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81BB40C26D();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81BB40C26D();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81BB40C26D();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81BB40C26D();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E810BF3ED21();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E810BF3ED21();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E810BF3ED21();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E810BF3ED21();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E810BF3ED21();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void MovementModeChange(class ACharacter* Character, TEnumAsByte<EMovementMode> PrevMovementMode, char PreviousCustomMode); // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_GA_Interaction_Catapult(int32_t EntryPoint);                                                       // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Interaction_Giant.GA_Interaction_Giant_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_Interaction_Giant_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class AActor*                                      ___;                                                        // 0x0538   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81C63D3F9C();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81C63D3F9C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81C63D3F9C();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81C63D3F9C();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81C63D3F9C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Interaction_Giant(int32_t EntryPoint);                                                          // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Role_FixHook.GA_Role_FixHook_C
/// Size: 0x0040 (64 bytes) (0x00052C - 0x00056C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_Role_FixHook_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          _e_;                                                        // 0x0538   (0x0008)  
	FVector                                            FixHookLocation;                                            // 0x0540   (0x000C)  
	FVector                                            ur__;                                                       // 0x054C   (0x000C)  
	float                                              BlockTime;                                                  // 0x0558   (0x0004)  
	float                                              __r____;                                                    // 0x055C   (0x0004)  
	FVector                                            LastDirect;                                                 // 0x0560   (0x000C)  
	// void _f_T__();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void FixHookTick();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void FixHookStart();                                                                                                     // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// class AActor* FindBestHookPoint();                                                                                       // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void OnFinish_1AD12E0F4865557B76E6619F9D0D670F();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_1AD12E0F4865557B76E6619F9D0D670F();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E816508B9E5();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E816508B9E5();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E816508B9E5();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E816508B9E5();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E816508B9E5();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void MovementModeChange(class ACharacter* Character, TEnumAsByte<EMovementMode> PrevMovementMode, char PreviousCustomMode); // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_FixHook(int32_t EntryPoint);                                                               // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/Abilities/GA/GA_Common_limitmove.GA_Common_limitmove_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Common_limitmove_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void OnFinish_8D96293640861CE3D30811B22B565508();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_8D96293640861CE3D30811B22B565508();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_F2CA919F448E92C3D6CB10B2E283A637();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81BDAA9846();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81BDAA9846();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81BDAA9846();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81BDAA9846();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81BDAA9846();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Common_limitmove(int32_t EntryPoint);                                                           // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/BaseCharacter/Abilities/GA/GA_LimitDodge.GA_LimitDodge_C
/// Size: 0x0048 (72 bytes) (0x000538 - 0x000580) align 16 pad: 0x0000
class UGA_LimitDodge_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	class ATsBaseCharacter_C*                          __;                                                         // 0x0540   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0548   (0x0008)  MISSED
	FTransform                                         Transform;                                                  // 0x0550   (0x0030)  
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_LimitDodge(int32_t EntryPoint);                                                                 // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Role_Move_F_Net.GA_Role_Move_F_Net_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_Role_Move_F_Net_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class UBaseAbilitySystemComponent*                 AbilitySystemComponent;                                     // 0x0538   (0x0008)  
	// bool K2_CanActivateAbility(FGameplayAbilityActorInfo ActorInfo, FGameplayTagContainer& RelevantTags);                    // [0x25a7960] Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|Const 
	// void Added_21071CB943CD992BF8EFD6A3DAFC9936(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A382AFCAE1(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81E2803D47();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81E2803D47();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81E2803D47();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81E2803D47();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81E2803D47();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_Move_F_Net(int32_t EntryPoint);                                                            // [0x25a7960] Final|HasDefaults    
};

/// Struct /Game/Aki/Character/Vision/SVisionData.SVisionData
/// Size: 0x0091 (145 bytes) (0x000000 - 0x000091) align 8 pad: 0x0001
#pragma pack(push, 0x1)
struct FSVisionData
{ 
	int32_t                                            Id_2_065E27A14AA24E0A7C8F5CA445947325;                      // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	FString                                            ___f_;                                                      // 0x0008   (0x0010)  
	int32_t                                            __SOM_n_h_I;                                                // 0x0018   (0x0004)  
	TEnumAsByte<EVisionType>                           ___W_;                                                      // 0x001C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x001D   (0x0003)  MISSED
	int32_t                                            _b__I;                                                      // 0x0020   (0x0004)  
	bool                                               zz_N___T___e_;                                              // 0x0024   (0x0001)  
	bool                                               _Q_u_____;                                                  // 0x0025   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x0026   (0x0002)  MISSED
	FString                                            k___h___P_9__;                                              // 0x0028   (0x0010)  
	bool                                               _b_e_f_T_d_e_Q_u_R_u_;                                      // 0x0038   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0039   (0x0007)  MISSED
	TArray<FGameplayTagContainer>                      _u_T_NT;                                                    // 0x0040   (0x0010)  
	TArray<int32_t>                                    _Q_uB;                                                      // 0x0050   (0x0010)  
	TArray<int32_t>                                    _Q_u_e___S_U__B;                                            // 0x0060   (0x0010)  
	FName                                              _Q_u_e_e_N_R_b___;                                          // 0x0070   (0x000C)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x007C   (0x0004)  MISSED
	TArray<FGameplayTag>                               _TekT;                                                      // 0x0080   (0x0010)  
	bool                                               b;                                                          // 0x0090   (0x0001)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Vision/GA/Role/GA_Role_Bianshen_Level_Youyidie.GA_Role_Bianshen_Level_Youyidie_C
/// Size: 0x0104 (260 bytes) (0x00052C - 0x000630) align 8 pad: 0x0000
class UGA_Role_Bianshen_Level_Youyidie_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          __;                                                         // 0x0538   (0x0008)  
	class ABP_BaseVision_C*                            __0;                                                        // 0x0540   (0x0008)  
	FSVisionData                                       __a_;                                                       // 0x0548   (0x0098)  
	class UBaseAbilitySystemComponent*                 AbilitySystemComponent;                                     // 0x05E0   (0x0008)  
	int32_t                                            __a_1;                                                      // 0x05E8   (0x0004)  
	int32_t                                            __a_L;                                                      // 0x05EC   (0x0004)  
	int32_t                                            _S_U__;                                                     // 0x05F0   (0x0004)  
	bool                                               _S_U;                                                       // 0x05F4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x05F5   (0x0003)  MISSED
	class UAbilityTask_WaitGameplayTagRemoved*         __ek_N_R_;                                                  // 0x05F8   (0x0008)  
	class UAbilityTask_WaitDelay*                      __ek_N_R_2;                                                 // 0x0600   (0x0008)  
	bool                                               zz_N__;                                                     // 0x0608   (0x0001)  
	bool                                               gbL_zz;                                                     // 0x0609   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x060A   (0x0002)  MISSED
	int32_t                                            MaterialDataID;                                             // 0x060C   (0x0004)  
	bool                                               _m_Q;                                                       // 0x0610   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0611   (0x0007)  MISSED
	class UObject*                                     Pg___;                                                      // 0x0618   (0x0008)  
	class UObject*                                     Pg___3;                                                     // 0x0620   (0x0008)  
	int64_t                                            ServerId;                                                   // 0x0628   (0x0008)  
	// void __r__m_R_n(int32_t& MaterialDataID);                                                                                // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _b_R_R(class AActor* entity, int32_t __SO);                                                                         // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ___S_e_lS(FName& SkillID);                                                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _____e_l(int32_t _b__, FName& ____);                                                                                // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S__(int32_t __a_, FSVisionData& __a_1);                                                                          // [0x25a7960] Private|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void Added_21071CB943CD992BF8EFD6A3C3F21C2A(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Removed_34F9BAE944891AC1C495D9AB9F1436CD(FGameplayTag& Tag);                                                        // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnFinish_A56FA84F4FE577F6C95DA6813551A97C();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81908403EF();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81908403EF();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81908403EF();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81908403EF();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81908403EF();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81DEEC160B();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81DEEC160B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81DEEC160B();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81DEEC160B();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81DEEC160B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void S__e_X(int32_t __SO, class AActor* entity);                                                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_Bianshen_Level_Youyidie(int32_t EntryPoint);                                               // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Vision/VM_Boss/VM_MB1Mingzhongzhigui/Md00101/Ability/GA_Mingzhongzhigui_Vision.GA_Mingzhongzhigui_Vision_C
/// Size: 0x0124 (292 bytes) (0x00052C - 0x000650) align 8 pad: 0x0000
class UGA_Mingzhongzhigui_Vision_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          __;                                                         // 0x0538   (0x0008)  
	float                                              CreateBulletDelay;                                          // 0x0540   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0544   (0x0004)  MISSED
	class UGameplayTask_WaitDelay*                     __ek_N_R_;                                                  // 0x0548   (0x0008)  
	int32_t                                            __a_L;                                                      // 0x0550   (0x0004)  
	int32_t                                            __a_;                                                       // 0x0554   (0x0004)  
	FSCameraModifier_Settings                          Camera_Modify_Settings;                                     // 0x0558   (0x00E8)  
	TArray<FSCameraModifier_Condition>                 Camera_Modifier_Contions;                                   // 0x0640   (0x0010)  
	// void OnTick_5D118C384AE61F1C80292E8140EF0AD9();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8140EF0AD9();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8140EF0AD9();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8140EF0AD9();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8140EF0AD9();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Mingzhongzhigui_Vision(int32_t EntryPoint);                                                     // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Vision/GA/Role/GA_Role_Manipulate_Hold.GA_Role_Manipulate_Hold_C
/// Size: 0x00D9 (217 bytes) (0x00052C - 0x000605) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UGA_Role_Manipulate_Hold_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class UCameraShakeBase*                            __4Y;                                                       // 0x0538   (0x0008)  
	class AActor*                                      ___cirA;                                                    // 0x0540   (0x0008)  
	class AActor*                                      irSOa;                                                      // 0x0548   (0x0008)  
	TArray<class UMaterialInterface*>                  irSO;                                                       // 0x0550   (0x0010)  
	TEnumAsByte<BPE_ManipulateState>                   _cir;                                                       // 0x0560   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0561   (0x0007)  MISSED
	class UCameraShakeBase*                            S_MR__;                                                     // 0x0568   (0x0008)  
	class APlayerCameraManager*                        S_MR_s___;                                                  // 0x0570   (0x0008)  
	SDK_UNDEFINED(80,1159) /* TMap<TEnumAsByte<BPE_ManipulateState>, FGameplayTag> */ __um(P__);                   // 0x0578   (0x0050)  
	float                                              _;                                                          // 0x05C8   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x05CC   (0x0004)  MISSED
	class AActor*                                      ___c6;                                                      // 0x05D0   (0x0008)  
	class AActor*                                      ___g;                                                       // 0x05D8   (0x0008)  
	TEnumAsByte<EClimbState>                           null;                                                       // 0x05E0   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x05E1   (0x0007)  MISSED
	class UGameplayTask_WaitDelay*                     __ek;                                                       // 0x05E8   (0x0008)  
	bool                                               _O_u_c6RhV_;                                                // 0x05F0   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x05F1   (0x0007)  MISSED
	class UAbilityTask_WaitGameplayTagAdded*           _b_e_j__;                                                   // 0x05F8   (0x0008)  
	int32_t                                            Entity_Id;                                                  // 0x0600   (0x0004)  
	bool                                               Need_Reset;                                                 // 0x0604   (0x0001)  
	// void ___b___e_c(int32_t& _e);                                                                                            // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void OnFinish_8D96293640861CE3D30811B2F55403EA();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_8D96293640861CE3D30811B2F55403EA();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E8199D82B7C();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8199D82B7C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8199D82B7C();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8199D82B7C();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8199D82B7C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3E22866FF(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A306CC665B(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3ECDA4077(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3397F82E9(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A31910F7B1(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A300940F4C(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3B5403E37(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3B539D6A5(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A32BE56996(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A31D6D3387(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EventReceived_73C718854990351320CDCBA65ABBF66D(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_DCF2CDF8417A4B588D1633B8F6DB5B17(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_00BB352D477CDC4F53A156967EA5FF0F(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_BB956EF1416462CBC2CE9682EEF6909C(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E814F04DFAB();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E814F04DFAB();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E814F04DFAB();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E814F04DFAB();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E814F04DFAB();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_Manipulate_Hold(int32_t EntryPoint);                                                       // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Vision/GA/Role/GA_Role_Manipulate.GA_Role_Manipulate_C
/// Size: 0x00A8 (168 bytes) (0x00052C - 0x0005D4) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_Role_Manipulate_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class UCameraShakeBase*                            __4Y;                                                       // 0x0538   (0x0008)  
	class AActor*                                      ___cirA;                                                    // 0x0540   (0x0008)  
	class AActor*                                      irSOa;                                                      // 0x0548   (0x0008)  
	TArray<class UMaterialInterface*>                  irSO;                                                       // 0x0550   (0x0010)  
	TEnumAsByte<BPE_ManipulateState>                   _cir;                                                       // 0x0560   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0561   (0x0007)  MISSED
	class UCameraShakeBase*                            S_MR__;                                                     // 0x0568   (0x0008)  
	class APlayerCameraManager*                        S_MR_s___;                                                  // 0x0570   (0x0008)  
	SDK_UNDEFINED(80,1160) /* TMap<TEnumAsByte<BPE_ManipulateState>, FGameplayTag> */ __um(P__);                   // 0x0578   (0x0050)  
	float                                              _;                                                          // 0x05C8   (0x0004)  
	bool                                               ck8__N;                                                     // 0x05CC   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x05CD   (0x0003)  MISSED
	int32_t                                            Entity_Id;                                                  // 0x05D0   (0x0004)  
	// void ___b___e_c(int32_t& _e);                                                                                            // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E815CB87408();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E815CB87408();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E815CB87408();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E815CB87408();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E815CB87408();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81D680877C();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81D680877C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81D680877C();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81D680877C();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81D680877C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E815237D5DE();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E815237D5DE();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E815237D5DE();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E815237D5DE();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E815237D5DE();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A302D055A4(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A385FA7D9C(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EventReceived_216442174E3088EB354911B5CC57F2B1(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_A99B2F604F8C8EFCA354FB99DC615855(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_C3FDF179485000A0038F85B4A18EE0C1();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E8150E58CB4();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8150E58CB4();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8150E58CB4();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8150E58CB4();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8150E58CB4();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void AfterRequest(bool bContent);                                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_Manipulate(int32_t EntryPoint);                                                            // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Vision/GA/Role/GA_Role_Saomiao.GA_Role_Saomiao_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Role_Saomiao_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_Saomiao(int32_t EntryPoint);                                                               // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Vision/GA/Role/GA_Role_AimThrow.GA_Role_AimThrow_C
/// Size: 0x0090 (144 bytes) (0x00052C - 0x0005BC) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_Role_AimThrow_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class UAbilityTask_WaitDelay*                      __ek_N_R_;                                                  // 0x0538   (0x0008)  
	class UGameplayTask_WaitDelay*                     __ek_N_R_0;                                                 // 0x0540   (0x0008)  
	class UAbilityTask_WaitGameplayEvent*              __ek_N_N_;                                                  // 0x0548   (0x0008)  
	TArray<class AActor*>                              Actors_to_Ignore;                                           // 0x0550   (0x0010)  
	FVector                                            P_9__;                                                      // 0x0560   (0x000C)  
	float                                              Projectile_Radius;                                          // 0x056C   (0x0004)  
	float                                              Projectile_Speed;                                           // 0x0570   (0x0004)  
	float                                              Override_Gravity_Z;                                         // 0x0574   (0x0004)  
	float                                              Sim_Frequency;                                              // 0x0578   (0x0004)  
	float                                              Max_Sim_Time;                                               // 0x057C   (0x0004)  
	float                                              Average_Delta_Time;                                         // 0x0580   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0584   (0x0004)  MISSED
	TArray<float>                                      Array_Delta_Time;                                           // 0x0588   (0x0010)  
	bool                                               Line_Trace_Update;                                          // 0x0598   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0599   (0x0007)  MISSED
	class UGameplayTask_WaitDelay*                     __ek_N_R_1;                                                 // 0x05A0   (0x0008)  
	class UGameplayTask_WaitDelay*                     __ek_N_R_2;                                                 // 0x05A8   (0x0008)  
	class UPrimaryDataAsset*                           DA_Fx_Throw_Casting;                                        // 0x05B0   (0x0008)  
	int32_t                                            EffectHandel;                                               // 0x05B8   (0x0004)  
	// void ____fk(bool& Success);                                                                                              // [0x25a7960] Private|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FVector ____P_9();                                                                                                       // [0x25a7960] Private|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ____s(TArray<float>& ArrayFloat, float& AverageFloat);                                                              // [0x25a7960] Private|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnFinish_C807E679403EDDDC3E3AA399AC949573();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_8D96293640861CE3D30811B2D8DBA7E8();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_8D96293640861CE3D30811B2D8DBA7E8();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_8D96293640861CE3D30811B28AAEC61F();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_8D96293640861CE3D30811B28AAEC61F();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_174DF1B944D91B2618D3C4A0584E72A0();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD88533AE3C7(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_8D96293640861CE3D30811B27CA46F28();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_8D96293640861CE3D30811B27CA46F28();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_AimThrow(int32_t EntryPoint);                                                              // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Vision/GA/Role/GA_Role_Bianshen.GA_Role_Bianshen_C
/// Size: 0x0114 (276 bytes) (0x00052C - 0x000640) align 8 pad: 0x0000
class UGA_Role_Bianshen_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          __;                                                         // 0x0538   (0x0008)  
	class ABP_BaseVision_C*                            __0;                                                        // 0x0540   (0x0008)  
	FSVisionData                                       __a_;                                                       // 0x0548   (0x0098)  
	class UBaseAbilitySystemComponent*                 AbilitySystemComponent;                                     // 0x05E0   (0x0008)  
	int32_t                                            __a_1;                                                      // 0x05E8   (0x0004)  
	int32_t                                            __a_L;                                                      // 0x05EC   (0x0004)  
	int32_t                                            _S_U__;                                                     // 0x05F0   (0x0004)  
	bool                                               _S_U;                                                       // 0x05F4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x05F5   (0x0003)  MISSED
	class UAbilityTask_WaitGameplayTagRemoved*         __ek_N_R_;                                                  // 0x05F8   (0x0008)  
	class UAbilityTask_WaitDelay*                      __ek_N_R_2;                                                 // 0x0600   (0x0008)  
	bool                                               _f_T_S;                                                     // 0x0608   (0x0001)  
	bool                                               gbL_zz;                                                     // 0x0609   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x060A   (0x0002)  MISSED
	int32_t                                            MaterialDataID;                                             // 0x060C   (0x0004)  
	bool                                               _m_Q;                                                       // 0x0610   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0611   (0x0007)  MISSED
	class UObject*                                     Pg___;                                                      // 0x0618   (0x0008)  
	class UObject*                                     Pg___3;                                                     // 0x0620   (0x0008)  
	int32_t                                            _m_Q_R_uI;                                                  // 0x0628   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x062C   (0x0004)  MISSED
	class UObject*                                     __a__Q;                                                     // 0x0630   (0x0008)  
	class UObject*                                     __a__Q4;                                                    // 0x0638   (0x0008)  
	// void ___b_y(class UCharacterMovementComponent* Base, class UCharacterMovementComponent* Target);                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __r_();                                                                                                             // [0x25a7960] Protected|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void __r_sQ();                                                                                                           // [0x25a7960] Protected|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ______(class ACharacter* _v_h, FTransform& NewParam);                                                               // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___g__();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __r__m_R_n(int32_t& MaterialDataID);                                                                                // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ___S_e_lS(FString& SkillID);                                                                                        // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _____e_l(int32_t _b__, FName& ____);                                                                                // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S__(int32_t __a_, FSVisionData& __a_1);                                                                          // [0x25a7960] Private|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_Bianshen(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/FemaleS/Jueyuan/Abilities/GA/GA_ExitSkill_Jueyuan_Passive.GA_ExitSkill_Jueyuan_Passive_C
/// Size: 0x0024 (36 bytes) (0x000538 - 0x00055C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_ExitSkill_Jueyuan_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	int64_t                                            Buff_Id;                                                    // 0x0540   (0x0008)  
	class UBP_QTE_Camera_C*                            QTECamera;                                                  // 0x0548   (0x0008)  
	FName                                              _b___;                                                      // 0x0550   (0x000C)  
	// void K2_ActivateAbilityFromEvent(FGameplayEventData& eventData);                                                         // [0x25a7960] Event|Protected|HasOutParms|BlueprintEvent 
	// void ExecuteUbergraph_GA_ExitSkill_Jueyuan_Passive(int32_t EntryPoint);                                                  // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/BaseCharacter/Abilities/GA/GA_Common_QTEnew.GA_Common_QTEnew_C
/// Size: 0x0115 (277 bytes) (0x00052C - 0x000641) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UGA_Common_QTEnew_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	FSCameraModifier_Settings                          _v_g;                                                       // 0x0538   (0x00E8)  
	class ATsBaseCharacter_C*                          _Seg_;                                                      // 0x0620   (0x0008)  
	class UBP_QTE_Camera_C*                            RogueQteCamera;                                             // 0x0628   (0x0008)  
	int32_t                                            Q;                                                          // 0x0630   (0x0004)  
	int32_t                                            Q0;                                                         // 0x0634   (0x0004)  
	class UBP_QTE_Camera_C*                            RogueQteCamera1;                                            // 0x0638   (0x0008)  
	bool                                               ___R_;                                                      // 0x0640   (0x0001)  
	// void EventReceived_18B59F5945020DB23C42FD88C6BCD2BE(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E814F2D26E4();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E814F2D26E4();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E814F2D26E4();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E814F2D26E4();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E814F2D26E4();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_E1111D36446963FA74DB968DBE3C7127(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Common_QTEnew(int32_t EntryPoint);                                                              // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/FemaleS/Jueyuan/Abilities/GA/GA_Qte_Jueyuan.GA_Qte_Jueyuan_C
/// Size: 0x0020 (32 bytes) (0x000538 - 0x000558) align 8 pad: 0x0000
class UGA_Qte_Jueyuan_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	class UBP_QTE_Camera_C*                            QTECamera;                                                  // 0x0540   (0x0008)  
	int32_t                                            Entity_Id;                                                  // 0x0548   (0x0004)  
	FName                                              _b___;                                                      // 0x054C   (0x000C)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Qte_Jueyuan(int32_t EntryPoint);                                                                // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/BaseCharacter/Abilities/GA/GA_Common_QTE.GA_Common_QTE_C
/// Size: 0x010C (268 bytes) (0x00052C - 0x000638) align 8 pad: 0x0000
class UGA_Common_QTE_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	FSCameraModifier_Settings                          _v_g;                                                       // 0x0538   (0x00E8)  
	class ATsBaseCharacter_C*                          _Seg_;                                                      // 0x0620   (0x0008)  
	class UBP_QTE_Camera_C*                            RogueQteCamera;                                             // 0x0628   (0x0008)  
	int32_t                                            Q;                                                          // 0x0630   (0x0004)  
	int32_t                                            Q0;                                                         // 0x0634   (0x0004)  
	// void OnTick_5D118C384AE61F1C80292E81AB2AB65B();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81AB2AB65B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81AB2AB65B();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81AB2AB65B();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81AB2AB65B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_E8C2FC224B0A82D0076DE58540825291(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Common_QTE(int32_t EntryPoint);                                                                 // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/In/NCS_In_Lv6.NCS_In_Lv6_C
/// Size: 0x0000 (0 bytes) (0x0001B8 - 0x0001B8) align 16 pad: 0x0000
class UNCS_In_Lv6_C : public UBP_CameraShakeAndForceFeedback_C
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Left/NCS_Left_Lv3.NCS_Left_Lv3_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Left_Lv3_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/In/NCS_In_Lv10.NCS_In_Lv10_C
/// Size: 0x0000 (0 bytes) (0x0001B8 - 0x0001B8) align 16 pad: 0x0000
class UNCS_In_Lv10_C : public UBP_CameraShakeAndForceFeedback_C
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Right/NCS_Right_Lv4.NCS_Right_Lv4_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Right_Lv4_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Right/NCS_Right_Lv2.NCS_Right_Lv2_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Right_Lv2_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Down/NCS_Down_Lv2.NCS_Down_Lv2_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Down_Lv2_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/In/NCS_In_Lv3.NCS_In_Lv3_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_In_Lv3_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Down/NCS_Down_Lv1.NCS_Down_Lv1_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Down_Lv1_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Left/NCS_Left_Lv1.NCS_Left_Lv1_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Left_Lv1_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Right/NCS_Right_Lv1.NCS_Right_Lv1_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Right_Lv1_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Right/NCS_Right_Lv5.NCS_Right_Lv5_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Right_Lv5_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Left/NCS_Left_Lv4.NCS_Left_Lv4_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Left_Lv4_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Down/NCS_Down_Lv3.NCS_Down_Lv3_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Down_Lv3_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Down/NCS_Down_Lv4.NCS_Down_Lv4_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Down_Lv4_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Down/NCS_Down_Lv5.NCS_Down_Lv5_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Down_Lv5_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/In/NCS_In_Lv5.NCS_In_Lv5_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_In_Lv5_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/In/NCS_In_Lv4.NCS_In_Lv4_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_In_Lv4_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_Kakaluo_Attack10.GA_Kakaluo_Attack10_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Kakaluo_Attack10_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E815C4A3E85();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E815C4A3E85();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E815C4A3E85();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E815C4A3E85();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E815C4A3E85();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81B464A13B();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81B464A13B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81B464A13B();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81B464A13B();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81B464A13B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Kakaluo_Attack10(int32_t EntryPoint);                                                           // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_Summon_Soul_Father.GA_Summon_Soul_Father_C
/// Size: 0x002C (44 bytes) (0x00052C - 0x000558) align 8 pad: 0x0000
class UGA_Summon_Soul_Father_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	int64_t                                            _S_U__S;                                                    // 0x0538   (0x0008)  
	bool                                               _f_T_b;                                                     // 0x0540   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0541   (0x0003)  MISSED
	int32_t                                            _S_U_;                                                      // 0x0544   (0x0004)  
	int32_t                                            _S_Ui;                                                      // 0x0548   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x054C   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          _S_;                                                        // 0x0550   (0x0008)  
	// FVector ___Y_(int32_t ___s, int32_t _el_);                                                                               // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _T_lMO(FVector& _T_);                                                                                               // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ____();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___SB__QG(class ATsBaseCharacter_C*& B_);                                                                           // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _v__(bool _f_T_N___z);                                                                                              // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __n__(class ATsBaseCharacter_C* _S_);                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// FTransform ___S_S();                                                                                                     // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void S__R_(int32_t __SO, class AActor* entity);                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Summon_Soul_Father(int32_t EntryPoint);                                                         // [0x25a7960] Final                
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/SceneItem/SimpleBlueprintItem/TsSimpleInteractBase.TsSimpleInteractBase_C
/// Size: 0x0014 (20 bytes) (0x0002B0 - 0x0002C4) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ATsSimpleInteractBase_C : public AKuroEffectActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B0   (0x0008)  
	class UTextRenderComponent*                        Text;                                                       // 0x02B8   (0x0008)  
	int32_t                                            TypeId;                                                     // 0x02C0   (0x0004)  
	// FSSimpleInteractResult GetBestTransform(class AActor* Actor, FVector moveOffset, float HalfHeight, float Radius);        // [0x13db470] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Draw();                                                                                                             // [0x13db470] Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x13db470] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x13db470] Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x13db470] Event|Public|BlueprintCallable|BlueprintEvent 
	// void EditorInit();                                                                                                       // [0x13db470] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsSimpleInteractBase(int32_t EntryPoint);                                                          // [0x13db470] Final|Public|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_Kakaluo_Skill01_New.GA_Kakaluo_Skill01_New_C
/// Size: 0x00B4 (180 bytes) (0x00052C - 0x0005E0) align 16 pad: 0x0000
class UGA_Kakaluo_Skill01_New_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	FString                                            nf_e_b;                                                     // 0x0538   (0x0010)  
	int32_t                                            nf_e;                                                       // 0x0548   (0x0004)  
	FGameplayTag                                       ___k_m;                                                     // 0x054C   (0x000C)  
	int32_t                                            E;                                                          // 0x0558   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x055C   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          E0;                                                         // 0x0560   (0x0008)  
	unsigned char                                      UnknownData02_6[0x8];                                       // 0x0568   (0x0008)  MISSED
	FTransform                                         _Ock_Tq;                                                    // 0x0570   (0x0030)  
	FTransform                                         _Ock_TMO;                                                   // 0x05A0   (0x0030)  
	TArray<FGameplayTag>                               nf_e1;                                                      // 0x05D0   (0x0010)  
	// void _6e0R_N_N_();                                                                                                       // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void aSaSW__R_(FTransform& NewParam);                                                                                    // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void aSaSW__R__MO(FTransform& _Ock_);                                                                                    // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E811E8E025E();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E811E8E025E();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E811E8E025E();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E811E8E025E();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E811E8E025E();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E813AD4461D();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E813AD4461D();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E813AD4461D();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E813AD4461D();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E813AD4461D();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD88140078BA(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD886C9EC236(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Kakaluo_Skill01_New(int32_t EntryPoint);                                                        // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_Kakaluo_QTE.GA_Kakaluo_QTE_C
/// Size: 0x0100 (256 bytes) (0x000638 - 0x000738) align 8 pad: 0x0000
class UGA_Kakaluo_QTE_C : public UGA_Common_QTE_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0638   (0x0008)  
	FSCameraModifier_Settings                          _v_g;                                                       // 0x0640   (0x00E8)  
	int32_t                                            aSaSW_Q;                                                    // 0x0728   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x072C   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          aSaSW_Q0;                                                   // 0x0730   (0x0008)  
	// void EventReceived_18B59F5945020DB23C42FD88AB785B0F(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD88EECE36F0(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Kakaluo_QTE(int32_t EntryPoint);                                                                // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_Kakaluo_BurstAttack.GA_Kakaluo_BurstAttack_C
/// Size: 0x0114 (276 bytes) (0x00052C - 0x000640) align 16 pad: 0x0000
class UGA_Kakaluo_BurstAttack_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          aSaSW__Y;                                                   // 0x0538   (0x0008)  
	int32_t                                            aSaSW__;                                                    // 0x0540   (0x0004)  
	int32_t                                            aSaSW__g;                                                   // 0x0544   (0x0004)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0548   (0x0008)  MISSED
	FTransform                                         nf_e1;                                                      // 0x0550   (0x0030)  
	FTransform                                         nf_e3;                                                      // 0x0580   (0x0030)  
	FTransform                                         nf_e4;                                                      // 0x05B0   (0x0030)  
	FTransform                                         nf_e5;                                                      // 0x05E0   (0x0030)  
	FTransform                                         nf_e2;                                                      // 0x0610   (0x0030)  
	// void __n_q_();                                                                                                           // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD88016CF527(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E8169F44D5B();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8169F44D5B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8169F44D5B();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8169F44D5B();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8169F44D5B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Kakaluo_BurstAttack(int32_t EntryPoint);                                                        // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_Kakaluo_Burst_End.GA_Kakaluo_Burst_End_C
/// Size: 0x001C (28 bytes) (0x00052C - 0x000548) align 8 pad: 0x0000
class UGA_Kakaluo_Burst_End_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	int32_t                                            aSaSW__;                                                    // 0x0538   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x053C   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          aSaSW__Y;                                                   // 0x0540   (0x0008)  
	// void Added_21071CB943CD992BF8EFD6A3188FBD59(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Removed_DB9F64004F8908FEAD99D381265B5028(FGameplayTag& Tag);                                                        // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E811B10E289();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E811B10E289();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E811B10E289();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E811B10E289();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E811B10E289();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Kakaluo_Burst_End(int32_t EntryPoint);                                                          // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_Kakaluo_Burst_Passive.GA_Kakaluo_Burst_Passive_C
/// Size: 0x0009 (9 bytes) (0x000538 - 0x000541) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UGA_Kakaluo_Burst_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	bool                                               __Q;                                                        // 0x0540   (0x0001)  
	// void Added_21071CB943CD992BF8EFD6A39E8555B1(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Kakaluo_Burst_Passive(int32_t EntryPoint);                                                      // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_Kakaluo_Burst.GA_Kakaluo_Burst_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Kakaluo_Burst_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E8150C86383();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8150C86383();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8150C86383();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8150C86383();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8150C86383();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Kakaluo_Burst(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_Kakaluo_Attack_New.GA_Kakaluo_Attack_New_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Kakaluo_Attack_New_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E8137D5CA42();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8137D5CA42();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8137D5CA42();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8137D5CA42();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8137D5CA42();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Kakaluo_Attack_New(int32_t EntryPoint);                                                         // [0x25a7960] Final                
};

/// Class /Game/Aki/TypeScript/Game/NewWorld/SceneItem/SimpleBlueprintItem/TsSimpleInteractHookPoint.TsSimpleInteractHookPoint_C
/// Size: 0x0000 (0 bytes) (0x0002C4 - 0x0002C4) align 8 pad: 0x0000
class ATsSimpleInteractHookPoint_C : public ATsSimpleInteractBase_C
{ 
public:
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/Rogue/GA_Summon_Bailian_Burst_Rogue.GA_Summon_Bailian_Burst_Rogue_C
/// Size: 0x0028 (40 bytes) (0x000558 - 0x000580) align 8 pad: 0x0000
class UGA_Summon_Bailian_Burst_Rogue_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	int64_t                                            _S_U__S;                                                    // 0x0560   (0x0008)  
	bool                                               _f_T_b;                                                     // 0x0568   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0569   (0x0003)  MISSED
	int32_t                                            _S_;                                                        // 0x056C   (0x0004)  
	int32_t                                            _S_Uir;                                                     // 0x0570   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0574   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          _S_Ui;                                                      // 0x0578   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81759129BF();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81759129BF();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81759129BF();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81759129BF();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81759129BF();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Summon_Bailian_Burst_Rogue(int32_t EntryPoint);                                                 // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/Rogue/GA_Summon_Bailian_Attack_Rogue.GA_Summon_Bailian_Attack_Rogue_C
/// Size: 0x0038 (56 bytes) (0x000558 - 0x000590) align 8 pad: 0x0000
class UGA_Summon_Bailian_Attack_Rogue_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	int64_t                                            _S_U__S;                                                    // 0x0560   (0x0008)  
	bool                                               _f_T_b;                                                     // 0x0568   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0569   (0x0003)  MISSED
	int32_t                                            _S_;                                                        // 0x056C   (0x0004)  
	int32_t                                            _S_Uir;                                                     // 0x0570   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0574   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          _S_Ui;                                                      // 0x0578   (0x0008)  
	int32_t                                            __9__S;                                                     // 0x0580   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0584   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          B_;                                                         // 0x0588   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E810F0F6BB2();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E810F0F6BB2();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E810F0F6BB2();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E810F0F6BB2();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E810F0F6BB2();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD880747C875(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Summon_Bailian_Attack_Rogue(int32_t EntryPoint);                                                // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/Rogue/GA_Summon_Bailian_Skill_Rogue.GA_Summon_Bailian_Skill_Rogue_C
/// Size: 0x0024 (36 bytes) (0x000558 - 0x00057C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_Summon_Bailian_Skill_Rogue_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	int64_t                                            _S_U__S;                                                    // 0x0560   (0x0008)  
	bool                                               _f_T_b;                                                     // 0x0568   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0569   (0x0003)  MISSED
	float                                              P_9__S;                                                     // 0x056C   (0x0004)  
	int32_t                                            _S_;                                                        // 0x0570   (0x0004)  
	int32_t                                            _S_Uir;                                                     // 0x0574   (0x0004)  
	int32_t                                            b;                                                          // 0x0578   (0x0004)  
	// void EventReceived_18B59F5945020DB23C42FD8859802B91(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E8129C1DCD9();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8129C1DCD9();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8129C1DCD9();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8129C1DCD9();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8129C1DCD9();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Summon_Bailian_Skill_Rogue(int32_t EntryPoint);                                                 // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/Rogue/GA_Bailian_BianShenEnd_Rogue.GA_Bailian_BianShenEnd_Rogue_C
/// Size: 0x001C (28 bytes) (0x00052C - 0x000548) align 8 pad: 0x0000
class UGA_Bailian_BianShenEnd_Rogue_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class UObject*                                     __r__m;                                                     // 0x0538   (0x0008)  
	class UObject*                                     __r__f;                                                     // 0x0540   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81B83DA31D();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81B83DA31D();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81B83DA31D();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81B83DA31D();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81B83DA31D();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Bailian_BianShenEnd_Rogue(int32_t EntryPoint);                                                  // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/Rogue/GA_Bailian_BianShen_Rogue.GA_Bailian_BianShen_Rogue_C
/// Size: 0x0020 (32 bytes) (0x00052C - 0x00054C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_Bailian_BianShen_Rogue_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class UObject*                                     __r__m;                                                     // 0x0538   (0x0008)  
	class UObject*                                     __r__f;                                                     // 0x0540   (0x0008)  
	int32_t                                            __r__m1YPg__;                                               // 0x0548   (0x0004)  
	// void OnTick_5D118C384AE61F1C80292E815362A85D();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E815362A85D();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E815362A85D();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E815362A85D();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E815362A85D();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A320FAC5B4(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E815FEFBF82();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E815FEFBF82();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E815FEFBF82();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E815FEFBF82();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E815FEFBF82();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void Removed_DB9F64004F8908FEAD99D381BF21279A(FGameplayTag& Tag);                                                        // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void Pg__(int32_t Pg__);                                                                                                 // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_GA_Bailian_BianShen_Rogue(int32_t EntryPoint);                                                     // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_Summon_ChangeCharacter_Air.GA_Summon_ChangeCharacter_Air_C
/// Size: 0x003C (60 bytes) (0x000558 - 0x000594) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_Summon_ChangeCharacter_Air_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	int64_t                                            _S_U__S;                                                    // 0x0560   (0x0008)  
	bool                                               _f_T_b;                                                     // 0x0568   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0569   (0x0003)  MISSED
	float                                              _N;                                                         // 0x056C   (0x0004)  
	float                                              _e;                                                         // 0x0570   (0x0004)  
	bool                                               __0W;                                                       // 0x0574   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0575   (0x0003)  MISSED
	class ATsBaseCharacter_C*                          _S_Ui;                                                      // 0x0578   (0x0008)  
	int32_t                                            _S_Uir;                                                     // 0x0580   (0x0004)  
	int32_t                                            _S_;                                                        // 0x0584   (0x0004)  
	class ATsBaseCharacter_C*                          B_;                                                         // 0x0588   (0x0008)  
	float                                              BlockTime;                                                  // 0x0590   (0x0004)  
	// void OnTick_5D118C384AE61F1C80292E8159A2FCF0();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8159A2FCF0();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8159A2FCF0();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8159A2FCF0();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8159A2FCF0();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81C0BEF616();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81C0BEF616();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81C0BEF616();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81C0BEF616();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81C0BEF616();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E8105F434DC();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8105F434DC();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8105F434DC();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8105F434DC();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8105F434DC();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Summon_ChangeCharacter_Air(int32_t EntryPoint);                                                 // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_Summon_ChangeCharacter.GA_Summon_ChangeCharacter_C
/// Size: 0x0028 (40 bytes) (0x000558 - 0x000580) align 8 pad: 0x0000
class UGA_Summon_ChangeCharacter_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	int64_t                                            _S_U__S;                                                    // 0x0560   (0x0008)  
	bool                                               _f_T_b;                                                     // 0x0568   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0569   (0x0003)  MISSED
	int32_t                                            _S_;                                                        // 0x056C   (0x0004)  
	int32_t                                            _S_Uir;                                                     // 0x0570   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0574   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          _S_Ui;                                                      // 0x0578   (0x0008)  
	// void EventReceived_18B59F5945020DB23C42FD880C6581D0(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E814BD11116();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E814BD11116();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E814BD11116();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E814BD11116();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E814BD11116();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Summon_ChangeCharacter(int32_t EntryPoint);                                                     // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_Summon_Bailian_Skill.GA_Summon_Bailian_Skill_C
/// Size: 0x0028 (40 bytes) (0x000558 - 0x000580) align 8 pad: 0x0000
class UGA_Summon_Bailian_Skill_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	int64_t                                            _S_U__S;                                                    // 0x0560   (0x0008)  
	bool                                               _f_T_b;                                                     // 0x0568   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0569   (0x0003)  MISSED
	float                                              P_9__S;                                                     // 0x056C   (0x0004)  
	int32_t                                            _S_;                                                        // 0x0570   (0x0004)  
	int32_t                                            _S_Uir;                                                     // 0x0574   (0x0004)  
	class ATsBaseCharacter_C*                          _S_Ui;                                                      // 0x0578   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E817834A10C();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E817834A10C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E817834A10C();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E817834A10C();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E817834A10C();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD88C16AB764(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD88E39004C4(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Summon_Bailian_Skill(int32_t EntryPoint);                                                       // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_ExitSkill_BaiLian_Passive.GA_ExitSkill_BaiLian_Passive_C
/// Size: 0x0024 (36 bytes) (0x000538 - 0x00055C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_ExitSkill_BaiLian_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	int64_t                                            Buff_Id;                                                    // 0x0540   (0x0008)  
	class UBP_QTE_Camera_C*                            QTECamera;                                                  // 0x0548   (0x0008)  
	FName                                              _b___;                                                      // 0x0550   (0x000C)  
	// void K2_ActivateAbilityFromEvent(FGameplayEventData& eventData);                                                         // [0x25a7960] Event|Protected|HasOutParms|BlueprintEvent 
	// void ExecuteUbergraph_GA_ExitSkill_BaiLian_Passive(int32_t EntryPoint);                                                  // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_Qte_Bailian.GA_Qte_Bailian_C
/// Size: 0x0020 (32 bytes) (0x000538 - 0x000558) align 8 pad: 0x0000
class UGA_Qte_Bailian_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	class UBP_QTE_Camera_C*                            QTECamera;                                                  // 0x0540   (0x0008)  
	int32_t                                            Entity_Id;                                                  // 0x0548   (0x0004)  
	FName                                              _b___;                                                      // 0x054C   (0x000C)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Qte_Bailian(int32_t EntryPoint);                                                                // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_QTE_Bailian_Skill.GA_QTE_Bailian_Skill_C
/// Size: 0x0108 (264 bytes) (0x000558 - 0x000660) align 8 pad: 0x0000
class UGA_QTE_Bailian_Skill_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	int64_t                                            _S_U__S;                                                    // 0x0560   (0x0008)  
	bool                                               _f_T_b;                                                     // 0x0568   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0569   (0x0007)  MISSED
	FSCameraModifier_Settings                          _v_g;                                                       // 0x0570   (0x00E8)  
	class ATsBaseCharacter_C*                          B_;                                                         // 0x0658   (0x0008)  
	// void EventReceived_9EB1A7324E1A4342A1D49EA1F861014D(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_4E5B137043282D8BA28DA998996C9815();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81D3D58A94();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81D3D58A94();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81D3D58A94();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81D3D58A94();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81D3D58A94();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_QTE_Bailian_Skill(int32_t EntryPoint);                                                          // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_Bailian_Move_B.GA_Bailian_Move_B_C
/// Size: 0x0008 (8 bytes) (0x000558 - 0x000560) align 8 pad: 0x0000
class UGA_Bailian_Move_B_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	// bool K2_CanActivateAbility(FGameplayAbilityActorInfo ActorInfo, FGameplayTagContainer& RelevantTags);                    // [0x25a7960] Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|Const 
	// void Added_21071CB943CD992BF8EFD6A391ACA459(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81CB895562();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81CB895562();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81CB895562();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81CB895562();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81CB895562();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_A408A1FB4BA29DD64D303BBC8E024EC7();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Bailian_Move_B(int32_t EntryPoint);                                                             // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_Bailian_Move_F.GA_Bailian_Move_F_C
/// Size: 0x0010 (16 bytes) (0x000558 - 0x000568) align 8 pad: 0x0000
class UGA_Bailian_Move_F_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	class UBaseAbilitySystemComponent*                 AbilitySystemComponent;                                     // 0x0560   (0x0008)  
	// bool K2_CanActivateAbility(FGameplayAbilityActorInfo ActorInfo, FGameplayTagContainer& RelevantTags);                    // [0x25a7960] Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|Const 
	// void Added_21071CB943CD992BF8EFD6A319975B4F(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3CBFAF6FF(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnFinish_DF6636934720A4BC55240397E4DF0B57();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E812AEE0880();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E812AEE0880();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E812AEE0880();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E812AEE0880();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E812AEE0880();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Bailian_Move_F(int32_t EntryPoint);                                                             // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_Summon_Bailian_Burst.GA_Summon_Bailian_Burst_C
/// Size: 0x0028 (40 bytes) (0x000558 - 0x000580) align 8 pad: 0x0000
class UGA_Summon_Bailian_Burst_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	int64_t                                            _S_U__S;                                                    // 0x0560   (0x0008)  
	bool                                               _f_T_b;                                                     // 0x0568   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0569   (0x0003)  MISSED
	int32_t                                            _S_;                                                        // 0x056C   (0x0004)  
	int32_t                                            _S_Uir;                                                     // 0x0570   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0574   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          _S_Ui;                                                      // 0x0578   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E811FDE280F();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E811FDE280F();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E811FDE280F();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E811FDE280F();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E811FDE280F();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Summon_Bailian_Burst(int32_t EntryPoint);                                                       // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_Summon_Bailian_AirAttack.GA_Summon_Bailian_AirAttack_C
/// Size: 0x0028 (40 bytes) (0x000558 - 0x000580) align 8 pad: 0x0000
class UGA_Summon_Bailian_AirAttack_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	int64_t                                            _S_U__S;                                                    // 0x0560   (0x0008)  
	bool                                               _f_T_b;                                                     // 0x0568   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0569   (0x0003)  MISSED
	float                                              P_9__S;                                                     // 0x056C   (0x0004)  
	int32_t                                            _S_;                                                        // 0x0570   (0x0004)  
	int32_t                                            _S_Uir;                                                     // 0x0574   (0x0004)  
	class ATsBaseCharacter_C*                          _S_Ui;                                                      // 0x0578   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E8198172FAE();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8198172FAE();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8198172FAE();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8198172FAE();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8198172FAE();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Summon_Bailian_AirAttack(int32_t EntryPoint);                                                   // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_Bailian_CallBack.GA_Bailian_CallBack_C
/// Size: 0x0008 (8 bytes) (0x000558 - 0x000560) align 8 pad: 0x0000
class UGA_Bailian_CallBack_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81770187B3();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81770187B3();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81770187B3();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81770187B3();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81770187B3();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Bailian_CallBack(int32_t EntryPoint);                                                           // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_Summon_Bailian_Attack01.GA_Summon_Bailian_Attack01_C
/// Size: 0x0030 (48 bytes) (0x000558 - 0x000588) align 8 pad: 0x0000
class UGA_Summon_Bailian_Attack01_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	int64_t                                            _S_U__S;                                                    // 0x0560   (0x0008)  
	bool                                               _f_T_b;                                                     // 0x0568   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0569   (0x0003)  MISSED
	int32_t                                            _S_;                                                        // 0x056C   (0x0004)  
	int32_t                                            _S_Uir;                                                     // 0x0570   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0574   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          _S_Ui;                                                      // 0x0578   (0x0008)  
	class ATsBaseCharacter_C*                          B_;                                                         // 0x0580   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E8137E62310();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8137E62310();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8137E62310();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8137E62310();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8137E62310();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD88A5E1D5F0(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Summon_Bailian_Attack01(int32_t EntryPoint);                                                    // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/GA/GA_Summon_Soul.GA_Summon_Soul_C
/// Size: 0x0008 (8 bytes) (0x000558 - 0x000560) align 8 pad: 0x0000
class UGA_Summon_Soul_C : public UGA_Summon_Soul_Father_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0558   (0x0008)  
	// void EventReceived_18B59F5945020DB23C42FD8843E547D0(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E8109E1332E();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8109E1332E();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8109E1332E();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8109E1332E();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8109E1332E();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Summon_Soul(int32_t EntryPoint);                                                                // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Out/NCS_Out_Lv7.NCS_Out_Lv7_C
/// Size: 0x0000 (0 bytes) (0x0001B8 - 0x0001B8) align 16 pad: 0x0000
class UNCS_Out_Lv7_C : public UBP_CameraShakeAndForceFeedback_C
{ 
public:
};

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_ExitSkill_Kakaluo_Passive.GA_ExitSkill_Kakaluo_Passive_C
/// Size: 0x0024 (36 bytes) (0x000538 - 0x00055C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_ExitSkill_Kakaluo_Passive_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	int64_t                                            Buff_Id;                                                    // 0x0540   (0x0008)  
	class UBP_QTE_Camera_C*                            QTECamera;                                                  // 0x0548   (0x0008)  
	FName                                              _b___;                                                      // 0x0550   (0x000C)  
	// void K2_ActivateAbilityFromEvent(FGameplayEventData& eventData);                                                         // [0x25a7960] Event|Protected|HasOutParms|BlueprintEvent 
	// void ExecuteUbergraph_GA_ExitSkill_Kakaluo_Passive(int32_t EntryPoint);                                                  // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_Qte_Kakaluo.GA_Qte_Kakaluo_C
/// Size: 0x0020 (32 bytes) (0x000538 - 0x000558) align 8 pad: 0x0000
class UGA_Qte_Kakaluo_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	class UBP_QTE_Camera_C*                            QTECamera;                                                  // 0x0540   (0x0008)  
	int32_t                                            Entity_Id;                                                  // 0x0548   (0x0004)  
	FName                                              _b___;                                                      // 0x054C   (0x000C)  
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Qte_Kakaluo(int32_t EntryPoint);                                                                // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/In/NCS_In_Lv8.NCS_In_Lv8_C
/// Size: 0x0000 (0 bytes) (0x0001B8 - 0x0001B8) align 16 pad: 0x0000
class UNCS_In_Lv8_C : public UBP_CameraShakeAndForceFeedback_C
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStatePositionBranchTarget.TsAnimNotifyStatePositionBranchTarget_C
/// Size: 0x0050 (80 bytes) (0x000048 - 0x000098) align 8 pad: 0x0000
class UTsAnimNotifyStatePositionBranchTarget_C : public UKuroAnimNotifyState
{ 
public:
	class UCurveFloat*                                 MoveCurve;                                                  // 0x0048   (0x0008)  
	float                                              Distance;                                                   // 0x0050   (0x0004)  
	float                                              MaxSpeed;                                                   // 0x0054   (0x0004)  
	bool                                               _f_T8l__;                                                   // 0x0058   (0x0001)  
	bool                                               __euZ;                                                      // 0x0059   (0x0001)  
	bool                                               _8l___O;                                                    // 0x005A   (0x0001)  
	bool                                               __eu_S;                                                     // 0x005B   (0x0001)  
	bool                                               IsShareTarget;                                              // 0x005C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x005D   (0x0003)  MISSED
	FVector                                            TargetOffset;                                               // 0x0060   (0x000C)  
	FRotator                                           TargetRotation;                                             // 0x006C   (0x000C)  
	bool                                               AQ___S;                                                     // 0x0078   (0x0001)  
	bool                                               AQ__ck;                                                     // 0x0079   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x007A   (0x0006)  MISSED
	FText                                              ___;                                                        // 0x0080   (0x0018)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Initialize();                                                                                                       // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateNextAtt.TsAnimNotifyStateNextAtt_C
/// Size: 0x0000 (0 bytes) (0x000048 - 0x000048) align 8 pad: 0x0000
class UTsAnimNotifyStateNextAtt_C : public UKuroAnimNotifyState
{ 
public:
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyReSkillEvent.TsAnimNotifyReSkillEvent_C
/// Size: 0x0038 (56 bytes) (0x000048 - 0x000080) align 8 pad: 0x0000
class UTsAnimNotifyReSkillEvent_C : public UKuroAnimNotify
{ 
public:
	bool                                               _O_uP_9_;                                                   // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0049   (0x0003)  MISSED
	FName                                              P_9_p;                                                      // 0x004C   (0x000C)  
	TArray<FString>                                    P_9_i;                                                      // 0x0058   (0x0010)  
	bool                                               _O_u_S_;                                                    // 0x0068   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0069   (0x0007)  MISSED
	TArray<float>                                      ___gP_9_;                                                   // 0x0070   (0x0010)  
	// float GetRandomIndex();                                                                                                  // [0x13db470] Native|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyFightStand.TsAnimNotifyFightStand_C
/// Size: 0x0000 (0 bytes) (0x000048 - 0x000048) align 8 pad: 0x0000
class UTsAnimNotifyFightStand_C : public UKuroAnimNotify
{ 
public:
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyEndSkill.TsAnimNotifyEndSkill_C
/// Size: 0x0000 (0 bytes) (0x000048 - 0x000048) align 8 pad: 0x0000
class UTsAnimNotifyEndSkill_C : public UKuroAnimNotify
{ 
public:
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Down/NCS_Down_Lv6.NCS_Down_Lv6_C
/// Size: 0x0000 (0 bytes) (0x0001B8 - 0x0001B8) align 16 pad: 0x0000
class UNCS_Down_Lv6_C : public UBP_CameraShakeAndForceFeedback_C
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateHideMesh.TsAnimNotifyStateHideMesh_C
/// Size: 0x0021 (33 bytes) (0x000048 - 0x000069) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsAnimNotifyStateHideMesh_C : public UKuroAnimNotifyState
{ 
public:
	FString                                            ChildMeshName;                                              // 0x0048   (0x0010)  
	bool                                               HideChildren;                                               // 0x0058   (0x0001)  
	bool                                               HideChildrenActors;                                         // 0x0059   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x005A   (0x0006)  MISSED
	class UPD_CharacterControllerData_C*               EndEffect;                                                  // 0x0060   (0x0008)  
	bool                                               Hide;                                                       // 0x0068   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateInteractionRotateToLocation.TsAnimNotifyStateInteractionRotateToLocation_C
/// Size: 0x0008 (8 bytes) (0x000048 - 0x000050) align 8 pad: 0x0000
class UTsAnimNotifyStateInteractionRotateToLocation_C : public UKuroAnimNotifyState
{ 
public:
	float                                              RotateSpeed;                                                // 0x0048   (0x0004)  
	float                                              Rotator;                                                    // 0x004C   (0x0004)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyCatapult.TsAnimNotifyCatapult_C
/// Size: 0x0000 (0 bytes) (0x000048 - 0x000048) align 8 pad: 0x0000
class UTsAnimNotifyCatapult_C : public UKuroAnimNotify
{ 
public:
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateGoThrough.TsAnimNotifyStateGoThrough_C
/// Size: 0x0015 (21 bytes) (0x000048 - 0x00005D) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UTsAnimNotifyStateGoThrough_C : public UKuroAnimNotifyState
{ 
public:
	int32_t                                            FirstGoThroughPriority;                                     // 0x0048   (0x0004)  
	int32_t                                            SecondHitPriority;                                          // 0x004C   (0x0004)  
	float                                              OldGoThroughPriority;                                       // 0x0050   (0x0004)  
	float                                              OldHitPriority;                                             // 0x0054   (0x0004)  
	float                                              LeftTime;                                                   // 0x0058   (0x0004)  
	bool                                               IsEnd;                                                      // 0x005C   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyAddTag.TsAnimNotifyAddTag_C
/// Size: 0x000C (12 bytes) (0x000048 - 0x000054) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UTsAnimNotifyAddTag_C : public UKuroAnimNotify
{ 
public:
	FGameplayTag                                       Tag;                                                        // 0x0048   (0x000C)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateShowManipualteFx.TsAnimNotifyStateShowManipualteFx_C
/// Size: 0x0000 (0 bytes) (0x000048 - 0x000048) align 8 pad: 0x0000
class UTsAnimNotifyStateShowManipualteFx_C : public UKuroAnimNotifyState
{ 
public:
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyRoleFinishInteract.TsAnimNotifyRoleFinishInteract_C
/// Size: 0x0001 (1 bytes) (0x000048 - 0x000049) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsAnimNotifyRoleFinishInteract_C : public UKuroAnimNotify
{ 
public:
	TEnumAsByte<ERoleInteractType>                     Type;                                                       // 0x0048   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateCameraStateChange.TsAnimNotifyStateCameraStateChange_C
/// Size: 0x0002 (2 bytes) (0x000048 - 0x00004A) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class UTsAnimNotifyStateCameraStateChange_C : public UKuroAnimNotifyState
{ 
public:
	bool                                               _f_T_NU;                                                    // 0x0048   (0x0001)  
	bool                                               _f_T;                                                       // 0x0049   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateSetHitPriority.TsAnimNotifyStateSetHitPriority_C
/// Size: 0x0004 (4 bytes) (0x000048 - 0x00004C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UTsAnimNotifyStateSetHitPriority_C : public UKuroAnimNotifyState
{ 
public:
	int32_t                                            HitPriority;                                                // 0x0048   (0x0004)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateAbsoluteTimeStop.TsAnimNotifyStateAbsoluteTimeStop_C
/// Size: 0x0003 (3 bytes) (0x000048 - 0x00004B) align 8 pad: 0x0003
#pragma pack(push, 0x1)
class UTsAnimNotifyStateAbsoluteTimeStop_C : public UKuroAnimNotifyState
{ 
public:
	bool                                               oR_g__;                                                     // 0x0048   (0x0001)  
	bool                                               __r__b_e;                                                   // 0x0049   (0x0001)  
	bool                                               __ir_b_e;                                                   // 0x004A   (0x0001)  
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateTimeStopRequest.TsAnimNotifyStateTimeStopRequest_C
/// Size: 0x0000 (0 bytes) (0x000048 - 0x000048) align 8 pad: 0x0000
class UTsAnimNotifyStateTimeStopRequest_C : public UKuroAnimNotifyState
{ 
public:
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateBurst.TsAnimNotifyStateBurst_C
/// Size: 0x0006 (6 bytes) (0x000048 - 0x00004E) align 8 pad: 0x0006
#pragma pack(push, 0x1)
class UTsAnimNotifyStateBurst_C : public UKuroAnimNotifyState
{ 
public:
	int32_t                                            HitPriority;                                                // 0x0048   (0x0004)  
	bool                                               _N__;                                                       // 0x004C   (0x0001)  
	bool                                               _f_T;                                                       // 0x004D   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifySwitchSequenceCamera.TsAnimNotifySwitchSequenceCamera_C
/// Size: 0x0077 (119 bytes) (0x000048 - 0x0000BF) align 8 pad: 0x0007
#pragma pack(push, 0x1)
class UTsAnimNotifySwitchSequenceCamera_C : public UKuroAnimNotify
{ 
public:
	FSSequenceCamera_Settings                          yr_Q__;                                                     // 0x0048   (0x0030)  
	FRotator                                           AdditiveRotation;                                           // 0x0078   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0084   (0x0004)  MISSED
	FString                                            CameraAttachSocket;                                         // 0x0088   (0x0010)  
	FString                                            CameraDetectSocket;                                         // 0x0098   (0x0010)  
	float                                              ExtraDetectSphereRadius;                                    // 0x00A8   (0x0004)  
	FVector                                            ExtraSphereLocation;                                        // 0x00AC   (0x000C)  
	bool                                               IsShowExtraSphere;                                          // 0x00B8   (0x0001)  
	bool                                               bResetLockOnCamera;                                         // 0x00B9   (0x0001)  
	TEnumAsByte<ESequenceCameraAnsEffectiveClientType> _uHe_;                                                      // 0x00BA   (0x0001)  
	bool                                               IsIgnoreCharacterCollision;                                 // 0x00BB   (0x0001)  
	bool                                               DisableMovementInput;                                       // 0x00BC   (0x0001)  
	bool                                               DisableLookAtInput;                                         // 0x00BD   (0x0001)  
	bool                                               DisableMotionBlur;                                          // 0x00BE   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyControllerShake.TsAnimNotifyControllerShake_C
/// Size: 0x0017 (23 bytes) (0x000048 - 0x00005F) align 8 pad: 0x0007
#pragma pack(push, 0x1)
class UTsAnimNotifyControllerShake_C : public UKuroAnimNotify
{ 
public:
	class UKuroForceFeedbackEffect*                    Effect;                                                     // 0x0048   (0x0008)  
	FName                                              Name;                                                       // 0x0050   (0x000C)  
	bool                                               IsLooping;                                                  // 0x005C   (0x0001)  
	bool                                               IsIgnoreTimeDilation;                                       // 0x005D   (0x0001)  
	bool                                               IsPlayWhilePaused;                                          // 0x005E   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Out/NCS_Out_Lv8.NCS_Out_Lv8_C
/// Size: 0x0000 (0 bytes) (0x0001B8 - 0x0001B8) align 16 pad: 0x0000
class UNCS_Out_Lv8_C : public UBP_CameraShakeAndForceFeedback_C
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifySetMovementMode.TsAnimNotifySetMovementMode_C
/// Size: 0x0001 (1 bytes) (0x000048 - 0x000049) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsAnimNotifySetMovementMode_C : public UKuroAnimNotify
{ 
public:
	TEnumAsByte<EMovementMode>                         MovementMode;                                               // 0x0048   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStatePosition.TsAnimNotifyStatePosition_C
/// Size: 0x0019 (25 bytes) (0x000048 - 0x000061) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsAnimNotifyStatePosition_C : public UKuroAnimNotifyState
{ 
public:
	FVector                                            _y_R;                                                       // 0x0048   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0054   (0x0004)  MISSED
	class UCurveFloat*                                 ____;                                                       // 0x0058   (0x0008)  
	bool                                               _f_T_c__;                                                   // 0x0060   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateKeepAwayFromGround.TsAnimNotifyStateKeepAwayFromGround_C
/// Size: 0x0014 (20 bytes) (0x000048 - 0x00005C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UTsAnimNotifyStateKeepAwayFromGround_C : public UKuroAnimNotifyState
{ 
public:
	float                                              ___y4ls_b;                                                  // 0x0048   (0x0004)  
	float                                              ___y4ls_b0;                                                 // 0x004C   (0x0004)  
	class UCurveFloat*                                 MoveCurve;                                                  // 0x0050   (0x0008)  
	float                                              MaxSpeed;                                                   // 0x0058   (0x0004)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateJumpLandDetect.TsAnimNotifyStateJumpLandDetect_C
/// Size: 0x0042 (66 bytes) (0x000048 - 0x00008A) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class UTsAnimNotifyStateJumpLandDetect_C : public UKuroAnimNotifyState
{ 
public:
	float                                              MaxHeightOffset;                                            // 0x0048   (0x0004)  
	FName                                              IgnoreActorTag;                                             // 0x004C   (0x000C)  
	FName                                              RootLookName;                                               // 0x0058   (0x000C)  
	FName                                              RootNameX;                                                  // 0x0064   (0x000C)  
	FName                                              RootNameY;                                                  // 0x0070   (0x000C)  
	FName                                              RootNameZ;                                                  // 0x007C   (0x000C)  
	bool                                               OnlyDown;                                                   // 0x0088   (0x0001)  
	bool                                               TsInited;                                                   // 0x0089   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// void Init();                                                                                                             // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Up/NCS_Up_Lv2.NCS_Up_Lv2_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Up_Lv2_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifySkillBehavior.TsAnimNotifySkillBehavior_C
/// Size: 0x0010 (16 bytes) (0x000048 - 0x000058) align 8 pad: 0x0000
class UTsAnimNotifySkillBehavior_C : public UKuroAnimNotify
{ 
public:
	TArray<FSSkillBehavior>                            _b__;                                                       // 0x0048   (0x0010)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Out/NCS_Out_Lv5.NCS_Out_Lv5_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Out_Lv5_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Data/Camera/BP_Fx_Bailian_Burst_01.BP_Fx_Bailian_Burst_01_C
/// Size: 0x0000 (0 bytes) (0x000190 - 0x000190) align 16 pad: 0x0000
class UBP_Fx_Bailian_Burst_01_C : public UMatineeCameraShake
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateSetCollisionChannel.TsAnimNotifyStateSetCollisionChannel_C
/// Size: 0x0010 (16 bytes) (0x000048 - 0x000058) align 8 pad: 0x0000
class UTsAnimNotifyStateSetCollisionChannel_C : public UKuroAnimNotifyState
{ 
public:
	SDK_UNDEFINED(16,1161) /* TArray<TEnumAsByte<ECollisionChannel>> */ __um(IgnoreChannels);                      // 0x0048   (0x0010)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Up/NCS_Up_Lv7.NCS_Up_Lv7_C
/// Size: 0x0000 (0 bytes) (0x0001B8 - 0x0001B8) align 16 pad: 0x0000
class UNCS_Up_Lv7_C : public UBP_CameraShakeAndForceFeedback_C
{ 
public:
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Data/Camera/BP_Fx_Bailian_Attack_03.BP_Fx_Bailian_Attack_03_C
/// Size: 0x0000 (0 bytes) (0x000190 - 0x000190) align 16 pad: 0x0000
class UBP_Fx_Bailian_Attack_03_C : public UMatineeCameraShake
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateBulletDuration.TsAnimNotifyStateBulletDuration_C
/// Size: 0x0048 (72 bytes) (0x000048 - 0x000090) align 16 pad: 0x0000
class UTsAnimNotifyStateBulletDuration_C : public UKuroAnimNotifyState
{ 
public:
	TArray<FString>                                    BulletIds;                                                  // 0x0048   (0x0010)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0058   (0x0008)  MISSED
	FTransform                                         UeTransform;                                                // 0x0060   (0x0030)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// void Initialize();                                                                                                       // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateCleanBurstCamera.TsAnimNotifyStateCleanBurstCamera_C
/// Size: 0x0003 (3 bytes) (0x000048 - 0x00004B) align 8 pad: 0x0003
#pragma pack(push, 0x1)
class UTsAnimNotifyStateCleanBurstCamera_C : public UKuroAnimNotifyState
{ 
public:
	bool                                               ____Le___v;                                                 // 0x0048   (0x0001)  
	bool                                               ____Le__;                                                   // 0x0049   (0x0001)  
	bool                                               _N_c_S_;                                                    // 0x004A   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Right/NCS_Right_Lv3.NCS_Right_Lv3_C
/// Size: 0x0000 (0 bytes) (0x0001B0 - 0x0001B0) align 16 pad: 0x0000
class UNCS_Right_Lv3_C : public UKuroCameraShake
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateSetMovementMode.TsAnimNotifyStateSetMovementMode_C
/// Size: 0x000C (12 bytes) (0x000048 - 0x000054) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UTsAnimNotifyStateSetMovementMode_C : public UKuroAnimNotifyState
{ 
public:
	TEnumAsByte<EMovementMode>                         EnterMode;                                                  // 0x0048   (0x0001)  
	TEnumAsByte<EMovementMode>                         LeaveMode;                                                  // 0x0049   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x004A   (0x0002)  MISSED
	float                                              EnterCustomMode;                                            // 0x004C   (0x0004)  
	int32_t                                            LeaveCustomMode;                                            // 0x0050   (0x0004)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/SequenceCamera/Fight/Bailian/SC_Bailian_Burst01.SequenceDirector_C
/// Size: 0x0008 (8 bytes) (0x000038 - 0x000040) align 8 pad: 0x0000
class USequenceDirector_Cdup_2 : public ULevelSequenceDirector
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0038   (0x0008)  
	// void SequenceEvent__ENTRYPOINTSequenceDirector(class ABP_KuroSeqEvent_C* BP_Kuro_Seq_Event);                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BP_Kuro_Seq_Event_Event(class ABP_KuroSeqEvent_C* BP_Kuro_Seq_Event, FString InTag);                                // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_SequenceDirector(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/FemaleS/Jueyuan/Abilities/ANS_Jueyuan_Huaban.ANS_Jueyuan_Huaban_C
/// Size: 0x002C (44 bytes) (0x000048 - 0x000074) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UANS_Jueyuan_Huaban_C : public UKuroAnimNotifyState
{ 
public:
	class ATsBaseCharacter_C*                          BP_Jueyuan;                                                 // 0x0048   (0x0008)  
	class UAnimInstance*                               MainAnimInstance;                                           // 0x0050   (0x0008)  
	float                                              ____;                                                       // 0x0058   (0x0004)  
	float                                              _N_k__;                                                     // 0x005C   (0x0004)  
	float                                              _u_b;                                                       // 0x0060   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0064   (0x0004)  MISSED
	class UEffectModelGroup_C*                         _b__;                                                       // 0x0068   (0x0008)  
	float                                              SpawnDuration;                                              // 0x0070   (0x0004)  
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x25a7960] Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Out/NCS_Out_Lv6.NCS_Out_Lv6_C
/// Size: 0x0000 (0 bytes) (0x0001B8 - 0x0001B8) align 16 pad: 0x0000
class UNCS_Out_Lv6_C : public UBP_CameraShakeAndForceFeedback_C
{ 
public:
};

/// Class /Game/Aki/Character/SequenceCamera/Fight/Jueyuan/SC_JueYuan_Brust01.SequenceDirector_C
/// Size: 0x0008 (8 bytes) (0x000038 - 0x000040) align 8 pad: 0x0000
class USequenceDirector_Cdup_3 : public ULevelSequenceDirector
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0038   (0x0008)  
	// void SequenceEvent__ENTRYPOINTSequenceDirector(class ABP_KuroMasterSeqEvent_C* BP_Kuro_Master_Seq_Event);                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BP_Kuro_Seq_Event_Event(class ABP_KuroSeqEvent_C* BP_Kuro_Seq_Event, FString InTag);                                // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void BP_Kuro_Master_Seq_Event_Event(class ABP_KuroMasterSeqEvent_C* BP_Kuro_Master_Seq_Event);                           // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_SequenceDirector(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/SequenceCamera/Fight/Jueyuan/SC_JueYuan_BrustRogue.SequenceDirector_C
/// Size: 0x0008 (8 bytes) (0x000038 - 0x000040) align 8 pad: 0x0000
class USequenceDirector_Cdup_4 : public ULevelSequenceDirector
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0038   (0x0008)  
	// void SequenceEvent__ENTRYPOINTSequenceDirector(class ABP_KuroMasterSeqEvent_C* BP_Kuro_Master_Seq_Event);                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BP_Kuro_Seq_Event_Event(class ABP_KuroSeqEvent_C* BP_Kuro_Seq_Event, FString InTag);                                // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void BP_Kuro_Master_Seq_Event_Event(class ABP_KuroMasterSeqEvent_C* BP_Kuro_Master_Seq_Event);                           // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_SequenceDirector(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/SequenceCamera/Fight/Kakaluo/SC_Kakaluo_Burst02.SequenceDirector_C
/// Size: 0x0008 (8 bytes) (0x000038 - 0x000040) align 8 pad: 0x0000
class USequenceDirector_Cdup_5 : public ULevelSequenceDirector
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0038   (0x0008)  
	// void SequenceEvent__ENTRYPOINTSequenceDirector(class ABP_KuroMasterSeqEvent_C* BP_Kuro_Master_Seq_Event);                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BP_Kuro_Master_Seq_Event_Event(class ABP_KuroMasterSeqEvent_C* BP_Kuro_Master_Seq_Event);                           // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_SequenceDirector(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateTurnModelBlackboard.TsAnimNotifyStateTurnModelBlackboard_C
/// Size: 0x0022 (34 bytes) (0x000048 - 0x00006A) align 8 pad: 0x0002
#pragma pack(push, 0x1)
class UTsAnimNotifyStateTurnModelBlackboard_C : public UKuroAnimNotifyState
{ 
public:
	class UCurveFloat*                                 Curve;                                                      // 0x0048   (0x0008)  
	FText                                              TurnModelKey;                                               // 0x0050   (0x0018)  
	bool                                               TurnActorOnEnd;                                             // 0x0068   (0x0001)  
	bool                                               Absolute;                                                   // 0x0069   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/SequenceCamera/Fight/Kakaluo/SC_Kakaluo_Burst01.SequenceDirector_C
/// Size: 0x0008 (8 bytes) (0x000038 - 0x000040) align 8 pad: 0x0000
class USequenceDirector_Cdup_6 : public ULevelSequenceDirector
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0038   (0x0008)  
	// void SequenceEvent__ENTRYPOINTSequenceDirector(class ABP_KuroMasterSeqEvent_C* BP_Kuro_Master_Seq_Event);                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BP_Kuro_Master_Seq_Event_Event(class ABP_KuroMasterSeqEvent_C* BP_Kuro_Master_Seq_Event);                           // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_SequenceDirector(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Struct /Game/Aki/Sequence/Manager/Structures/SSeqCharacterBlend.SSeqCharacterBlend
/// Size: 0x0054 (84 bytes) (0x000000 - 0x000054) align 16 pad: 0x0004
#pragma pack(push, 0x1)
struct FSSeqCharacterBlend
{ 
	FName                                              TargetTag_2_13D88CB04195D78F8149F2B9778FEA76;               // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FTransform                                         Transform_5_33F39E8E4B69321D9BF13FA7D77E9982;               // 0x0010   (0x0030)  
	float                                              BlendTime_8_2EBB6EE54592205AD472DCBD56383EBD;               // 0x0040   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0044   (0x0004)  MISSED
	class AActor*                                      Target_11_E7858D35490681ED5BD1BAB5C5FDCCF0;                 // 0x0048   (0x0008)  
	float                                              BlendAlpha_14_DEE76F4A42436AE16A3EF5A6FE8D38EC;             // 0x0050   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Sequence/Manager/BP_KuroSeqEvent.BP_KuroSeqEvent_C
/// Size: 0x0088 (136 bytes) (0x0002A8 - 0x000330) align 8 pad: 0x0000
class ABP_KuroSeqEvent_C : public AActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02A8   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B0   (0x0008)  
	TEnumAsByte<ETimelineDirection>                    ____0__Direction_D5AF32B047C17E633B8B4FBCA8F1E7AB;          // 0x02B8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x02B9   (0x0007)  MISSED
	class UTimelineComponent*                          _e_;                                                        // 0x02C0   (0x0008)  
	FVector                                            MoveLocation;                                               // 0x02C8   (0x000C)  
	bool                                               Is_Move;                                                    // 0x02D4   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x02D5   (0x0003)  MISSED
	FRotator                                           Move_Rotation;                                              // 0x02D8   (0x000C)  
	bool                                               IsRotate;                                                   // 0x02E4   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x02E5   (0x0003)  MISSED
	TArray<class AActor*>                              BlendActorList;                                             // 0x02E8   (0x0010)  
	TArray<FTransform>                                 BlendTargetTransform;                                       // 0x02F8   (0x0010)  
	bool                                               bIsBlending;                                                // 0x0308   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0309   (0x0007)  MISSED
	TArray<float>                                      lerpAlpha;                                                  // 0x0310   (0x0010)  
	TArray<FSSeqCharacterBlend>                        CharacterBlendGroup;                                        // 0x0320   (0x0010)  
	// void ChangeTimeOfDay(bool __, int32_t __1, int32_t _R, int32_t ___n, int32_t null, int32_t null1);                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ChangeWeather(int32_t _Y_l, bool __, float ___n);                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetMotionBlur(bool _T);                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BlendHelper();                                                                                                      // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void BlendingCharacter(FSSeqCharacterBlendGroup InSettings);                                                             // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void SetCharacterBinding(FString InTag);                                                                                 // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void DirectInteraction(FName InteractionID);                                                                             // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void MoveAfterMoviePlay();                                                                                               // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void PlayerUIMovie(class UFileMediaSource* MediaSource, bool IsMove, FVector InLocation, bool isTotate, FRotator InRotation); // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void NPCRotate(float __);                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void GeneralEvent(FName inEventID);                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Interaction(FSSubtitleSettings inSubtitleSettings);                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void JumpToOtherSeqNetwrok(FName inRowName, class UDataTable* inSeqNetworks);                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void JumpToSequenceNodeWithOption();                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EnableUIInput();                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ResumeSequnece();                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PauseSequence();                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void JumpToSequenceNode(FName inSeqNodeID);                                                                              // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PlaySubtitle(FSSubtitleSettings inSubtitle);                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _e__t__();                                                                                                          // [0x25a7960] BlueprintEvent       
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveDestroyed();                                                                                                 // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_KuroSeqEvent(int32_t EntryPoint);                                                               // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/NPC/Common/ABP_SimpleNPC.ABP_SimpleNPC_C
/// Size: 0x1119 (4377 bytes) (0x000460 - 0x001579) align 16 pad: 0x0009
#pragma pack(push, 0x1)
class UABP_SimpleNPC_C : public UKuroAnimInstance
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0460   (0x0008)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0468   (0x0038)  
	FAnimNode_Slot                                     AnimGraphNode_Slot;                                         // 0x04A0   (0x0060)  
	FAnimNode_Inertialization                          AnimGraphNode_Inertialization;                              // 0x0500   (0x0070)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult;                             // 0x0570   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult0;                            // 0x0598   (0x0028)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer;                             // 0x05C0   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult;                                  // 0x06B8   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1;                            // 0x06F0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult2;                            // 0x0718   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer;                               // 0x0740   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult3;                                 // 0x07D0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer4;                              // 0x0808   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult5;                                 // 0x0898   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine;                                 // 0x08D0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult6;                                 // 0x0A08   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine7;                                // 0x0A40   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult8;                                 // 0x0B78   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine9;                                // 0x0BB0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult10;                                // 0x0CE8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine11;                               // 0x0D20   (0x0138)  
	FAnimNode_Slot                                     AnimGraphNode_Slot12;                                       // 0x0E58   (0x0060)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive;                                // 0x0EB8   (0x00D0)  
	FAnimNode_Slot                                     AnimGraphNode_Slot13;                                       // 0x0F88   (0x0060)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive14;                              // 0x0FE8   (0x00D0)  
	FAnimNode_Root                                     AnimGraphNode_Root15;                                       // 0x10B8   (0x0038)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer;                              // 0x10F0   (0x00C0)  
	FAnimNode_Slot                                     AnimGraphNode_Slot16;                                       // 0x11B0   (0x0060)  
	FAnimNode_SightLock                                AnimGraphNode_SightLock;                                    // 0x1210   (0x01B8)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace;                        // 0x13C8   (0x0020)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace;                        // 0x13E8   (0x0020)  
	FAnimNode_EyeBlink                                 AnimGraphNode_EyeBlink;                                     // 0x1408   (0x0088)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer17;                             // 0x1490   (0x0090)  
	class ABP_BaseNPC_C*                               __r_;                                                       // 0x1520   (0x0008)  
	bool                                               ifPlayIdleAction;                                           // 0x1528   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x1529   (0x0007)  MISSED
	TArray<class UAnimMontage*>                        IdleMontageArray;                                           // 0x1530   (0x0010)  
	class USkeletalMeshComponent*                      __r_M;                                                      // 0x1540   (0x0008)  
	FVector                                            SightDirect;                                                // 0x1548   (0x000C)  
	bool                                               IsBeingImpacted;                                            // 0x1554   (0x0001)  
	SightLockMode                                      SightLockMode;                                              // 0x1555   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x1556   (0x0002)  MISSED
	int32_t                                            NpcEntityId;                                                // 0x1558   (0x0004)  
	float                                              CollisionDirection;                                         // 0x155C   (0x0004)  
	float                                              CollisionStrength;                                          // 0x1560   (0x0004)  
	bool                                               IsBeingAttacked;                                            // 0x1564   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x1565   (0x0003)  MISSED
	float                                              ExpresionAlpha;                                             // 0x1568   (0x0004)  
	float                                              RandomEpresionEndTime;                                      // 0x156C   (0x0004)  
	float                                              _w_w_R;                                                     // 0x1570   (0x0004)  
	float                                              dkn__w_w_;                                                  // 0x1574   (0x0004)  
	bool                                               _w_;                                                        // 0x1578   (0x0001)  
	// void InterfaceJumpPressed(float& Speed);                                                                                 // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _W_(FPoseLink& _W_);                                                                                                // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _f_e();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _f_e__();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void InterfaceManipulateInteractDirection(float __);                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnCompleted_D6858A004FA1AB8DDEB894A2775AA567(FName NotifyName);                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_D6858A004FA1AB8DDEB894A2775AA567(FName NotifyName);                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_D6858A004FA1AB8DDEB894A2775AA567(FName NotifyName);                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnNotifyBegin_D6858A004FA1AB8DDEB894A2775AA567(FName NotifyName);                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnNotifyEnd_D6858A004FA1AB8DDEB894A2775AA567(FName NotifyName);                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SimpleNPC_AnimGraphNode_EyeBlink_C3FA83044BB5ECAC066040BD8F37CB47(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_SimpleNPC_AnimGraphNode_TransitionResult_A3DDDAF84E59A352959207BE6856CD09(); // [0x25a7960] BlueprintEvent       
	// void InterfaceFixHookDirect(FVector Offset);                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void BlueprintInitializeAnimation();                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void InterfaceSimulateJump(float Speed);                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AnimNotify_PlayMontage();                                                                                           // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnComponentStart();                                                                                                 // [0x25a7960] Event|Public|BlueprintEvent 
	// void ClimbDash();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AnimNotify_OnCollisionAnimBegin();                                                                                  // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_OnCollisionAnimEnd();                                                                                    // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_ABP_SimpleNPC(int32_t EntryPoint);                                                                 // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/NPC/MaleM/BPData/Simple_ABP/ABP_NH_MaleM_Base_Simple.ABP_NH_MaleM_Base_Simple_C
/// Size: 0x0000 (0 bytes) (0x001579 - 0x001579) align 16 pad: 0x0000
class UABP_NH_MaleM_Base_Simple_C : public UABP_SimpleNPC_C
{ 
public:
};

/// Class /Game/Aki/Character/NPC/FemaleM/BPData/Simple_ABP/ABP_NH_FemaleM_010_Simple.ABP_NH_FemaleM_010_Simple_C
/// Size: 0x0000 (0 bytes) (0x001579 - 0x001579) align 16 pad: 0x0000
class UABP_NH_FemaleM_010_Simple_C : public UABP_SimpleNPC_C
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/Render/Effect/Data/EffectModelBillboard.EffectModelBillboard_C
/// Size: 0x0014 (20 bytes) (0x000058 - 0x00006C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UEffectModelBillboard_C : public UEffectModelBase
{ 
public:
	bool                                               IsUpdateEveryFrame;                                         // 0x0058   (0x0001)  
	bool                                               IsFixSize;                                                  // 0x0059   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x005A   (0x0002)  MISSED
	float                                              ScaleSize;                                                  // 0x005C   (0x0004)  
	float                                              MaxDistance;                                                // 0x0060   (0x0004)  
	EBillboardMode                                     OrientAxis;                                                 // 0x0064   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0065   (0x0003)  MISSED
	float                                              MinSize;                                                    // 0x0068   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/NewWorld/TriggerItems/TsTriggerVolume.TsTriggerVolume_C
/// Size: 0x0140 (320 bytes) (0x0002B0 - 0x0003F0) align 8 pad: 0x0000
class ATsTriggerVolume_C : public AKuroEffectActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B8   (0x0008)  
	float                                              TriggerGroup;                                               // 0x02C0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x02C4   (0x0004)  MISSED
	class ABrush*                                      TriggerItem;                                                // 0x02C8   (0x0008)  
	float                                              TriggerId;                                                  // 0x02D0   (0x0004)  
	TEnumAsByte<ETriggerType>                          TriggerType;                                                // 0x02D4   (0x0001)  
	bool                                               IgnoreBullet;                                               // 0x02D5   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x02D6   (0x0002)  MISSED
	float                                              HitCd;                                                      // 0x02D8   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x02DC   (0x0004)  MISSED
	SDK_UNDEFINED(48,1162) /* TWeakObjectPtr<UEffectModelBase*> */ __um(HitEffectData);                            // 0x02E0   (0x0030)  
	FString                                            HitDataName;                                                // 0x0310   (0x0010)  
	SDK_UNDEFINED(48,1163) /* TWeakObjectPtr<UEffectModelBase*> */ __um(TriggerItemEffectData);                    // 0x0320   (0x0030)  
	int32_t                                            AreaID;                                                     // 0x0350   (0x0004)  
	bool                                               NotScale;                                                   // 0x0354   (0x0001)  
	bool                                               IsPlayer;                                                   // 0x0355   (0x0001)  
	bool                                               IsAutoTriggerEffect;                                        // 0x0356   (0x0001)  
	unsigned char                                      UnknownData03_6[0x1];                                       // 0x0357   (0x0001)  MISSED
	float                                              EffectCd;                                                   // 0x0358   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x035C   (0x0004)  MISSED
	TArray<int64_t>                                    BuffIds;                                                    // 0x0360   (0x0010)  
	bool                                               IsRemoveBuffIds;                                            // 0x0370   (0x0001)  
	unsigned char                                      UnknownData05_6[0x7];                                       // 0x0371   (0x0007)  MISSED
	TArray<int32_t>                                    PropsIds;                                                   // 0x0378   (0x0010)  
	int32_t                                            AddBuffType;                                                // 0x0388   (0x0004)  
	float                                              ToleranceDistance;                                          // 0x038C   (0x0004)  
	bool                                               isBlockCamera;                                              // 0x0390   (0x0001)  
	unsigned char                                      UnknownData06_6[0x7];                                       // 0x0391   (0x0007)  MISSED
	class UAkAudioEvent*                               EnterAkEvent;                                               // 0x0398   (0x0008)  
	class UAkAudioEvent*                               ExitAkEvent;                                                // 0x03A0   (0x0008)  
	FString                                            ConditionGroupId;                                           // 0x03A8   (0x0010)  
	FString                                            EventGroupId;                                               // 0x03B8   (0x0010)  
	FString                                            ExitEventGroupId;                                           // 0x03C8   (0x0010)  
	bool                                               IsChangeFootStep;                                           // 0x03D8   (0x0001)  
	unsigned char                                      UnknownData07_6[0x3];                                       // 0x03D9   (0x0003)  MISSED
	int32_t                                            FootStepMaterialId;                                         // 0x03DC   (0x0004)  
	TArray<class ABrush*>                              TriggerItems;                                               // 0x03E0   (0x0010)  
	// void TryReportSelfBuffDamageLog();                                                                                       // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void AddBuffInner(int64_t BuffID);                                                                                       // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x13db470] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsTriggerVolume(int32_t EntryPoint);                                                               // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Render/RuntimeBP/Effect/Spline/BP_Fx_BirdsFlySpline.BP_Fx_BirdsFlySpline_C
/// Size: 0x001C (28 bytes) (0x0002B0 - 0x0002CC) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class ABP_Fx_BirdsFlySpline_C : public AKuroEffectActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B0   (0x0008)  
	class USplineComponent*                            Spline;                                                     // 0x02B8   (0x0008)  
	class UEffectModelNiagara_C*                       EffectModelNiagara;                                         // 0x02C0   (0x0008)  
	int32_t                                            TsEffectComponent;                                          // 0x02C8   (0x0004)  
	// void IsEditor(bool& IsEditor);                                                                                           // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void StopEditor();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PlayEditor();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Reset();                                                                                                            // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Protected|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_Fx_BirdsFlySpline(int32_t EntryPoint);                                                          // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Scene/Assets/PCG/Effect/BP_EffectActorWaterFall_Medium.BP_EffectActorWaterFall_Medium_C
/// Size: 0x0090 (144 bytes) (0x0002B0 - 0x000340) align 8 pad: 0x0000
class ABP_EffectActorWaterFall_Medium_C : public AKuroEffectActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B8   (0x0008)  
	FSoftObjectPath                                    EffectData;                                                 // 0x02C0   (0x0020)  
	bool                                               DebugPrintOnConstruction;                                   // 0x02E0   (0x0001)  
	bool                                               EditorTickWithoutSelected;                                  // 0x02E1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x02E2   (0x0002)  MISSED
	int32_t                                            EffectComponent;                                            // 0x02E4   (0x0004)  
	TEnumAsByte<EEffectPlay>                           PlayType;                                                   // 0x02E8   (0x0001)  
	TEnumAsByte<EEffectType>                           EffectType;                                                 // 0x02E9   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x02EA   (0x0006)  MISSED
	SDK_UNDEFINED(80,1164) /* TMap<FName, FKuroCurveFloat> */ __um(Float_Parameters);                              // 0x02F0   (0x0050)  
	// void GetHandle(int32_t& Handle);                                                                                         // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void StopEffect();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PlayEffect();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Play(FString reason);                                                                                               // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool Stop(FString reason, bool Immediately);                                                                             // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void IsEditor(bool& IsEditor);                                                                                           // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void CalculateLifeTime();                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Refresh();                                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void SetHandle(int32_t Handle);                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EditorInit();                                                                                                       // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Protected|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void RemoveHandle();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_EffectActorWaterFall_Medium(int32_t EntryPoint);                                                // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Render/RuntimeBP/Scene/Light/BP_HaloPointLight.BP_HaloPointLight_C
/// Size: 0x0088 (136 bytes) (0x0002C0 - 0x000348) align 8 pad: 0x0000
class ABP_HaloPointLight_C : public APointLight
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02C0   (0x0008)  
	class UMaterialInstanceDynamic*                    DynamicMaterialInstance;                                    // 0x02C8   (0x0008)  
	bool                                               Enable;                                                     // 0x02D0   (0x0001)  
	bool                                               bAcceptGI;                                                  // 0x02D1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x02D2   (0x0002)  MISSED
	float                                              SizeScale;                                                  // 0x02D4   (0x0004)  
	float                                              IntensityScale;                                             // 0x02D8   (0x0004)  
	float                                              LightExponent;                                              // 0x02DC   (0x0004)  
	float                                              FadeStartRadius;                                            // 0x02E0   (0x0004)  
	float                                              FadeEndRadius;                                              // 0x02E4   (0x0004)  
	class UKuroHaloComponent*                          HaloComponent;                                              // 0x02E8   (0x0008)  
	float                                              DepthFadeDistance;                                          // 0x02F0   (0x0004)  
	float                                              AspectRatio;                                                // 0x02F4   (0x0004)  
	TEnumAsByte<E_BillboardMode>                       FaceCameraMode;                                             // 0x02F8   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x02F9   (0x0007)  MISSED
	class UStaticMesh*                                 HaloMesh;                                                   // 0x0300   (0x0008)  
	float                                              MinDrawDistance;                                            // 0x0308   (0x0004)  
	float                                              MaxDrawDistance;                                            // 0x030C   (0x0004)  
	float                                              MinDrawRange;                                               // 0x0310   (0x0004)  
	float                                              MaxDrawRange;                                               // 0x0314   (0x0004)  
	float                                              UseShapeTex;                                                // 0x0318   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x031C   (0x0004)  MISSED
	class UTexture2D*                                  VolumeTex;                                                  // 0x0320   (0x0008)  
	float                                              PointLinghtIntenty;                                         // 0x0328   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x032C   (0x0004)  MISSED
	class UPD_HaloPointLightConfig_C*                  HaloPointConfig;                                            // 0x0330   (0x0008)  
	KuroFeatureLevel                                   CurrentFeatureLevel;                                        // 0x0338   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x0339   (0x0007)  MISSED
	class UMaterialInterface*                          HaloMaterial;                                               // 0x0340   (0x0008)  
	// void GetHaloDrawParameters(float& MinDrawDistance, float& MaxDrawDistance, float& MinDrawRange, float& MaxDrawRange);    // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void UpdateHaloParameter(bool UpdateComponent);                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void HaloPointParaUpdate();                                                                                              // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_HaloPointLight(int32_t EntryPoint);                                                             // [0x25a7960] Final                
};

/// Class /Game/Aki/Scene/Assets/PCG/Effect/BP_EffectActorWaterFall_Low.BP_EffectActorWaterFall_Low_C
/// Size: 0x0090 (144 bytes) (0x0002B0 - 0x000340) align 8 pad: 0x0000
class ABP_EffectActorWaterFall_Low_C : public AKuroEffectActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B8   (0x0008)  
	FSoftObjectPath                                    EffectData;                                                 // 0x02C0   (0x0020)  
	bool                                               DebugPrintOnConstruction;                                   // 0x02E0   (0x0001)  
	bool                                               EditorTickWithoutSelected;                                  // 0x02E1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x02E2   (0x0002)  MISSED
	int32_t                                            EffectComponent;                                            // 0x02E4   (0x0004)  
	TEnumAsByte<EEffectPlay>                           PlayType;                                                   // 0x02E8   (0x0001)  
	TEnumAsByte<EEffectType>                           EffectType;                                                 // 0x02E9   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x02EA   (0x0006)  MISSED
	SDK_UNDEFINED(80,1165) /* TMap<FName, FKuroCurveFloat> */ __um(Float_Parameters);                              // 0x02F0   (0x0050)  
	// void GetHandle(int32_t& Handle);                                                                                         // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void StopEffect();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PlayEffect();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Play(FString reason);                                                                                               // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool Stop(FString reason, bool Immediately);                                                                             // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void IsEditor(bool& IsEditor);                                                                                           // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void CalculateLifeTime();                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Refresh();                                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void SetHandle(int32_t Handle);                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EditorInit();                                                                                                       // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Protected|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void RemoveHandle();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_EffectActorWaterFall_Low(int32_t EntryPoint);                                                   // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/NPC/Common/ABP_BaseNPC.ABP_BaseNPC_C
/// Size: 0x19FE (6654 bytes) (0x000460 - 0x001E5E) align 16 pad: 0x000E
#pragma pack(push, 0x1)
class UABP_BaseNPC_C : public UKuroAnimInstance
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0460   (0x0008)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0468   (0x0038)  
	FAnimNode_Slot                                     AnimGraphNode_Slot;                                         // 0x04A0   (0x0060)  
	FAnimNode_Inertialization                          AnimGraphNode_Inertialization;                              // 0x0500   (0x0070)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult;                             // 0x0570   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult0;                            // 0x0598   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1;                            // 0x05C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult2;                            // 0x05E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult3;                            // 0x0610   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult4;                            // 0x0638   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer;                               // 0x0660   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult;                                  // 0x06F0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer5;                              // 0x0728   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult6;                                 // 0x07B8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer7;                              // 0x07F0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult8;                                 // 0x0880   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer;                             // 0x08B8   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult9;                                 // 0x09B0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult10;                           // 0x09E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult11;                           // 0x0A10   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult12;                           // 0x0A38   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult13;                           // 0x0A60   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult14;                           // 0x0A88   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult15;                           // 0x0AB0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult16;                           // 0x0AD8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult17;                           // 0x0B00   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer18;                             // 0x0B28   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult19;                                // 0x0BB8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer20;                             // 0x0BF0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult21;                                // 0x0C80   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer22;                             // 0x0CB8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult23;                                // 0x0D48   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer24;                             // 0x0D80   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult25;                                // 0x0E10   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine;                                 // 0x0E48   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult26;                                // 0x0F80   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer27;                           // 0x0FB8   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult28;                                // 0x10B0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine29;                               // 0x10E8   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult30;                                // 0x1220   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine31;                               // 0x1258   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult32;                                // 0x1390   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine33;                               // 0x13C8   (0x0138)  
	FAnimNode_Slot                                     AnimGraphNode_Slot34;                                       // 0x1500   (0x0060)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive;                                // 0x1560   (0x00D0)  
	FAnimNode_Slot                                     AnimGraphNode_Slot35;                                       // 0x1630   (0x0060)  
	FAnimNode_ApplyAdditive                            AnimGraphNode_ApplyAdditive36;                              // 0x1690   (0x00D0)  
	FAnimNode_Root                                     AnimGraphNode_Root37;                                       // 0x1760   (0x0038)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer;                              // 0x1798   (0x00C0)  
	FAnimNode_Slot                                     AnimGraphNode_Slot38;                                       // 0x1858   (0x0060)  
	FAnimNode_SightLock                                AnimGraphNode_SightLock;                                    // 0x18B8   (0x01B8)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace;                        // 0x1A70   (0x0020)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace;                        // 0x1A90   (0x0020)  
	FAnimNode_RBF                                      AnimGraphNode_RBF;                                          // 0x1AB0   (0x0150)  
	FAnimNode_Slot                                     AnimGraphNode_Slot39;                                       // 0x1C00   (0x0060)  
	FAnimNode_CombineCurves                            AnimGraphNode_CombineCurves;                                // 0x1C60   (0x0060)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer40;                             // 0x1CC0   (0x0090)  
	FAnimNode_EyeBlink                                 AnimGraphNode_EyeBlink;                                     // 0x1D50   (0x0088)  
	class ABP_BaseNPC_C*                               __r_;                                                       // 0x1DD8   (0x0008)  
	FVector                                            _y_R__;                                                     // 0x1DE0   (0x000C)  
	float                                              __;                                                         // 0x1DEC   (0x0004)  
	bool                                               _f_T_g_;                                                    // 0x1DF0   (0x0001)  
	bool                                               ifPlayIdleAction;                                           // 0x1DF1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x1DF2   (0x0006)  MISSED
	TArray<class UAnimMontage*>                        IdleMontageArray;                                           // 0x1DF8   (0x0010)  
	class USkeletalMeshComponent*                      __r_M;                                                      // 0x1E08   (0x0008)  
	bool                                               _f_T_S;                                                     // 0x1E10   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x1E11   (0x0003)  MISSED
	float                                              _el___;                                                     // 0x1E14   (0x0004)  
	float                                              _N;                                                         // 0x1E18   (0x0004)  
	FVector                                            SightDirect;                                                // 0x1E1C   (0x000C)  
	bool                                               IsBeingImpacted;                                            // 0x1E28   (0x0001)  
	bool                                               IsBeingAttacked;                                            // 0x1E29   (0x0001)  
	SightLockMode                                      SightLockMode;                                              // 0x1E2A   (0x0001)  
	unsigned char                                      UnknownData02_6[0x1];                                       // 0x1E2B   (0x0001)  MISSED
	float                                              p___;                                                       // 0x1E2C   (0x0004)  
	bool                                               IsTurnLeft;                                                 // 0x1E30   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x1E31   (0x0003)  MISSED
	FRotator                                           __r_41;                                                     // 0x1E34   (0x000C)  
	int32_t                                            NpcEntityId;                                                // 0x1E40   (0x0004)  
	float                                              CollisionStrength;                                          // 0x1E44   (0x0004)  
	float                                              CollisionDirection;                                         // 0x1E48   (0x0004)  
	float                                              RandomEpresionEndTime;                                      // 0x1E4C   (0x0004)  
	float                                              _w_w_R;                                                     // 0x1E50   (0x0004)  
	float                                              dkn__w_w_;                                                  // 0x1E54   (0x0004)  
	float                                              ExpresionAlpha;                                             // 0x1E58   (0x0004)  
	bool                                               _w_;                                                        // 0x1E5C   (0x0001)  
	bool                                               C;                                                          // 0x1E5D   (0x0001)  
	// void InterfaceJumpPressed(float& Speed);                                                                                 // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _W_(FPoseLink& _W_);                                                                                                // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _f_e();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void HasInputRotate(bool& Output_Get);                                                                                   // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _f_TA(bool& Result);                                                                                                // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _f_e__();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnCompleted_712E5DC7440577B25761868E65201677(FName NotifyName);                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_712E5DC7440577B25761868E65201677(FName NotifyName);                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_712E5DC7440577B25761868E65201677(FName NotifyName);                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnNotifyBegin_712E5DC7440577B25761868E65201677(FName NotifyName);                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnNotifyEnd_712E5DC7440577B25761868E65201677(FName NotifyName);                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseNPC_AnimGraphNode_TransitionResult_2C6793D9468B9D59C335F9B7E06CA14C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseNPC_AnimGraphNode_EyeBlink_C9EB645045B700FB8F19CB8E843E8878();  // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseNPC_AnimGraphNode_TransitionResult_C0B8FDED431127A2A5FDC1A72CAE78C2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseNPC_AnimGraphNode_TransitionResult_0965F59C484C38E57DB2959A3E4DB3D7(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseNPC_AnimGraphNode_TransitionResult_6917C8F64FE3C0CDC8A3E6A7ED7D503C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseNPC_AnimGraphNode_TransitionResult_2178FF404602F078D81CDF8AB475F43F(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseNPC_AnimGraphNode_TransitionResult_489651114DF56F56400B5085D579A175(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseNPC_AnimGraphNode_TransitionResult_FDBBD5E7477AD7967C489DA71407AA47(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseNPC_AnimGraphNode_TransitionResult_29ED077D4A98A4CA0111C685D4416D03(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseNPC_AnimGraphNode_TransitionResult_9C70E8254D0EAC25ED9262AE4741EA01(); // [0x25a7960] BlueprintEvent       
	// void BlueprintInitializeAnimation();                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void InterfaceManipulateInteractDirection(float __);                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AnimNotify_PlayMontage();                                                                                           // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnComponentStart();                                                                                                 // [0x25a7960] Event|Public|BlueprintEvent 
	// void InterfaceFixHookDirect(FVector Offset);                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void InterfaceSimulateJump(float Speed);                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ClimbDash();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AnimNotify_OnCollisionAnimEnd();                                                                                    // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_OnCollisionAnimBegin();                                                                                  // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_OnHitAnimBegin();                                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_OnHitAnimEnd();                                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_ABP_BaseNPC(int32_t EntryPoint);                                                                   // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/NPC/FemaleM/BPData/ABP_NH_FemaleM_010.ABP_NH_FemaleM_010_C
/// Size: 0x0000 (0 bytes) (0x001E5E - 0x001E5E) align 16 pad: 0x0000
class UABP_NH_FemaleM_010_C : public UABP_BaseNPC_C
{ 
public:
};

/// Class /Game/Aki/Character/NPC/FemaleS/BPData/Simple_ABP/ABP_NH_FemaleS_BaseGirl_Simple.ABP_NH_FemaleS_BaseGirl_Simple_C
/// Size: 0x0000 (0 bytes) (0x001579 - 0x001579) align 16 pad: 0x0000
class UABP_NH_FemaleS_BaseGirl_Simple_C : public UABP_SimpleNPC_C
{ 
public:
};

/// Class /Game/Aki/Scene/Assets/PCG/Effect/BP_EffectActorWaterFall_High.BP_EffectActorWaterFall_High_C
/// Size: 0x0090 (144 bytes) (0x0002B0 - 0x000340) align 8 pad: 0x0000
class ABP_EffectActorWaterFall_High_C : public AKuroEffectActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02B8   (0x0008)  
	FSoftObjectPath                                    EffectData;                                                 // 0x02C0   (0x0020)  
	bool                                               DebugPrintOnConstruction;                                   // 0x02E0   (0x0001)  
	bool                                               EditorTickWithoutSelected;                                  // 0x02E1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x02E2   (0x0002)  MISSED
	int32_t                                            EffectComponent;                                            // 0x02E4   (0x0004)  
	TEnumAsByte<EEffectPlay>                           PlayType;                                                   // 0x02E8   (0x0001)  
	TEnumAsByte<EEffectType>                           EffectType;                                                 // 0x02E9   (0x0001)  
	unsigned char                                      UnknownData01_6[0x6];                                       // 0x02EA   (0x0006)  MISSED
	SDK_UNDEFINED(80,1166) /* TMap<FName, FKuroCurveFloat> */ __um(Float_Parameters);                              // 0x02F0   (0x0050)  
	// void GetHandle(int32_t& Handle);                                                                                         // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void StopEffect();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void PlayEffect();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Play(FString reason);                                                                                               // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool Stop(FString reason, bool Immediately);                                                                             // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void IsEditor(bool& IsEditor);                                                                                           // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void CalculateLifeTime();                                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Refresh();                                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void SetHandle(int32_t Handle);                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EditorInit();                                                                                                       // [0x25a7960] Event|Public|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveEndPlay(TEnumAsByte<EEndPlayReason> EndPlayReason);                                                          // [0x25a7960] Event|Protected|BlueprintEvent 
	// void EditorTick(float DeltaSeconds);                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void RemoveHandle();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_BP_EffectActorWaterFall_High(int32_t EntryPoint);                                                  // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Render/RuntimeBP/Scene/Light/BP_VolumetricSphereLightSuperFar.BP_VolumetricSphereLightSuperFar_C
/// Size: 0x0098 (152 bytes) (0x0002B8 - 0x000350) align 8 pad: 0x0000
class ABP_VolumetricSphereLightSuperFar_C : public AKuroEditorTickActor
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x02B8   (0x0008)  
	class UStaticMeshComponent*                        StaticMeshComponent;                                        // 0x02C0   (0x0008)  
	class USceneComponent*                             DefaultSceneRoot;                                           // 0x02C8   (0x0008)  
	class UStaticMesh*                                 SphereLightStaticMesh;                                      // 0x02D0   (0x0008)  
	class UMaterialInstance*                           SphereLightMat;                                             // 0x02D8   (0x0008)  
	bool                                               IsReverseCulling;                                           // 0x02E0   (0x0001)  
	bool                                               IsWholeDay;                                                 // 0x02E1   (0x0001)  
	bool                                               OutDistanceFade;                                            // 0x02E2   (0x0001)  
	bool                                               ApplyFog;                                                   // 0x02E3   (0x0001)  
	float                                              NearDestroyDistance;                                        // 0x02E4   (0x0004)  
	float                                              FogInt;                                                     // 0x02E8   (0x0004)  
	float                                              FogPower;                                                   // 0x02EC   (0x0004)  
	float                                              SkyLightInt;                                                // 0x02F0   (0x0004)  
	float                                              SkyLightOffset;                                             // 0x02F4   (0x0004)  
	FLinearColor                                       InsideColor;                                                // 0x02F8   (0x0010)  
	FLinearColor                                       OutSideColor;                                               // 0x0308   (0x0010)  
	float                                              SphereRadius;                                               // 0x0318   (0x0004)  
	float                                              LightStart;                                                 // 0x031C   (0x0004)  
	float                                              NearFadeStart;                                              // 0x0320   (0x0004)  
	float                                              FullIntLength;                                              // 0x0324   (0x0004)  
	float                                              FarFadeLength;                                              // 0x0328   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x032C   (0x0004)  MISSED
	class UMaterialInstanceDynamic*                    MaterialInstanceDynamic;                                    // 0x0330   (0x0008)  
	class UMaterialInstance*                           SphereLightMatWithOutDF;                                    // 0x0338   (0x0008)  
	class UMaterialInstance*                           SphereLightMatWithOutFog;                                   // 0x0340   (0x0008)  
	class UMaterialInstance*                           SphereLightMatWithOutDFWithOutFog;                          // 0x0348   (0x0008)  
	// void UpdateVolumetricSphereLight();                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UserConstructionScript();                                                                                           // [0x25a7960] Event|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveBeginPlay();                                                                                                 // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ReceiveTick(float DeltaSeconds);                                                                                    // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_BP_VolumetricSphereLightSuperFar(int32_t EntryPoint);                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_34A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_34A_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_34A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_34A_Cdup_7 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/TPrefab_SM_Gat_34A.TPrefab_SM_Gat_34A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_34A_Cdup_8 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Character/Monster/Summon/EKakaluoMd100011_Shadow/BP_KakaluoShadow.BP_KakaluoShadow_C
/// Size: 0x0000 (0 bytes) (0x000780 - 0x000780) align 16 pad: 0x0000
class ABP_KakaluoShadow_C : public ABP_BaseVision_C
{ 
public:
};

/// Class /Game/Aki/Character/Item/WuYinQu/Item_ShengXian.Item_ShengXian_C
/// Size: 0x0000 (0 bytes) (0x0002DC - 0x0002DC) align 8 pad: 0x0000
class AItem_ShengXian_C : public ABP_BaseItem_C
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Cook/TPrefab_SM_Pro_Box_42AS_Composite.TPrefab_SM_Pro_Box_42AS_Composite_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_42AS_Composite_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Huabiao/TPrefab_SM_Pro_Tow_02A.TPrefab_SM_Pro_Tow_02A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Tow_02A_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/BP_BaiLian_Soul.BP_BaiLian_Soul_C
/// Size: 0x0013 (19 bytes) (0x000771 - 0x000784) align 16 pad: 0x0004
#pragma pack(push, 0x1)
class ABP_BaiLian_Soul_C : public ATsBaseCharacter_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0771   (0x0007)  MISSED
	class ATsBaseCharacter_C*                          _Y;                                                         // 0x0778   (0x0008)  
	float                                              Delta_Seconds;                                              // 0x0780   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Vision/VM_Boss/VM_MB1Mingzhongzhigui/Md00101/BP_Vision_MB1Mingzhongzhigui.BP_Vision_MB1Mingzhongzhigui_C
/// Size: 0x0058 (88 bytes) (0x000780 - 0x0007D8) align 16 pad: 0x0008
#pragma pack(push, 0x1)
class ABP_Vision_MB1Mingzhongzhigui_C : public ABP_BaseVision_C
{ 
public:
	class UCapsuleComponent*                           BodyCylinder;                                               // 0x0780   (0x0008)  
	class UKuroAdjustableBoxComponent*                 KuroAdjustableBox;                                          // 0x0788   (0x0008)  
	class UBoxComponent*                               Body;                                                       // 0x0790   (0x0008)  
	class UCapsuleComponent*                           Clock;                                                      // 0x0798   (0x0008)  
	class UCapsuleComponent*                           Trail02;                                                    // 0x07A0   (0x0008)  
	class UCapsuleComponent*                           Trail01;                                                    // 0x07A8   (0x0008)  
	class UCapsuleComponent*                           Head;                                                       // 0x07B0   (0x0008)  
	class UCapsuleComponent*                           Leg_FR;                                                     // 0x07B8   (0x0008)  
	class UCapsuleComponent*                           Leg_BR;                                                     // 0x07C0   (0x0008)  
	class UCapsuleComponent*                           Leg_BL;                                                     // 0x07C8   (0x0008)  
	class UCapsuleComponent*                           Leg_FL;                                                     // 0x07D0   (0x0008)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Vision/VM_Lord/VM_ML1Linren/Md00301/BP_Vision_ML1Linren.BP_Vision_ML1Linren_C
/// Size: 0x0000 (0 bytes) (0x000780 - 0x000780) align 16 pad: 0x0000
class ABP_Vision_ML1Linren_C : public ABP_BaseVision_C
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/YLYX/TPrefab_SM_QiShi_HaiBao.TPrefab_SM_QiShi_HaiBao_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_QiShi_HaiBao_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/TPrefab_SM_Gat_38A.TPrefab_SM_Gat_38A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_38A_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/TPrefab_SM_Gat_18A.TPrefab_SM_Gat_18A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_18A_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/TPrefab_SM_Gat_27A.TPrefab_SM_Gat_27A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_27A_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/TPrefab_SM_Gat_21A.TPrefab_SM_Gat_21A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_21A_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/TPrefab_SM_Gat_01A.TPrefab_SM_Gat_01A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_01A_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Baoxiang/TPrefab_SM_Pro_Box_01_CBT3.TPrefab_SM_Pro_Box_01_CBT3_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_01_CBT3_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/Input/BP_Input_Kakaluo.BP_Input_Kakaluo_C
/// Size: 0x0000 (0 bytes) (0x00021D - 0x00021D) align 8 pad: 0x0000
class UBP_Input_Kakaluo_C : public UBP_InputComponent_C
{ 
public:
	// FSInputCommand __a_2(float Time);                                                                                        // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand __a_1(float Time);                                                                                        // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _Y_b(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _b__1(float Time);                                                                                        // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _e_Q(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Baoxiang/TPrefab_SM_Pro_HuanXiangBox_03_CBT3.TPrefab_SM_Pro_HuanXiangBox_03_CBT3_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_HuanXiangBox_03_CBT3_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Baoxiang/TPrefab_SM_Pro_Box_02_CBT3.TPrefab_SM_Pro_Box_02_CBT3_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_02_CBT3_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/ABP_NewAi.ABP_NewAi_2_C
/// Size: 0x1840 (6208 bytes) (0x000378 - 0x001BB8) align 16 pad: 0x0008
#pragma pack(push, 0x1)
class UABP_NewAi_2_C : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0378   (0x0008)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0380   (0x0008)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0388   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult;                             // 0x03C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult0;                            // 0x03E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1;                            // 0x0410   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult2;                            // 0x0438   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult3;                            // 0x0460   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult4;                            // 0x0488   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult5;                            // 0x04B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult6;                            // 0x04D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult7;                            // 0x0500   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult8;                            // 0x0528   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer;                               // 0x0550   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult;                                  // 0x05E0   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose;                                // 0x0618   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult9;                                 // 0x0648   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer10;                             // 0x0680   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult11;                                // 0x0710   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer12;                             // 0x0748   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult13;                                // 0x07D8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine;                                 // 0x0810   (0x0138)  
	FAnimNode_Slot                                     AnimGraphNode_Slot;                                         // 0x0948   (0x0060)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer;                             // 0x09A8   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult14;                                // 0x0AA0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine15;                               // 0x0AD8   (0x0138)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose;                               // 0x0C10   (0x01B0)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose16;                             // 0x0DC0   (0x01B0)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult17;                           // 0x0F70   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult18;                           // 0x0F98   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult19;                           // 0x0FC0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult20;                           // 0x0FE8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult21;                           // 0x1010   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult22;                           // 0x1038   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult23;                           // 0x1060   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult24;                                // 0x1088   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer25;                             // 0x10C0   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer26;                             // 0x1150   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer27;                             // 0x11E0   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer28;                             // 0x1270   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer29;                             // 0x1300   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer30;                             // 0x1390   (0x0090)  
	FAnimNode_BlendListByEnum                          AnimGraphNode_BlendListByEnum;                              // 0x1420   (0x00C0)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult31;                                // 0x14E0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer32;                             // 0x1518   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer33;                             // 0x15A8   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer34;                             // 0x1638   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer35;                             // 0x16C8   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer36;                             // 0x1758   (0x0090)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer37;                             // 0x17E8   (0x0090)  
	FAnimNode_BlendListByEnum                          AnimGraphNode_BlendListByEnum38;                            // 0x1878   (0x00C0)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult39;                                // 0x1938   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose40;                              // 0x1970   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult41;                                // 0x19A0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine42;                               // 0x19D8   (0x0138)  
	class ATsBaseCharacter_C*                          As_Base_Character;                                          // 0x1B10   (0x0008)  
	bool                                               _f_Tck;                                                     // 0x1B18   (0x0001)  
	TEnumAsByte<EMovementDirection>                    _y_R;                                                       // 0x1B19   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x1B1A   (0x0002)  MISSED
	float                                              null;                                                       // 0x1B1C   (0x0004)  
	bool                                               _c6e0R;                                                     // 0x1B20   (0x0001)  
	bool                                               _f_T_g_;                                                    // 0x1B21   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x1B22   (0x0002)  MISSED
	float                                              Delta_Time_X;                                               // 0x1B24   (0x0004)  
	bool                                               _f_T__;                                                     // 0x1B28   (0x0001)  
	bool                                               _o;                                                         // 0x1B29   (0x0001)  
	bool                                               _d_e___;                                                    // 0x1B2A   (0x0001)  
	TEnumAsByte<EWalkingPosture>                       L_p_;                                                       // 0x1B2B   (0x0001)  
	bool                                               _d_e_Q;                                                     // 0x1B2C   (0x0001)  
	bool                                               _S_N;                                                       // 0x1B2D   (0x0001)  
	unsigned char                                      UnknownData03_6[0x2];                                       // 0x1B2E   (0x0002)  MISSED
	FVector                                            _S_Q;                                                       // 0x1B30   (0x000C)  
	FVector                                            _S_Q43;                                                     // 0x1B3C   (0x000C)  
	TEnumAsByte<ECharState>                            CharMove;                                                   // 0x1B48   (0x0001)  
	TEnumAsByte<ECharParentMoveState>                  CharPosition;                                               // 0x1B49   (0x0001)  
	unsigned char                                      UnknownData04_6[0x2];                                       // 0x1B4A   (0x0002)  MISSED
	float                                              _____;                                                      // 0x1B4C   (0x0004)  
	float                                              ____;                                                       // 0x1B50   (0x0004)  
	float                                              null44;                                                     // 0x1B54   (0x0004)  
	FGameplayTagContainer                              CachedTagContainer;                                         // 0x1B58   (0x0020)  
	float                                              BeHitTime;                                                  // 0x1B78   (0x0004)  
	float                                              ToughDecreaseValue;                                         // 0x1B7C   (0x0004)  
	FRotator                                           BeHitRotation;                                              // 0x1B80   (0x000C)  
	FVector                                            BeHitLocation;                                              // 0x1B8C   (0x000C)  
	TArray<FName>                                      BeHitBones;                                                 // 0x1B98   (0x0010)  
	TEnumAsByte<EHitAnim>                              BeHitAnim;                                                  // 0x1BA8   (0x0001)  
	unsigned char                                      UnknownData05_6[0x7];                                       // 0x1BA9   (0x0007)  MISSED
	class UBP_ABPLogicParams_C*                        T;                                                          // 0x1BB0   (0x0008)  
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _f_e_S_();                                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void __X_(FGameplayTagContainer& TargetContainer);                                                                       // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void _f_T_(FGameplayTag Tag, bool& NewParam);                                                                            // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void __n___();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _f_eF();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_AAE2502747E2B1A137000BBFA2632FD2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_D75B751847C7F838A764C9BB7ED8987A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_5109C5374ACBF4850EB9EC9392CEE44C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_59E21BAB46258AF68F61C7B2B714A299(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_315277D04E31FC3413C943BAEC150DE7(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_C888919A452AD6A98B14A984D38E9F46(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_B8286E2E465A3DF30259D988F64AF49A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_62FA2C6A4465F4E2DB6D97BE8276F9D7(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_85DA929B4EAE46928A1AEC8ED0062F56(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_BlendSpacePlayer_07C754464E773916591641823F847E83(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_6029CBE2494E5C2D118E05A0FEB8C1B1(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_EF06E10E47AD4505822B499B5DF19C50(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_B52591554E22607A9D4988BF036DE8C5(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_C9B74CC245ED9D008365A8A7B24B4992(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_NewAi_2_AnimGraphNode_TransitionResult_2181C65A4452E26DE71F7E870FA9E1BE(); // [0x25a7960] BlueprintEvent       
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void BlueprintInitializeAnimation();                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void A();                                                                                                                // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_born();                                                                                                  // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_ABP_NewAi(int32_t EntryPoint);                                                                     // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Data/Fight/AssestStruct/FK_Shake_AssestData.FK_Shake_AssestData_C
/// Size: 0x0034 (52 bytes) (0x000038 - 0x00006C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UFK_Shake_AssestData_C : public UPrimaryDataAsset
{ 
public:
	FSkeletonGroup                                     ShakeBonesData;                                             // 0x0038   (0x0020)  
	class UCurveFloat*                                 ShakeCurve;                                                 // 0x0058   (0x0008)  
	float                                              ShakeTime;                                                  // 0x0060   (0x0004)  
	float                                              ShakeAmplitude;                                             // 0x0064   (0x0004)  
	int32_t                                            ShakeRange;                                                 // 0x0068   (0x0004)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/FemaleS/Jueyuan/Abilities/Input/BP_IC_Jueyuan.BP_IC_Jueyuan_C
/// Size: 0x0007 (7 bytes) (0x00021D - 0x000224) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UBP_IC_Jueyuan_C : public UBP_InputComponent_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x3];                                       // 0x021D   (0x0003)  MISSED
	float                                              _Y_b;                                                       // 0x0220   (0x0004)  
	// FSInputCommand _e_Q(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _Y_b(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _b__1(float Time);                                                                                        // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/NPC/Animal/BP_BaseAnimal.BP_BaseAnimal_C
/// Size: 0x000F (15 bytes) (0x000771 - 0x000780) align 16 pad: 0x0000
class ABP_BaseAnimal_C : public ATsBaseCharacter_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x7];                                       // 0x0771   (0x0007)  MISSED
	class UCurveFloat*                                 TurnSpeedCurve;                                             // 0x0778   (0x0008)  
};

/// Class /Game/Aki/Character/NPC/Animal/ABP_BaseAnimal.ABP_BaseAnimal_C
/// Size: 0x32CB (13003 bytes) (0x000460 - 0x00372B) align 16 pad: 0x000B
#pragma pack(push, 0x1)
class UABP_BaseAnimal_C : public UKuroAnimInstance
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0460   (0x0008)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0468   (0x0038)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose;                              // 0x04A0   (0x0138)  
	FAnimNode_Root                                     AnimGraphNode_Root0;                                        // 0x05D8   (0x0038)  
	FAnimNode_SightLock                                AnimGraphNode_SightLock;                                    // 0x0610   (0x01B8)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace;                        // 0x07C8   (0x0020)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace;                        // 0x07E8   (0x0020)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose1;                             // 0x0808   (0x0138)  
	FAnimNode_Root                                     AnimGraphNode_Root2;                                        // 0x0940   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult;                             // 0x0978   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult3;                            // 0x09A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult4;                            // 0x09C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult5;                            // 0x09F0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult6;                            // 0x0A18   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult7;                            // 0x0A40   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult8;                            // 0x0A68   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult9;                            // 0x0A90   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer;                               // 0x0AB8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult;                                  // 0x0B48   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer10;                             // 0x0B80   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult11;                                // 0x0C10   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer12;                             // 0x0C48   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult13;                                // 0x0CD8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer14;                             // 0x0D10   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult15;                                // 0x0DA0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer16;                             // 0x0DD8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult17;                                // 0x0E68   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer18;                             // 0x0EA0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult19;                                // 0x0F30   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer20;                             // 0x0F68   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult21;                                // 0x0FF8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine;                                 // 0x1030   (0x0138)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult22;                           // 0x1168   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult23;                           // 0x1190   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult24;                           // 0x11B8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult25;                           // 0x11E0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult26;                           // 0x1208   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult27;                           // 0x1230   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult28;                           // 0x1258   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult29;                           // 0x1280   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult30;                           // 0x12A8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult31;                           // 0x12D0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult32;                           // 0x12F8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult33;                           // 0x1320   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult34;                           // 0x1348   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult35;                           // 0x1370   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult36;                           // 0x1398   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult37;                           // 0x13C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult38;                           // 0x13E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult39;                           // 0x1410   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult40;                           // 0x1438   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer41;                             // 0x1460   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult42;                                // 0x14F0   (0x0038)  
	FAnimNode_SequenceEvaluator                        AnimGraphNode_SequenceEvaluator;                            // 0x1528   (0x0060)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult43;                                // 0x1588   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer44;                             // 0x15C0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult45;                                // 0x1650   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer46;                             // 0x1688   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult47;                                // 0x1718   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer48;                             // 0x1750   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult49;                                // 0x17E0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer50;                             // 0x1818   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult51;                                // 0x18A8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer52;                             // 0x18E0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult53;                                // 0x1970   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine54;                               // 0x19A8   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult55;                                // 0x1AE0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult56;                           // 0x1B18   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult57;                           // 0x1B40   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult58;                           // 0x1B68   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult59;                           // 0x1B90   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult60;                           // 0x1BB8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult61;                           // 0x1BE0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult62;                           // 0x1C08   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult63;                           // 0x1C30   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult64;                           // 0x1C58   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult65;                           // 0x1C80   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer66;                             // 0x1CA8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult67;                                // 0x1D38   (0x0038)  
	FAnimNode_SequenceEvaluator                        AnimGraphNode_SequenceEvaluator68;                          // 0x1D70   (0x0060)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult69;                                // 0x1DD0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer70;                             // 0x1E08   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult71;                                // 0x1E98   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer72;                             // 0x1ED0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult73;                                // 0x1F60   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer74;                             // 0x1F98   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult75;                                // 0x2028   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer76;                             // 0x2060   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult77;                                // 0x20F0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer78;                             // 0x2128   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult79;                                // 0x21B8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine80;                               // 0x21F0   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult81;                                // 0x2328   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer82;                             // 0x2360   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult83;                                // 0x23F0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer84;                             // 0x2428   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult85;                                // 0x24B8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer86;                             // 0x24F0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult87;                                // 0x2580   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose;                                // 0x25B8   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult88;                                // 0x25E8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine89;                               // 0x2620   (0x0138)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x2758   (0x0008)  MISSED
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose;                               // 0x2760   (0x01B0)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult90;                           // 0x2910   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult91;                           // 0x2938   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult92;                           // 0x2960   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult93;                           // 0x2988   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult94;                           // 0x29B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult95;                           // 0x29D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult96;                           // 0x2A00   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult97;                           // 0x2A28   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult98;                           // 0x2A50   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult99;                           // 0x2A78   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult100;                          // 0x2AA0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult101;                          // 0x2AC8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult102;                          // 0x2AF0   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer103;                            // 0x2B18   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult104;                               // 0x2BA8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer105;                            // 0x2BE0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult106;                               // 0x2C70   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult107;                          // 0x2CA8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult108;                          // 0x2CD0   (0x0028)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer;                             // 0x2CF8   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult109;                               // 0x2DF0   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult110;                          // 0x2E28   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer111;                            // 0x2E50   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult112;                               // 0x2EE0   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose113;                             // 0x2F18   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult114;                               // 0x2F48   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine115;                              // 0x2F80   (0x0138)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x30B8   (0x0008)  MISSED
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose116;                            // 0x30C0   (0x01B0)  
	FAnimNode_Slot                                     AnimGraphNode_Slot;                                         // 0x3270   (0x0060)  
	FAnimNode_Inertialization                          AnimGraphNode_Inertialization;                              // 0x32D0   (0x0070)  
	FAnimNode_Root                                     AnimGraphNode_Root117;                                      // 0x3340   (0x0038)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer;                              // 0x3378   (0x00C0)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer118;                           // 0x3438   (0x00C0)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer119;                           // 0x34F8   (0x00C0)  
	TArray<class UAnimSequence*>                       ___gh_;                                                     // 0x35B8   (0x0010)  
	class ATsBaseCharacter_C*                          __r_;                                                       // 0x35C8   (0x0008)  
	class USkeletalMeshComponent*                      __r_Q;                                                      // 0x35D0   (0x0008)  
	TEnumAsByte<EAnimalEcologicalState>                _u__h_;                                                     // 0x35D8   (0x0001)  
	bool                                               _r___g;                                                     // 0x35D9   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x35DA   (0x0002)  MISSED
	int32_t                                            IdleActionIndex;                                            // 0x35DC   (0x0004)  
	class UAnimSequence*                               IdleAnim;                                                   // 0x35E0   (0x0008)  
	TArray<class UAnimSequence*>                       _N_Nh_;                                                     // 0x35E8   (0x0010)  
	int32_t                                            InteractActionIndex;                                        // 0x35F8   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x35FC   (0x0004)  MISSED
	class UAnimSequence*                               InteractAnim;                                               // 0x3600   (0x0008)  
	FVector                                            SightDirect;                                                // 0x3608   (0x000C)  
	SightLockMode                                      SightLockMode;                                              // 0x3614   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x3615   (0x0003)  MISSED
	int32_t                                            WalkRunParam;                                               // 0x3618   (0x0004)  
	float                                              ___S_;                                                      // 0x361C   (0x0004)  
	bool                                               bHaveInput;                                                 // 0x3620   (0x0001)  
	bool                                               bIdleAction;                                                // 0x3621   (0x0001)  
	bool                                               _f_T;                                                       // 0x3622   (0x0001)  
	bool                                               _f_Tw_;                                                     // 0x3623   (0x0001)  
	bool                                               w___;                                                       // 0x3624   (0x0001)  
	bool                                               bInteractAction;                                            // 0x3625   (0x0001)  
	bool                                               _S0R;                                                       // 0x3626   (0x0001)  
	bool                                               w_;                                                         // 0x3627   (0x0001)  
	bool                                               bSitDown;                                                   // 0x3628   (0x0001)  
	unsigned char                                      UnknownData05_6[0x7];                                       // 0x3629   (0x0007)  MISSED
	SDK_UNDEFINED(80,1167) /* TMap<FGameplayTag, UAnimSequence*> */ __um(vQ_N_R);                                  // 0x3630   (0x0050)  
	float                                              ActionTime;                                                 // 0x3680   (0x0004)  
	unsigned char                                      UnknownData06_6[0x4];                                       // 0x3684   (0x0004)  MISSED
	SDK_UNDEFINED(80,1168) /* TMap<FGameplayTag, TWeakObjectPtr<UPD_CharacterControllerData_C*>> */ __um(Pg__);    // 0x3688   (0x0050)  
	SDK_UNDEFINED(80,1169) /* TMap<FGameplayTag, UAnimMontage*> */ __um(___YGYh);                                  // 0x36D8   (0x0050)  
	bool                                               _e_c_;                                                      // 0x3728   (0x0001)  
	bool                                               ____;                                                       // 0x3729   (0x0001)  
	bool                                               bGetDown;                                                   // 0x372A   (0x0001)  
	// void GetCurrentActionTime(float& ActionTime);                                                                            // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _o_(FPoseLink _r___, FPoseLink& _o_);                                                                               // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _T_Y(FPoseLink _W_x, FPoseLink& _T_Y);                                                                              // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _W_(FPoseLink& _W_);                                                                                                // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnSystemUIStart();                                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnFeedStart(FGameplayTag GameplayTag);                                                                              // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _f_e_y();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _Y_t_R_();                                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnUnderAttackStart();                                                                                               // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void OnTakeOffStart();                                                                                                   // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void OnAlertStart();                                                                                                     // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void _f_e();                                                                                                             // [0x25a7960] Private|BlueprintCallable|BlueprintEvent 
	// void OnInteractStart();                                                                                                  // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _f_eyr_k();                                                                                                         // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void _f_e_N();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnIdleStart();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _f_e__();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void NoneStateEnd();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void InteractEnd();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void IdleEnd();                                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_6708632043AE1764C2B1A2BC8487CAA2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_E971F2414D8A609D52454EBD86A29DDE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_D76347B84F84143110867F87A063BC9A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_F2118EA4482961323A4284A5C757A6D4(); // [0x25a7960] BlueprintEvent       
	// void UnderAttackEnd();                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_AEAB655045E3052DFA6C2EB97F6BAEE4(); // [0x25a7960] BlueprintEvent       
	// void AlertEnd();                                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_49945F8B4DD298D2ED4AE0B5BD3BFF51(); // [0x25a7960] BlueprintEvent       
	// void TakeOffEnd();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_0A62643941C9F2534B1AF99C24980E2C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_1769F6104A02243DD5C6589592A29465(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_416429BC4584FF707D49B1BF83556BF2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_764CCFAC4D41871FBC3DA79A1C2573AB(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_DBE786244F0BB91CD41D8289371D7030(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_28773EEC4DFEA3865FF9E284E7CE5F47(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_3B0855934F908EBADF5C0E905BE5EBAD(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_3C432C1A4EAC4B8EEC7FAA9810D7964C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_437CDAF94B84EB0EA0350A81D62C1333(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_9E2813C546DB12830090D0B49CAFCF8A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_00AF891944077B505E5628A5880DB881(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_E492EC01485375CFE000B0A5E11A31F8(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_7DF62BD6494255C57AF1CA838DF2F699(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_1FA99C764B6E9143E9A2EBBC467023D2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_1BFEF6B2423BB23F3A743FA37CFEFB6E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_9C995D5F413AB0D5EEC5B0B25BCA0B99(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_8D1F93424AA669264C48C4A3AD645001(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_274A99114D34CF70A381F6832E28301D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_C4B06AF44285B268E642C280316C25BE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_B7E4C2F643A351461514F3A4BB27FD57(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_8A402BC24A8BC234FA1647AE139FAFCA(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_B9970B3845ED2CF05C0CE2905CD1D9DA(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_0FDD922B45E34D982F8F85B15BF4E09D(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_DF17119740839C99CBDC5BB7A7ACF2FB(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_B5FA9C6847AB27EDF1D286A59C39E411(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_49F87C244E0713CE630B39AA9A563674(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_BDCAAEE64FE7F1405D8B77AE820B11F2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_D33F159C49CF71493708D08A76E6E7CD(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BaseAnimal_AnimGraphNode_TransitionResult_2F01251B4B4FE9EAA39B3D9247C31675(); // [0x25a7960] BlueprintEvent       
	// void AnimNotify_Animal_IdleActionEnd();                                                                                  // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_Animal_InteractActionEnd();                                                                              // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_Animal_AlertEnd();                                                                                       // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void AnimNotify_Animal_UnderAttackEnd();                                                                                 // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void BlueprintInitializeAnimation();                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void StateMachineInitializationComplete();                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void NoneStateStart();                                                                                                   // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void InteractStart();                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void IdleStart();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void UnderAttackStart();                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AlertStart();                                                                                                       // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void TakeOffStart();                                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void FeedStart(FGameplayTag GameplayTag);                                                                                // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SystemUiStart();                                                                                                    // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SystemUiEnd();                                                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_ABP_BaseAnimal(int32_t EntryPoint);                                                                // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Monster/Common/ABP_VisionCommon.ABP_VisionCommon_C
/// Size: 0x1E68 (7784 bytes) (0x000460 - 0x0022C8) align 16 pad: 0x0008
#pragma pack(push, 0x1)
class UABP_VisionCommon_C : public UKuroAnimInstance
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0460   (0x0008)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0468   (0x0038)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace;                        // 0x04A0   (0x0020)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace;                        // 0x04C0   (0x0020)  
	FAnimNode_Feedback                                 AnimGraphNode_Feedback;                                     // 0x04E0   (0x0260)  
	FAnimNode_LinkedInputPose                          AnimGraphNode_LinkedInputPose;                              // 0x0740   (0x0138)  
	FAnimNode_Root                                     AnimGraphNode_Root0;                                        // 0x0878   (0x0038)  
	FAnimNode_Slot                                     AnimGraphNode_Slot;                                         // 0x08B0   (0x0060)  
	FAnimNode_LinkedAnimLayer                          AnimGraphNode_LinkedAnimLayer;                              // 0x0910   (0x00C0)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose;                                // 0x09D0   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult;                                  // 0x0A00   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine;                                 // 0x0A38   (0x0138)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose1;                               // 0x0B70   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult2;                                 // 0x0BA0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine3;                                // 0x0BD8   (0x0138)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose;                               // 0x0D10   (0x01B0)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult;                             // 0x0EC0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult4;                            // 0x0EE8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult5;                            // 0x0F10   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult6;                            // 0x0F38   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult7;                            // 0x0F60   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult8;                            // 0x0F88   (0x0028)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose9;                               // 0x0FB0   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult10;                                // 0x0FE0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer;                               // 0x1018   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult11;                                // 0x10A8   (0x0038)  
	FAnimNode_UseCachedPose                            AnimGraphNode_UseCachedPose12;                              // 0x10E0   (0x0030)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult13;                                // 0x1110   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine14;                               // 0x1148   (0x0138)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose15;                             // 0x1280   (0x01B0)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult16;                           // 0x1430   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult17;                           // 0x1458   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult18;                           // 0x1480   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult19;                           // 0x14A8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult20;                           // 0x14D0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult21;                           // 0x14F8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult22;                           // 0x1520   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult23;                           // 0x1548   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult24;                           // 0x1570   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult25;                           // 0x1598   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult26;                           // 0x15C0   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer27;                             // 0x15E8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult28;                                // 0x1678   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer29;                             // 0x16B0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult30;                                // 0x1740   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer31;                             // 0x1778   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult32;                                // 0x1808   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer33;                             // 0x1840   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult34;                                // 0x18D0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer35;                             // 0x1908   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult36;                                // 0x1998   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine37;                               // 0x19D0   (0x0138)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x1B08   (0x0008)  MISSED
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose38;                             // 0x1B10   (0x01B0)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult39;                           // 0x1CC0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult40;                           // 0x1CE8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult41;                           // 0x1D10   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult42;                           // 0x1D38   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult43;                                // 0x1D60   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer44;                             // 0x1D98   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult45;                                // 0x1E28   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer46;                             // 0x1E60   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult47;                                // 0x1EF0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine48;                               // 0x1F28   (0x0138)  
	FAnimNode_SaveCachedPose                           AnimGraphNode_SaveCachedPose49;                             // 0x2060   (0x01B0)  
	class ATsBaseCharacter_C*                          As_Base_Character;                                          // 0x2210   (0x0008)  
	bool                                               _c6e0R;                                                     // 0x2218   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x2219   (0x0003)  MISSED
	float                                              Delta_Time_X;                                               // 0x221C   (0x0004)  
	bool                                               _S_N;                                                       // 0x2220   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x2221   (0x0007)  MISSED
	FSkeletonGroup                                     Skeleton_Block_Info;                                        // 0x2228   (0x0020)  
	class UFK_Shake_AssestData_C*                      FKShakeData;                                                // 0x2248   (0x0008)  
	SDK_UNDEFINED(16,1170) /* FMulticastInlineDelegate */ __um(NewEventDispatcher);                                // 0x2250   (0x0010)  
	float                                              Delta;                                                      // 0x2260   (0x0004)  
	float                                              ShakeAlpha;                                                 // 0x2264   (0x0004)  
	int32_t                                            ShakeRange;                                                 // 0x2268   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x226C   (0x0004)  MISSED
	TArray<class UPD_CharacterControllerData_C*>       HitMaterial;                                                // 0x2270   (0x0010)  
	TArray<FName>                                      BeHitBones;                                                 // 0x2280   (0x0010)  
	FVector                                            BeHitLocation;                                              // 0x2290   (0x000C)  
	FRotator                                           BeHitRotation;                                              // 0x229C   (0x000C)  
	float                                              BeHitTime;                                                  // 0x22A8   (0x0004)  
	float                                              ToughDecreaseValue;                                         // 0x22AC   (0x0004)  
	TEnumAsByte<EMovementDirection>                    _y_R;                                                       // 0x22B0   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x22B1   (0x0003)  MISSED
	float                                              __a__;                                                      // 0x22B4   (0x0004)  
	TEnumAsByte<ECharState>                            CharMove;                                                   // 0x22B8   (0x0001)  
	TEnumAsByte<ECharParentMoveState>                  CharPosition;                                               // 0x22B9   (0x0001)  
	TEnumAsByte<EWalkingPosture>                       L_p_;                                                       // 0x22BA   (0x0001)  
	bool                                               _r___h__;                                                   // 0x22BB   (0x0001)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x22BC   (0x0004)  MISSED
	class UBP_ABPLogicParams_C*                        T;                                                          // 0x22C0   (0x0008)  
	// void HitFk(FPoseLink InPose, FPoseLink& HitFk);                                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void _r___S();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _y_R_r();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _R_Y_S___();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _S_Q_r();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_Feedback_F7F9D443402E1DFF8A267EBE1B7A9842(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_F081664C4C3F23A9F777878955FB8D5A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_F263CB9243A94CC4BE5C3A8C2EB85B38(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_98445E3D4CDE8CDB637A6585BBF1A9BE(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_5351818C4D3DFF112C55E69968810DB2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_D2E001C445FC3301D13F5DA8B32E3540(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_86A606294ABC09217DBA8CAD183C94C1(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_D12DDE404ED59447D9E16AAE61D5FF57(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_8D42FB4648FB96001BC976AD2D1C5BD2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_389E80BF4F42F63944C347B2B19B4763(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_A62E321544F9C1255BB0CD9473C9B8B0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_A9C1C8A74E930F3D7B4BDC9B1380CF3A(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_FD4B710B49AE918855FBDAA6DB446ADA(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_765F6D9C4A48F3B534BEA1A26FEF5251(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_968992674153C6C6873DAC969B2CD72B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_5F4247094A79D9F8B3ADA18884514005(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_VisionCommon_AnimGraphNode_TransitionResult_3E3A6B3343741F764B5A4CB9359C9681(); // [0x25a7960] BlueprintEvent       
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void BlueprintInitializeAnimation();                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void PlayShakeFX(int32_t Section);                                                                                       // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void A();                                                                                                                // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnComponentStart();                                                                                                 // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_ABP_VisionCommon(int32_t EntryPoint);                                                              // [0x25a7960] Final|HasDefaults    
	// void NewEventDispatcher_0__DelegateSignature();                                                                          // [0x25a7960] Public|Delegate|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/NPC/Animal/CommonPet/BP_CommonPet.BP_CommonPet_C
/// Size: 0x0008 (8 bytes) (0x000780 - 0x000788) align 16 pad: 0x0008
#pragma pack(push, 0x1)
class ABP_CommonPet_C : public ABP_BaseAnimal_C
{ 
public:
	class UBoxComponent*                               BlurCollision;                                              // 0x0780   (0x0008)  
};
#pragma pack(pop)

/// Class /Game/Aki/Character/NPC/Animal/NA012/ABP_NA012.ABP_NA012_C
/// Size: 0x0000 (0 bytes) (0x00372B - 0x00372B) align 16 pad: 0x0000
class UABP_NA012_C : public UABP_BaseAnimal_C
{ 
public:
};

/// Class /Game/Aki/Character/Monster/Boss/MB1MingzhongzhiguiMd00201/ABP_MB1MingzhongzhiguiMd00201_Vision.ABP_MB1MingzhongzhiguiMd00201_Vision_C
/// Size: 0x0000 (0 bytes) (0x0022C8 - 0x0022C8) align 16 pad: 0x0000
class UABP_MB1MingzhongzhiguiMd00201_Vision_C : public UABP_VisionCommon_C
{ 
public:
};

/// Class /Game/Aki/Character/Monster/Lord/ML1LinrenMd00301/ABP_ML1LinrenMd00301_Vision.ABP_ML1LinrenMd00301_Vision_C
/// Size: 0x0000 (0 bytes) (0x0022C8 - 0x0022C8) align 16 pad: 0x0000
class UABP_ML1LinrenMd00301_Vision_C : public UABP_VisionCommon_C
{ 
public:
};

/// Class /Game/Aki/Character/NPC/Animal/NA012/BP_NA012.BP_NA012_C
/// Size: 0x0000 (0 bytes) (0x000788 - 0x000788) align 16 pad: 0x0000
class ABP_NA012_C : public ABP_CommonPet_C
{ 
public:
};

/// Class /Game/Aki/Character/Role/FemaleXL/BaiLian/Abilities/Input/BP_InputComponent_Bailian.BP_InputComponent_Bailian_C
/// Size: 0x0000 (0 bytes) (0x00021D - 0x00021D) align 8 pad: 0x0000
class UBP_InputComponent_Bailian_C : public UBP_InputComponent_C
{ 
public:
	// FSInputCommand _Y_b(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _b__1(float Time);                                                                                        // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand ____(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// FSInputCommand _e_Q(float Time);                                                                                         // [0x25a7960] Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/WYQ/TPrefab_SM_WYQ_Shengxian.TPrefab_SM_WYQ_Shengxian_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_WYQ_Shengxian_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/WYQ/TPrefab_SM_WYQ_Middle_Shengxian.TPrefab_SM_WYQ_Middle_Shengxian_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_WYQ_Middle_Shengxian_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Character/NPC/MaleM/BPData/Simple_ABP/ABP_NH_MaleM_011_Simple.ABP_NH_MaleM_011_Simple_C
/// Size: 0x0000 (0 bytes) (0x001579 - 0x001579) align 16 pad: 0x0000
class UABP_NH_MaleM_011_Simple_C : public UABP_SimpleNPC_C
{ 
public:
};

/// Class /Game/Aki/Character/Monster/Common/Abilities/GA/GA_Common_YuanShengLiZi.GA_Common_YuanShengLiZi_C
/// Size: 0x005C (92 bytes) (0x000538 - 0x000594) align 16 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_Common_YuanShengLiZi_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	class UEffectModelGroup_C*                         D;                                                          // 0x0540   (0x0008)  
	unsigned char                                      UnknownData00_6[0x8];                                       // 0x0548   (0x0008)  MISSED
	FTransform                                         OP_y;                                                       // 0x0550   (0x0030)  
	FName                                              _____;                                                      // 0x0580   (0x000C)  
	EAttachmentRule                                    Location_Rule;                                              // 0x058C   (0x0001)  
	EAttachmentRule                                    Rotation_Rule;                                              // 0x058D   (0x0001)  
	EAttachmentRule                                    Scale_Rule;                                                 // 0x058E   (0x0001)  
	unsigned char                                      UnknownData01_6[0x1];                                       // 0x058F   (0x0001)  MISSED
	int32_t                                            TempEffectHandle;                                           // 0x0590   (0x0004)  
	// void OnFinish_DCD9A9E549C418E9624B0D827CC4919E();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_DCD9A9E549C418E9624B0D827CC4919E();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Common_YuanShengLiZi(int32_t EntryPoint);                                                       // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_Kakaluo_QTE_Shadow.GA_Kakaluo_QTE_Shadow_C
/// Size: 0x001C (28 bytes) (0x00052C - 0x000548) align 8 pad: 0x0000
class UGA_Kakaluo_QTE_Shadow_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	bool                                               _g_k_b_;                                                    // 0x0538   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0539   (0x0007)  MISSED
	class ATsBaseCharacter_C*                          aSa;                                                        // 0x0540   (0x0008)  
	// void EventReceived_18B59F5945020DB23C42FD88FBE7286E(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E819A7A540E();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E819A7A540E();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E819A7A540E();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E819A7A540E();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E819A7A540E();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Kakaluo_QTE_Shadow(int32_t EntryPoint);                                                         // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_Kakaluo_Burst_EndShadow.GA_Kakaluo_Burst_EndShadow_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Kakaluo_Burst_EndShadow_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void EventReceived_18B59F5945020DB23C42FD88027FD65A(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E818BBA51EF();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E818BBA51EF();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E818BBA51EF();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E818BBA51EF();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E818BBA51EF();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Kakaluo_Burst_EndShadow(int32_t EntryPoint);                                                    // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_Kakaluo_BurstAttack_Shadow.GA_Kakaluo_BurstAttack_Shadow_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_Kakaluo_BurstAttack_Shadow_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          aSaSW;                                                      // 0x0538   (0x0008)  
	// void EventReceived_18B59F5945020DB23C42FD8843B8BE55(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81AB20E442();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81AB20E442();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81AB20E442();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81AB20E442();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81AB20E442();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Kakaluo_BurstAttack_Shadow(int32_t EntryPoint);                                                 // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Role/MaleXL/Kakaluo/Abilities/GA/GA_Kakaluo_Skill01_Shadow.GA_Kakaluo_Skill01_Shadow_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_Kakaluo_Skill01_Shadow_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          aSa;                                                        // 0x0538   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E814CD842EB();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E814CD842EB();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E814CD842EB();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E814CD842EB();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E814CD842EB();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Kakaluo_Skill01_Shadow(int32_t EntryPoint);                                                     // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Monster/Lord/ML1LinrenMd00301/Data/Camera/BP_ML1LinrenMd00301_Attack_10_01.BP_ML1LinrenMd00301_Attack_10_01_C
/// Size: 0x0000 (0 bytes) (0x000190 - 0x000190) align 16 pad: 0x0000
class UBP_ML1LinrenMd00301_Attack_10_01_C : public UMatineeCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Vision/GA/GA_Relax_Vision.GA_Relax_Vision_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_Relax_Vision_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          _S_;                                                        // 0x0538   (0x0008)  
	// void ______(class ATsBaseCharacter_C* entity, bool& _f_T, FSVisionData& ___);                                            // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void OnTick_5D118C384AE61F1C80292E817D55CBB2();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E817D55CBB2();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E817D55CBB2();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E817D55CBB2();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E817D55CBB2();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Relax_Vision(int32_t EntryPoint);                                                               // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Vision/GA/GA_ToFight_Vision.GA_ToFight_Vision_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_ToFight_Vision_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          _S_;                                                        // 0x0538   (0x0008)  
	// void ______(class ATsBaseCharacter_C* entity, bool& _f_T, FSVisionData& ___);                                            // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void OnTick_5D118C384AE61F1C80292E8161096401();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8161096401();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8161096401();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8161096401();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8161096401();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_ToFight_Vision(int32_t EntryPoint);                                                             // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Vision/GA/GA_Born_Vision.GA_Born_Vision_C
/// Size: 0x001C (28 bytes) (0x00052C - 0x000548) align 8 pad: 0x0000
class UGA_Born_Vision_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class AActor*                                      _b__;                                                       // 0x0538   (0x0008)  
	class ATsBaseCharacter_C*                          _S_;                                                        // 0x0540   (0x0008)  
	// void ___S__(int32_t __a_, FSVisionData& __a_1);                                                                          // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void EventReceived_18B59F5945020DB23C42FD889881D7F7(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81F2255DE9();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81F2255DE9();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81F2255DE9();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81F2255DE9();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81F2255DE9();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Born_Vision(int32_t EntryPoint);                                                                // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Vision/GA/GA_Vision_WaitAttack.GA_Vision_WaitAttack_C
/// Size: 0x0058 (88 bytes) (0x000538 - 0x000590) align 8 pad: 0x0000
class UGA_Vision_WaitAttack_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	class ATsBaseCharacter_C*                          _S_U;                                                       // 0x0540   (0x0008)  
	FGameplayTag                                       nf;                                                         // 0x0548   (0x000C)  
	FGameplayTag                                       __;                                                         // 0x0554   (0x000C)  
	FGameplayTag                                       _b;                                                         // 0x0560   (0x000C)  
	FGameplayTag                                       ____;                                                       // 0x056C   (0x000C)  
	FGameplayTag                                       _Y;                                                         // 0x0578   (0x000C)  
	FGameplayTag                                       _w_Q;                                                       // 0x0584   (0x000C)  
	// void K__N_e();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void AQ__();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3F34E6080(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A389E908C3(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3E7DDAD25(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3F86F70F6(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A31BD89B52(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3CB2AA2EF(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Vision_WaitAttack(int32_t EntryPoint);                                                          // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Vision/GA/GA_Vision_WaitTag.GA_Vision_WaitTag_C
/// Size: 0x00D0 (208 bytes) (0x000538 - 0x000608) align 8 pad: 0x0000
class UGA_Vision_WaitTag_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	class ATsBaseCharacter_C*                          _S_U;                                                       // 0x0540   (0x0008)  
	SDK_UNDEFINED(80,1171) /* TMap<UAbilityTask_WaitGameplayTagAdded*, FGameplayTag> */ __um(_v_TT);               // 0x0548   (0x0050)  
	SDK_UNDEFINED(80,1172) /* TMap<UAbilityTask_WaitGameplayTagRemoved*, FGameplayTag> */ __um(_v_TT);             // 0x0598   (0x0050)  
	TArray<class UAbilityTask_WaitGameplayTagAdded*>   T;                                                          // 0x05E8   (0x0010)  
	TArray<class UAbilityTask_WaitGameplayTagRemoved*> T1;                                                         // 0x05F8   (0x0010)  
	// void AQ__();                                                                                                             // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void Removed_DB9F64004F8908FEAD99D3815F1E8945(FGameplayTag& Tag);                                                        // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A338ACB336(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Vision_WaitTag(int32_t EntryPoint);                                                             // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Vision/GA/Base/GA_DeleteVision.GA_DeleteVision_C
/// Size: 0x001C (28 bytes) (0x00052C - 0x000548) align 8 pad: 0x0000
class UGA_DeleteVision_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ABP_BaseVision_C*                            __a_;                                                       // 0x0538   (0x0008)  
	class ATsBaseCharacter_C*                          _s__;                                                       // 0x0540   (0x0008)  
	// void _eHrR();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_DeleteVision(int32_t EntryPoint);                                                               // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/Rogue/GA_BailianSoul_Listen_Rogue.GA_BailianSoul_Listen_Rogue_C
/// Size: 0x0010 (16 bytes) (0x000538 - 0x000548) align 8 pad: 0x0000
class UGA_BailianSoul_Listen_Rogue_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0540   (0x0008)  
	// void EventReceived_18B59F5945020DB23C42FD88CF02AFAA(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_BailianSoul_Listen_Rogue(int32_t EntryPoint);                                                   // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/Rogue/GA_BaiLian_BianShen_Soul_Rogue.GA_BaiLian_BianShen_Soul_Rogue_C
/// Size: 0x0020 (32 bytes) (0x00052C - 0x00054C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_BaiLian_BianShen_Soul_Rogue_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0538   (0x0008)  
	class UObject*                                     B__Q_m;                                                     // 0x0540   (0x0008)  
	int32_t                                            B__Q_m1YPg__;                                               // 0x0548   (0x0004)  
	// void OnTick_5D118C384AE61F1C80292E8172D99D7A();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8172D99D7A();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8172D99D7A();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8172D99D7A();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8172D99D7A();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81D275FBAC();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81D275FBAC();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81D275FBAC();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81D275FBAC();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81D275FBAC();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_BaiLian_BianShen_Soul_Rogue(int32_t EntryPoint);                                                // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Role/Common/Data/CameraShake/Camera/Up/NCS_Up_Lv9.NCS_Up_Lv9_C
/// Size: 0x0000 (0 bytes) (0x0001B8 - 0x0001B8) align 16 pad: 0x0000
class UNCS_Up_Lv9_C : public UBP_CameraShakeAndForceFeedback_C
{ 
public:
};

/// Class /Game/Aki/Character/Vision/GA/GA_Destroy_Bianshen_Vision.GA_Destroy_Bianshen_Vision_C
/// Size: 0x003D (61 bytes) (0x00052C - 0x000569) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UGA_Destroy_Bianshen_Vision_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	int32_t                                            _S_U_;                                                      // 0x0538   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x053C   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          _S_;                                                        // 0x0540   (0x0008)  
	class ABP_BaseVision_C*                            __a_;                                                       // 0x0548   (0x0008)  
	class UObject*                                     _S_____g_;                                                  // 0x0550   (0x0008)  
	class UObject*                                     _S_____g_0;                                                 // 0x0558   (0x0008)  
	bool                                               _N_R;                                                       // 0x0560   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0561   (0x0003)  MISSED
	int32_t                                            Pg__H;                                                      // 0x0564   (0x0004)  
	bool                                               ___;                                                        // 0x0568   (0x0001)  
	// void _S_____g_();                                                                                                        // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void _f_y_s();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD881B6D49FA(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3E4B1914F(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A3A31C2888(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81E2A60EB1();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81E2A60EB1();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81E2A60EB1();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81E2A60EB1();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81E2A60EB1();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void Pg__(int32_t Pg__);                                                                                                 // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_GA_Destroy_Bianshen_Vision(int32_t EntryPoint);                                                    // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Vision/GA/GA_Comboo_Vision.GA_Comboo_Vision_C
/// Size: 0x003D (61 bytes) (0x00052C - 0x000569) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UGA_Comboo_Vision_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class AActor*                                      _b__;                                                       // 0x0538   (0x0008)  
	class ATsBaseCharacter_C*                          _S_;                                                        // 0x0540   (0x0008)  
	class UObject*                                     _S_____g_;                                                  // 0x0548   (0x0008)  
	class UObject*                                     _S_____g_0;                                                 // 0x0550   (0x0008)  
	bool                                               _f_T_b;                                                     // 0x0558   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0559   (0x0003)  MISSED
	int32_t                                            _S_U_;                                                      // 0x055C   (0x0004)  
	bool                                               _N_R;                                                       // 0x0560   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0561   (0x0003)  MISSED
	int32_t                                            Pg__H;                                                      // 0x0564   (0x0004)  
	bool                                               ___;                                                        // 0x0568   (0x0001)  
	// void _f_y_s();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD8807650D1C(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD882A778DD5(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A34C7C8B37(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_21071CB943CD992BF8EFD6A34D14860F(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E811927A939();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E811927A939();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E811927A939();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E811927A939();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E811927A939();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void Pg__(int32_t Pg__);                                                                                                 // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_GA_Comboo_Vision(int32_t EntryPoint);                                                              // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Vision/GA/GA_Destroy_Zhaohuan_Vision.GA_Destroy_Zhaohuan_Vision_C
/// Size: 0x0094 (148 bytes) (0x00052C - 0x0005C0) align 8 pad: 0x0000
class UGA_Destroy_Zhaohuan_Vision_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	int32_t                                            _S_U_;                                                      // 0x0538   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x053C   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          _S_;                                                        // 0x0540   (0x0008)  
	int32_t                                            Pg__H;                                                      // 0x0548   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x054C   (0x0004)  MISSED
	class UPD_CharacterControllerData_C*               Pg__;                                                       // 0x0550   (0x0008)  
	bool                                               _Y__;                                                       // 0x0558   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x0559   (0x0007)  MISSED
	SDK_UNDEFINED(80,1173) /* TMap<int32_t, ATsBaseCharacter_C*> */ __um(4O_uir);                                  // 0x0560   (0x0050)  
	int32_t                                            _4O_ui;                                                     // 0x05B0   (0x0004)  
	unsigned char                                      UnknownData04_6[0x4];                                       // 0x05B4   (0x0004)  MISSED
	class UObject*                                     _S_U;                                                       // 0x05B8   (0x0008)  
	// void _n_t4();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ___g_S();                                                                                                           // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ___S__(class ATsBaseCharacter_C* entity, bool& _f_T, FSVisionData& ___);                                            // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _R_Y_();                                                                                                            // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD882782F9D4(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81FBB8B5B5();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81FBB8B5B5();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81FBB8B5B5();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81FBB8B5B5();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81FBB8B5B5();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void Pg__(int32_t Pg__);                                                                                                 // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void _4O_uirP(int32_t Pg__);                                                                                             // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_GA_Destroy_Zhaohuan_Vision(int32_t EntryPoint);                                                    // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_Change_Attack_Air_Soul.GA_Change_Attack_Air_Soul_C
/// Size: 0x001C (28 bytes) (0x00052C - 0x000548) align 8 pad: 0x0000
class UGA_Change_Attack_Air_Soul_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	bool                                               __0W;                                                       // 0x0538   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0539   (0x0007)  MISSED
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0540   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81EAEF1F5F();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81EAEF1F5F();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81EAEF1F5F();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81EAEF1F5F();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81EAEF1F5F();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81A7DC40CE();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81A7DC40CE();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81A7DC40CE();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81A7DC40CE();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81A7DC40CE();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81543FCDB2();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81543FCDB2();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81543FCDB2();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81543FCDB2();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81543FCDB2();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Change_Attack_Air_Soul(int32_t EntryPoint);                                                     // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_Skill01_Soul.GA_Skill01_Soul_C
/// Size: 0x001C (28 bytes) (0x00052C - 0x000548) align 8 pad: 0x0000
class UGA_Skill01_Soul_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	bool                                               __0W;                                                       // 0x0538   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0539   (0x0007)  MISSED
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0540   (0x0008)  
	// void EventReceived_18B59F5945020DB23C42FD887969AA61(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81A92DCD93();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81A92DCD93();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81A92DCD93();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81A92DCD93();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81A92DCD93();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Skill01_Soul(int32_t EntryPoint);                                                               // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_ChangeCharacterAttack.GA_ChangeCharacterAttack_C
/// Size: 0x001C (28 bytes) (0x00052C - 0x000548) align 8 pad: 0x0000
class UGA_ChangeCharacterAttack_Cdup_9 : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	float                                              _e;                                                         // 0x0538   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x053C   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0540   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81D848A7A0();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81D848A7A0();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81D848A7A0();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81D848A7A0();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81D848A7A0();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_ChangeCharacterAttack(int32_t EntryPoint);                                                      // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_Blind_Soul.GA_Blind_Soul_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_Blind_Soul_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          _S_;                                                        // 0x0538   (0x0008)  
	// FVector ___Y_(int32_t ___s, int32_t _el_);                                                                               // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S_(FVector& _T_);                                                                                                // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E812A4828D2();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E812A4828D2();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E812A4828D2();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E812A4828D2();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E812A4828D2();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Blind_Soul(int32_t EntryPoint);                                                                 // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Vision/GA/Variable/BP_VisionLocalVariables.BP_VisionLocalVariables_C
/// Size: 0x0018 (24 bytes) (0x000038 - 0x000050) align 8 pad: 0x0000
class UBP_VisionLocalVariables_C : public UPrimaryDataAsset
{ 
public:
	FVector                                            _g_v_h_;                                                    // 0x0038   (0x000C)  
	FVector                                            _e_v_h_;                                                    // 0x0044   (0x000C)  
};

/// Class /Game/Aki/Character/Vision/GA/GA_Vision_ShowTime.GA_Vision_ShowTime_C
/// Size: 0x00F5 (245 bytes) (0x00052C - 0x000621) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UGA_Vision_ShowTime_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class UAbilityTask_WaitDelay*                      Async_Task;                                                 // 0x0538   (0x0008)  
	class UObject*                                     _S_U;                                                       // 0x0540   (0x0008)  
	class UObject*                                     _S_U0;                                                      // 0x0548   (0x0008)  
	class ABP_BaseVision_C*                            __a_;                                                       // 0x0550   (0x0008)  
	class ATsBaseCharacter_C*                          _s__;                                                       // 0x0558   (0x0008)  
	FSVisionData                                       __a_1;                                                      // 0x0560   (0x0098)  
	class UAbilityTask_WaitDelay*                      __ek_N_R_;                                                  // 0x05F8   (0x0008)  
	class UObject*                                     _S_U___g_;                                                  // 0x0600   (0x0008)  
	class UObject*                                     null;                                                       // 0x0608   (0x0008)  
	int32_t                                            Pg__H;                                                      // 0x0610   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0614   (0x0004)  MISSED
	class UObject*                                     _S_____g_;                                                  // 0x0618   (0x0008)  
	bool                                               ____;                                                       // 0x0620   (0x0001)  
	// void _f_y_s();                                                                                                           // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void Pg__(int32_t Pg__);                                                                                                 // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_GA_Vision_ShowTime(int32_t EntryPoint);                                                            // [0x25a7960] Final|HasDefaults    
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyBonesShowControl.TsAnimNotifyBonesShowControl_C
/// Size: 0x000D (13 bytes) (0x000048 - 0x000055) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UTsAnimNotifyBonesShowControl_C : public UKuroAnimNotify
{ 
public:
	FName                                              BoneName;                                                   // 0x0048   (0x000C)  
	bool                                               Show;                                                       // 0x0054   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Vision/VM_Boss/VM_MB1Mingzhongzhigui/Md00101/Ability/GA_VisionCoordination_mingzhong.GA_VisionCoordination_mingzhong_C
/// Size: 0x0020 (32 bytes) (0x00052C - 0x00054C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UGA_VisionCoordination_mingzhong_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class UObject*                                     _S_____g_;                                                  // 0x0538   (0x0008)  
	class UBP_VisionLocalVariables_C*                  __a_;                                                       // 0x0540   (0x0008)  
	int32_t                                            _S_U___;                                                    // 0x0548   (0x0004)  
	// void OnTick_5D118C384AE61F1C80292E8168787B7B();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8168787B7B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8168787B7B();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8168787B7B();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8168787B7B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_VisionCoordination_mingzhong(int32_t EntryPoint);                                               // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_Back.GA_Back_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Back_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void _yd__(int32_t _S_U_, int32_t _yd__S_);                                                                              // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E814DFD15F6();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E814DFD15F6();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E814DFD15F6();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E814DFD15F6();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E814DFD15F6();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Back(int32_t EntryPoint);                                                                       // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_QTE_Soul.GA_QTE_Soul_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_QTE_Soul_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0538   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E814475B463();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E814475B463();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E814475B463();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E814475B463();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E814475B463();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_QTE_Soul(int32_t EntryPoint);                                                                   // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_LimitDodge_Bailian_Soul.GA_LimitDodge_Bailian_Soul_C
/// Size: 0x0010 (16 bytes) (0x000538 - 0x000548) align 8 pad: 0x0000
class UGA_LimitDodge_Bailian_Soul_C : public UGa_Passive_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0538   (0x0008)  
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0540   (0x0008)  
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_LimitDodge_Bailian_Soul(int32_t EntryPoint);                                                    // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_CommonDodge_Soul.GA_CommonDodge_Soul_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_CommonDodge_Soul_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ABP_BaiLian_Soul_C*                          B_;                                                         // 0x0538   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81F45766F9();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81F45766F9();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81F45766F9();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81F45766F9();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81F45766F9();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_CommonDodge_Soul(int32_t EntryPoint);                                                           // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Role/Common/Abilities/GA/GA_Role_LandEnd.GA_Role_LandEnd_C
/// Size: 0x000C (12 bytes) (0x00052C - 0x000538) align 8 pad: 0x0000
class UGA_Role_LandEnd_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	// void Added_9E901F22482A6DDEB0D80EA7BE048B55(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void Added_9B3A4556409D48FAB54BE1AE6B3F1479(FGameplayTag& Tag);                                                          // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81A71A0E06();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81A71A0E06();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81A71A0E06();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81A71A0E06();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81A71A0E06();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Role_LandEnd(int32_t EntryPoint);                                                               // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_Bailian_Soul_Move_B.GA_Bailian_Soul_Move_B_C
/// Size: 0x001C (28 bytes) (0x00052C - 0x000548) align 8 pad: 0x0000
class UGA_Bailian_Soul_Move_B_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ABP_BaiLian_Soul_C*                          B_;                                                         // 0x0538   (0x0008)  
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0540   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E8117616B06();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8117616B06();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8117616B06();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8117616B06();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8117616B06();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_06D2EEFD405D841B242341891A67D12D();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Bailian_Soul_Move_B(int32_t EntryPoint);                                                        // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_Bailian_Soul_Move_F.GA_Bailian_Soul_Move_F_C
/// Size: 0x001C (28 bytes) (0x00052C - 0x000548) align 8 pad: 0x0000
class UGA_Bailian_Soul_Move_F_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class UBaseAbilitySystemComponent*                 AbilitySystemComponent;                                     // 0x0538   (0x0008)  
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0540   (0x0008)  
	// void OnTick_5D118C384AE61F1C80292E81E7083B47();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81E7083B47();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81E7083B47();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81E7083B47();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81E7083B47();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnFinish_EC19E328446DE54336D4DD97A92D6228();                                                                        // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Bailian_Soul_Move_F(int32_t EntryPoint);                                                        // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_Burst02_Soul.GA_Burst02_Soul_C
/// Size: 0x001C (28 bytes) (0x00052C - 0x000548) align 8 pad: 0x0000
class UGA_Burst02_Soul_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	bool                                               __0W;                                                       // 0x0538   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0539   (0x0007)  MISSED
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0540   (0x0008)  
	// void EventReceived_18B59F5945020DB23C42FD88255EB652(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81E203DF34();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81E203DF34();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81E203DF34();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81E203DF34();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81E203DF34();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Burst02_Soul(int32_t EntryPoint);                                                               // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_AttackAirEnd_Soul.GA_AttackAirEnd_Soul_C
/// Size: 0x006C (108 bytes) (0x00052C - 0x000598) align 8 pad: 0x0000
class UGA_AttackAirEnd_Soul_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	FString                                            HitSocket;                                                  // 0x0538   (0x0010)  
	FVector                                            _____;                                                      // 0x0548   (0x000C)  
	FVector                                            _e_l_;                                                      // 0x0554   (0x000C)  
	FVector                                            _v_h;                                                       // 0x0560   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x056C   (0x0004)  MISSED
	class AActor*                                      _e_Q_v;                                                     // 0x0570   (0x0008)  
	class ATsBaseCharacter_C*                          _e_Q_v_ht;                                                  // 0x0578   (0x0008)  
	FVector                                            _v__;                                                       // 0x0580   (0x000C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x058C   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0590   (0x0008)  
	// FTransform ___S_S();                                                                                                     // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S_b(class ATsBaseCharacter_C* _v, class AActor*& _b__);                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void OnTick_5D118C384AE61F1C80292E815DB85205();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E815DB85205();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E815DB85205();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E815DB85205();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E815DB85205();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_AttackAirEnd_Soul(int32_t EntryPoint);                                                          // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_AttackAir_Soul.GA_AttackAir_Soul_C
/// Size: 0x002C (44 bytes) (0x00052C - 0x000558) align 8 pad: 0x0000
class UGA_AttackAir_Soul_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	bool                                               __0W;                                                       // 0x0538   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0539   (0x0003)  MISSED
	float                                              _v_h_p;                                                     // 0x053C   (0x0004)  
	FVector                                            _R_Y;                                                       // 0x0540   (0x000C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x054C   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0550   (0x0008)  
	// void ___SLe_N_T_v____(FVector& Location, bool& _g_);                                                                     // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD88B11557F7(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E810E7BCBE0();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E810E7BCBE0();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E810E7BCBE0();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E810E7BCBE0();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E810E7BCBE0();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_AttackAir_Soul(int32_t EntryPoint);                                                             // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_HoldAttack_Soul.GA_HoldAttack_Soul_2_C
/// Size: 0x012C (300 bytes) (0x00052C - 0x000658) align 8 pad: 0x0000
class UGA_HoldAttack_Soul_2_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	bool                                               _c__;                                                       // 0x0538   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0539   (0x0003)  MISSED
	float                                              _e;                                                         // 0x053C   (0x0004)  
	float                                              __;                                                         // 0x0540   (0x0004)  
	float                                              _N;                                                         // 0x0544   (0x0004)  
	TEnumAsByte<ECollisionResponse>                    _x_d;                                                       // 0x0548   (0x0001)  
	unsigned char                                      UnknownData02_6[0x7];                                       // 0x0549   (0x0007)  MISSED
	FSCameraModifier_Settings                          Camera_Modify_Settings;                                     // 0x0550   (0x00E8)  
	float                                              CurrentHP;                                                  // 0x0638   (0x0004)  
	int32_t                                            TargetObjectEntityID;                                       // 0x063C   (0x0004)  
	int32_t                                            HitTimes;                                                   // 0x0640   (0x0004)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0644   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0648   (0x0008)  
	class ABP_BaiLian_Soul_C*                          B_;                                                         // 0x0650   (0x0008)  
	// void _WhT___R(FVector _N__, FVector MO_y_v, float __, FVector& _eMO_y_);                                                 // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _V_Y_u_T_P();                                                                                                       // [0x25a7960] Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// void ___Q_V_Y();                                                                                                         // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// FVector __eQ();                                                                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FVector B__Q0R_();                                                                                                       // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// FVector B__QPW_h_();                                                                                                     // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___y__(bool& _W_, float& __);                                                                                       // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// float A(FVector A);                                                                                                      // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void _d_O_e_T_(float null, float null1, bool& _f_T);                                                                     // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void OnTick_5D118C384AE61F1C80292E81CC428C3B();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81CC428C3B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81CC428C3B();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81CC428C3B();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81CC428C3B();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81F7FCDA75();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81F7FCDA75();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81F7FCDA75();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81F7FCDA75();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81F7FCDA75();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E8165DD31C0();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8165DD31C0();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8165DD31C0();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8165DD31C0();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8165DD31C0();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_HoldAttack_Soul(int32_t EntryPoint);                                                            // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_ChangeCharacterAttack_Soul.GA_ChangeCharacterAttack_Soul_C
/// Size: 0x0014 (20 bytes) (0x00052C - 0x000540) align 8 pad: 0x0000
class UGA_ChangeCharacterAttack_Soul_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0538   (0x0008)  
	// void EventReceived_18B59F5945020DB23C42FD88DC1AEEBC(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81D621D1C8();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81D621D1C8();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81D621D1C8();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81D621D1C8();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81D621D1C8();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_ChangeCharacterAttack_Soul(int32_t EntryPoint);                                                 // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Monster/Summon/R2T1BailianMD10011_Pet/Ability/GA/GA_Common_Soul.GA_Common_Soul_C
/// Size: 0x006C (108 bytes) (0x00052C - 0x000598) align 8 pad: 0x0000
class UGA_Common_Soul_C : public UGA_Base_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x052C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0530   (0x0008)  
	FString                                            HitSocket;                                                  // 0x0538   (0x0010)  
	FVector                                            _____;                                                      // 0x0548   (0x000C)  
	FVector                                            _e_l_;                                                      // 0x0554   (0x000C)  
	FVector                                            _v_h;                                                       // 0x0560   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x056C   (0x0004)  MISSED
	class AActor*                                      _e_Q_v;                                                     // 0x0570   (0x0008)  
	class ATsBaseCharacter_C*                          _e_Q_v_ht;                                                  // 0x0578   (0x0008)  
	FVector                                            _v__;                                                       // 0x0580   (0x000C)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x058C   (0x0004)  MISSED
	class ATsBaseCharacter_C*                          _v;                                                         // 0x0590   (0x0008)  
	// FTransform ___S_S();                                                                                                     // [0x25a7960] Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void ___S_b(class ATsBaseCharacter_C* _v, class AActor*& _b__);                                                          // [0x25a7960] Public|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure 
	// void OnTick_5D118C384AE61F1C80292E81784AEDF5();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81784AEDF5();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81784AEDF5();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81784AEDF5();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81784AEDF5();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD889CEF13CC(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E81F72BA3EC();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E81F72BA3EC();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E81F72BA3EC();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E81F72BA3EC();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E81F72BA3EC();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD88FD1C900E(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void EventReceived_18B59F5945020DB23C42FD883CEC5B52(FGameplayEventData Payload);                                         // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnTick_5D118C384AE61F1C80292E8144B62CA0();                                                                          // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCancelled_5D118C384AE61F1C80292E8144B62CA0();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnInterrupted_5D118C384AE61F1C80292E8144B62CA0();                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnBlendOut_5D118C384AE61F1C80292E8144B62CA0();                                                                      // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnCompleted_5D118C384AE61F1C80292E8144B62CA0();                                                                     // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void K2_ActivateAbility();                                                                                               // [0x25a7960] Event|Protected|BlueprintEvent 
	// void K2_OnEndAbility(bool bWasCancelled);                                                                                // [0x25a7960] Event|Protected|BlueprintEvent 
	// void ExecuteUbergraph_GA_Common_Soul(int32_t EntryPoint);                                                                // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/Character/Weapon/Knife/Common/ABP_KnifeSwordCommon_PC.ABP_KnifeSwordCommon_PC_C
/// Size: 0x03A8 (936 bytes) (0x000378 - 0x000720) align 16 pad: 0x0000
class UABP_KnifeSwordCommon_PC_C : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0378   (0x0008)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0380   (0x0008)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0388   (0x0038)  
	FAnimNode_ConvertLocalToComponentSpace             AnimGraphNode_LocalToComponentSpace;                        // 0x03C0   (0x0020)  
	FAnimNode_LinkedAnimGraph                          AnimGraphNode_LinkedAnimGraph;                              // 0x03E0   (0x00A8)  
	unsigned char                                      UnknownData01_6[0x8];                                       // 0x0488   (0x0008)  MISSED
	FAnimNode_KawaiiPhysicsGroup                       AnimGraphNode_KawaiiPhysicsGroup;                           // 0x0490   (0x0270)  
	FAnimNode_ConvertComponentToLocalSpace             AnimGraphNode_ComponentToLocalSpace;                        // 0x0700   (0x0020)  
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_ABP_KnifeSwordCommon_PC(int32_t EntryPoint);                                                       // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/NPC/FemaleM/BPData/Simple_ABP/ABP_NH_FemaleM_Base_Simple.ABP_NH_FemaleM_Base_Simple_C
/// Size: 0x0000 (0 bytes) (0x001579 - 0x001579) align 16 pad: 0x0000
class UABP_NH_FemaleM_Base_Simple_C : public UABP_SimpleNPC_C
{ 
public:
};

/// Class /Game/Aki/Character/NPC/MaleM/BPData/ABP_NH_MaleM_Base.ABP_NH_MaleM_Base_C
/// Size: 0x0000 (0 bytes) (0x001E5E - 0x001E5E) align 16 pad: 0x0000
class UABP_NH_MaleM_Base_C : public UABP_BaseNPC_C
{ 
public:
};

/// Class /Game/Aki/Character/Weapon/Prop/Huaxiangsan/ABP_ParaglidingBase.ABP_ParaglidingBase_C
/// Size: 0x04C8 (1224 bytes) (0x000378 - 0x000840) align 16 pad: 0x0000
class UABP_ParaglidingBase_C : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0378   (0x0008)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0380   (0x0008)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0388   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult;                             // 0x03C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult0;                            // 0x03E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1;                            // 0x0410   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult2;                            // 0x0438   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult3;                            // 0x0460   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult4;                            // 0x0488   (0x0028)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult;                                  // 0x04B0   (0x0038)  
	FAnimNode_BlendSpacePlayer                         AnimGraphNode_BlendSpacePlayer;                             // 0x04E8   (0x00F8)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult5;                                 // 0x05E0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer;                               // 0x0618   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult6;                                 // 0x06A8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine;                                 // 0x06E0   (0x0138)  
	class ATsBaseCharacter_C*                          __r_;                                                       // 0x0818   (0x0008)  
	bool                                               null;                                                       // 0x0820   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0821   (0x0007)  MISSED
	class UEffectModelGroup_C*                         _mce;                                                       // 0x0828   (0x0008)  
	bool                                               _n__;                                                       // 0x0830   (0x0001)  
	bool                                               _n__7;                                                      // 0x0831   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x0832   (0x0002)  MISSED
	float                                              _n___m_;                                                    // 0x0834   (0x0004)  
	float                                              _n___m_8;                                                   // 0x0838   (0x0004)  
	float                                              _n___m_T_;                                                  // 0x083C   (0x0004)  
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void SetDash(bool Dash);                                                                                                 // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetHover(bool Hover);                                                                                               // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SetOpenParagliding(bool bOpen);                                                                                     // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void SyncAnim(class UABP_ParaglidingBase_C* Other);                                                                      // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_ParaglidingBase_AnimGraphNode_TransitionResult_A64E5D5C4CA3F0D40F80E095719CB0BC(); // [0x25a7960] BlueprintEvent       
	// void BlueprintInitializeAnimation();                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void ExecuteUbergraph_ABP_ParaglidingBase(int32_t EntryPoint);                                                           // [0x25a7960] Final                
};

/// Class /Game/Aki/Character/Weapon/Prop/Huaxiangsan/EParagliderMd10011/ABP_EParagliderMd10011.ABP_EParagliderMd10011_C
/// Size: 0x0000 (0 bytes) (0x000840 - 0x000840) align 16 pad: 0x0000
class UABP_EParagliderMd10011_C : public UABP_ParaglidingBase_C
{ 
public:
};

/// Class /Game/Aki/Character/Weapon/Knife/Common/ABP_KnifeSwordCommon.ABP_KnifeSwordCommon_C
/// Size: 0x16CC (5836 bytes) (0x000378 - 0x001A44) align 16 pad: 0x0004
#pragma pack(push, 0x1)
class UABP_KnifeSwordCommon_C : public UAnimInstance
{ 
public:
	unsigned char                                      UnknownData00_3[0x8];                                       // 0x0378   (0x0008)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0380   (0x0008)  
	FAnimNode_Root                                     AnimGraphNode_Root;                                         // 0x0388   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult;                             // 0x03C0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult0;                            // 0x03E8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult1;                            // 0x0410   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult2;                            // 0x0438   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult3;                            // 0x0460   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult4;                            // 0x0488   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult5;                            // 0x04B0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult6;                            // 0x04D8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult7;                            // 0x0500   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult8;                            // 0x0528   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult9;                            // 0x0550   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult10;                           // 0x0578   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult11;                           // 0x05A0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult12;                           // 0x05C8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult13;                           // 0x05F0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult14;                           // 0x0618   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult15;                           // 0x0640   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult16;                           // 0x0668   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer;                               // 0x0690   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult;                                  // 0x0720   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer17;                             // 0x0758   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult18;                                // 0x07E8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer19;                             // 0x0820   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult20;                                // 0x08B0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer21;                             // 0x08E8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult22;                                // 0x0978   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer23;                             // 0x09B0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult24;                                // 0x0A40   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult25;                                // 0x0A78   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer26;                             // 0x0AB0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult27;                                // 0x0B40   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer28;                             // 0x0B78   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult29;                                // 0x0C08   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer30;                             // 0x0C40   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult31;                                // 0x0CD0   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine;                                 // 0x0D08   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult32;                                // 0x0E40   (0x0038)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult33;                           // 0x0E78   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult34;                           // 0x0EA0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult35;                           // 0x0EC8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult36;                           // 0x0EF0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult37;                           // 0x0F18   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult38;                           // 0x0F40   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult39;                           // 0x0F68   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult40;                           // 0x0F90   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult41;                           // 0x0FB8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult42;                           // 0x0FE0   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult43;                           // 0x1008   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult44;                           // 0x1030   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult45;                           // 0x1058   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult46;                           // 0x1080   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult47;                           // 0x10A8   (0x0028)  
	FAnimNode_TransitionResult                         AnimGraphNode_TransitionResult48;                           // 0x10D0   (0x0028)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer49;                             // 0x10F8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult50;                                // 0x1188   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer51;                             // 0x11C0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult52;                                // 0x1250   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer53;                             // 0x1288   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult54;                                // 0x1318   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer55;                             // 0x1350   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult56;                                // 0x13E0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer57;                             // 0x1418   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult58;                                // 0x14A8   (0x0038)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult59;                                // 0x14E0   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer60;                             // 0x1518   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult61;                                // 0x15A8   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer62;                             // 0x15E0   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult63;                                // 0x1670   (0x0038)  
	FAnimNode_SequencePlayer                           AnimGraphNode_SequencePlayer64;                             // 0x16A8   (0x0090)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult65;                                // 0x1738   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine66;                               // 0x1770   (0x0138)  
	FAnimNode_StateResult                              AnimGraphNode_StateResult67;                                // 0x18A8   (0x0038)  
	FAnimNode_StateMachine                             AnimGraphNode_StateMachine68;                               // 0x18E0   (0x0138)  
	class ATsBaseCharacter_C*                          __r_;                                                       // 0x1A18   (0x0008)  
	float                                              S_MRfkhV;                                                   // 0x1A20   (0x0004)  
	bool                                               _f_Tck_W_d;                                                 // 0x1A24   (0x0001)  
	TEnumAsByte<EWeaponViewName>                       U;                                                          // 0x1A25   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x1A26   (0x0002)  MISSED
	class ATsUiSceneRoleActor_C*                       U69;                                                        // 0x1A28   (0x0008)  
	bool                                               _N_RsQ;                                                     // 0x1A30   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x1A31   (0x0003)  MISSED
	float                                              Open_Delay;                                                 // 0x1A34   (0x0004)  
	float                                              Delta_Time;                                                 // 0x1A38   (0x0004)  
	bool                                               WeaponOpen;                                                 // 0x1A3C   (0x0001)  
	bool                                               fkhV_;                                                      // 0x1A3D   (0x0001)  
	bool                                               IsUI;                                                       // 0x1A3E   (0x0001)  
	unsigned char                                      UnknownData03_6[0x1];                                       // 0x1A3F   (0x0001)  MISSED
	int32_t                                            fkhV_z;                                                     // 0x1A40   (0x0004)  
	// void AnimGraph(FPoseLink& AnimGraph);                                                                                    // [0x25a7960] HasOutParms|BlueprintCallable|BlueprintEvent 
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_9BB528CB4D57D317414E1C95FF134290(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_41EC7C5648974B735550789F6FAE749B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_2C47528C4EBC1C3AA6B611BA1D48DD4E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_D8AA1FAD4BBC9587AE3579B81C8F6888(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_AFC942E14466B76135991F9A059E61CC(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_63CB659041245489CD552B98E7BBD9A8(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_E00BEE7745981B76F40C6BA1307CF8A9(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_41012E9C47286273648C7D9F6FF2597E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_D59A6A4E4DB9956F52F3E6A2AE303BB0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_F22DFB8C48938E608C8B4FAB96176238(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_1104B3D34ABB146519ADB59C07CE33E5(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_DDA8FE174DA35F32201ECF8D1F0AC000(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_1C7BA9E1439EBB8F10A3DD8FBD4EBB45(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_F3A465D5478E4A2437A6B98BAAE96C91(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_B43171FB45751BE56495909E0DABD355(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_4DFF12FF4847EA4DB7F53A91C3131BD0(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_854AF24B4A653398F1C33AA206F8D6D2(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_0C0D79934A5A037639593FA2CB3E2E93(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_61EE4F984DCA22D42A72A98F6C4BFC8E(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_664AB34B4D035CEABB0C418E78AAF70C(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_4E56CE4F4FC40B67A815FA9E5121120B(); // [0x25a7960] BlueprintEvent       
	// void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_KnifeSwordCommon_AnimGraphNode_TransitionResult_C6778E804B46F910E60C4097B0E0682B(); // [0x25a7960] BlueprintEvent       
	// void BlueprintInitializeAnimation();                                                                                     // [0x25a7960] Event|Public|BlueprintEvent 
	// void BlueprintUpdateAnimation(float DeltaTimeX);                                                                         // [0x25a7960] Event|Public|BlueprintEvent 
	// void Clear_Open_Delay();                                                                                                 // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void Set_Open_Delay();                                                                                                   // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_ABP_KnifeSwordCommon(int32_t EntryPoint);                                                          // [0x25a7960] Final                
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AnimNotify/TsAnimNotifyDestroySpecBullet.TsAnimNotifyDestroySpecBullet_C
/// Size: 0x0034 (52 bytes) (0x000048 - 0x00007C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
class UTsAnimNotifyDestroySpecBullet_C : public UKuroAnimNotify
{ 
public:
	bool                                               _f_T_S_;                                                    // 0x0048   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0049   (0x0007)  MISSED
	FGameplayTagContainer                              __r__b_g_h;                                                 // 0x0050   (0x0020)  
	FName                                              bulletName;                                                 // 0x0070   (0x000C)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_Notify(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                              // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Huabiao/KuroSceneInteraction.TPrefab_SM_Pro_Tow_03A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Tow_03A_Cdup_10 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/AnimNotifyState/TsAnimNotifyStateBonesShowControl.TsAnimNotifyStateBonesShowControl_C
/// Size: 0x000D (13 bytes) (0x000048 - 0x000055) align 8 pad: 0x0005
#pragma pack(push, 0x1)
class UTsAnimNotifyStateBonesShowControl_C : public UKuroAnimNotifyState
{ 
public:
	FName                                              BoneName;                                                   // 0x0048   (0x000C)  
	bool                                               EndPlay;                                                    // 0x0054   (0x0001)  
	// FString GetNotifyName();                                                                                                 // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent|Const 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x13db470] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Character/Vision/VM_Lord/VM_ML1Linren/Md00301/Ability/CS_Linren_Vision_layer1.CS_Linren_Vision_layer1_C
/// Size: 0x0000 (0 bytes) (0x000190 - 0x000190) align 16 pad: 0x0000
class UCS_Linren_Vision_layer1_C : public UMatineeCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Monster/Boss/MB1MingzhongzhiguiMd00201/Data/Camera/BP_ZP_MB1Mingzhongzhigui_TanHuan.BP_ZP_MB1Mingzhongzhigui_TanHuan_C
/// Size: 0x0000 (0 bytes) (0x000190 - 0x000190) align 16 pad: 0x0000
class UBP_ZP_MB1Mingzhongzhigui_TanHuan_C : public UMatineeCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Monster/Boss/MB1MingzhongzhiguiMd00201/Data/Camera/BP_ZP_MB1Mingzhongzhigui_JiaoBuX.BP_ZP_MB1Mingzhongzhigui_JiaoBuX_C
/// Size: 0x0000 (0 bytes) (0x000190 - 0x000190) align 16 pad: 0x0000
class UBP_ZP_MB1Mingzhongzhigui_JiaoBuX_C : public UMatineeCameraShake
{ 
public:
};

/// Class /Game/Aki/Character/Vision/AnimNotifyState/ANS_Bianshenweizhi.ANS_Bianshenweizhi_C
/// Size: 0x0020 (32 bytes) (0x000048 - 0x000068) align 8 pad: 0x0000
class UANS_Bianshenweizhi_C : public UKuroAnimNotifyState
{ 
public:
	class ATsBaseCharacter_C*                          _S_U;                                                       // 0x0048   (0x0008)  
	class ABP_BaseVision_C*                            As_BP_Base_Vision;                                          // 0x0050   (0x0008)  
	bool                                               _f_T__;                                                     // 0x0058   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0059   (0x0007)  MISSED
	class ATsBaseCharacter_C*                          ___S;                                                       // 0x0060   (0x0008)  
	// bool K2_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime);    // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation);                           // [0x25a7960] Event|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// bool K2_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration);    // [0x25a7960] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Character/Monster/Summon/EKakaluoMd100011_Shadow/ABP_KakaluoShadow.ABP_KakaluoShadow_C
/// Size: 0x0000 (0 bytes) (0x0022C8 - 0x0022C8) align 16 pad: 0x0000
class UABP_KakaluoShadow_C : public UABP_VisionCommon_C
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_13A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_13A_Cdup_11 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_14A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_14A_Cdup_12 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/AI/AIMonster/Summon/MS1BailianMD10011_Pet/AIC_MS1BailianMD10011_Pet.AIC_MS1BailianMD10011_Pet_C
/// Size: 0x000C (12 bytes) (0x00077C - 0x000788) align 8 pad: 0x0000
class AAIC_MS1BailianMD10011_Pet_C : public AAIC_AICommon_C
{ 
public:
	unsigned char                                      UnknownData00_3[0x4];                                       // 0x077C   (0x0004)  MISSED
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x0780   (0x0008)  
	// void ExecuteUbergraph_AIC_MS1BailianMD10011_Pet(int32_t EntryPoint);                                                     // [0x25a7960] Final                
};

/// Class /Game/Aki/AI/AIMonster/Summon/Common/AIC_Common_Summon.AIC_Common_Summon_C
/// Size: 0x0000 (0 bytes) (0x00077C - 0x00077C) align 8 pad: 0x0000
class AAIC_Common_Summon_C : public AAIC_AICommon_C
{ 
public:
};

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Decorator/TsDecoratorDistance.TsDecoratorDistance_C
/// Size: 0x0008 (8 bytes) (0x0000A8 - 0x0000B0) align 8 pad: 0x0000
class UTsDecoratorDistance_C : public UBTDecorator_BlueprintBase
{ 
public:
	float                                              Distance;                                                   // 0x00A8   (0x0004)  
	float                                              CompareType;                                                // 0x00AC   (0x0004)  
	// void InitTsVariables();                                                                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);                         // [0x13db470] Native|Event|Public|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Task/TsTaskAbortImmediatelyBase.TsTaskAbortImmediatelyBase_C
/// Size: 0x0008 (8 bytes) (0x0000B0 - 0x0000B8) align 8 pad: 0x0000
class UTsTaskAbortImmediatelyBase_C : public UBTTask_BlueprintBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00B0   (0x0008)  
	// void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                  // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsTaskAbortImmediatelyBase(int32_t EntryPoint);                                                    // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Task/TsTaskWait.TsTaskWait_C
/// Size: 0x0020 (32 bytes) (0x0000B8 - 0x0000D8) align 8 pad: 0x0000
class UTsTaskWait_C : public UTsTaskAbortImmediatelyBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00B8   (0x0008)  
	int32_t                                            TimeMillisecond;                                            // 0x00C0   (0x0004)  
	int32_t                                            RandomTime;                                                 // 0x00C4   (0x0004)  
	FString                                            BlackboardKeyTime;                                          // 0x00C8   (0x0010)  
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);               // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsTaskWait(int32_t EntryPoint);                                                                    // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Task/TsTaskUseSkillDesignated.TsTaskUseSkillDesignated_C
/// Size: 0x0020 (32 bytes) (0x0000B8 - 0x0000D8) align 8 pad: 0x0000
class UTsTaskUseSkillDesignated_C : public UTsTaskAbortImmediatelyBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00B8   (0x0008)  
	int32_t                                            skillInfoId;                                                // 0x00C0   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00C4   (0x0004)  MISSED
	FString                                            BlackboardKeyTarget;                                        // 0x00C8   (0x0010)  
	// void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);               // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsTaskUseSkillDesignated(int32_t EntryPoint);                                                      // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Task/TsTaskFollowTarget.TsTaskFollowTarget_C
/// Size: 0x0089 (137 bytes) (0x0000B8 - 0x000141) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsTaskFollowTarget_C : public UTsTaskAbortImmediatelyBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00B8   (0x0008)  
	float                                              Angle;                                                      // 0x00C0   (0x0004)  
	float                                              Length;                                                     // 0x00C4   (0x0004)  
	float                                              Speed;                                                      // 0x00C8   (0x0004)  
	float                                              StandSpeed;                                                 // 0x00CC   (0x0004)  
	float                                              Radius;                                                     // 0x00D0   (0x0004)  
	float                                              NavigationRadius;                                           // 0x00D4   (0x0004)  
	float                                              MaxNavigationMillisecond;                                   // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x00DC   (0x0004)  MISSED
	FString                                            FollowPointName;                                            // 0x00E0   (0x0010)  
	bool                                               IsShowCube;                                                 // 0x00F0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x00F1   (0x0007)  MISSED
	TArray<FGameplayTag>                               Tags;                                                       // 0x00F8   (0x0010)  
	FString                                            WaitTimeName;                                               // 0x0108   (0x0010)  
	float                                              WaitTime;                                                   // 0x0118   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x011C   (0x0004)  MISSED
	FString                                            BeginTimeName;                                              // 0x0120   (0x0010)  
	FString                                            IsHasName;                                                  // 0x0130   (0x0010)  
	bool                                               IsInTag;                                                    // 0x0140   (0x0001)  
	// void DrawCube(FTransform Transform, float Duration, float colorValue);                                                   // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void GetPath(class AAIController* OwnerController, class APawn* ControlledPawn);                                         // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);               // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsTaskFollowTarget(int32_t EntryPoint);                                                            // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Decorator/TsDecoratorTagCheck.TsDecoratorTagCheck_C
/// Size: 0x0069 (105 bytes) (0x0000A8 - 0x000111) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsDecoratorTagCheck_C : public UBTDecorator_BlueprintBase
{ 
public:
	SDK_UNDEFINED(80,1174) /* TMap<FGameplayTag, bool> */ __um(Checks);                                            // 0x00A8   (0x0050)  
	TEnumAsByte<SConditionGroupType>                   Logic;                                                      // 0x00F8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00F9   (0x0007)  MISSED
	FString                                            BlackboardKeyTarget;                                        // 0x0100   (0x0010)  
	bool                                               IsBattleTag;                                                // 0x0110   (0x0001)  
	// bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);                         // [0x13db470] Native|Event|Public|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Decorator/TsDecoratorActorsLocation.TsDecoratorActorsLocation_C
/// Size: 0x0050 (80 bytes) (0x0000A8 - 0x0000F8) align 8 pad: 0x0000
class UTsDecoratorActorsLocation_C : public UBTDecorator_BlueprintBase
{ 
public:
	FString                                            KeyActorA;                                                  // 0x00A8   (0x0010)  
	FString                                            KeyActorB;                                                  // 0x00B8   (0x0010)  
	FFloatRange                                        DistanceRange;                                              // 0x00C8   (0x0010)  
	FFloatRange                                        AngleRange;                                                 // 0x00D8   (0x0010)  
	FFloatRange                                        HeightRange;                                                // 0x00E8   (0x0010)  
	// bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);                         // [0x13db470] Native|Event|Public|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_33A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_33A_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_41A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_41A_C : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_33A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_33A_Cdup_13 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_33A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_33A_Cdup_14 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Cook/KuroSceneInteraction.TPrefab_SM_Pro_Box_42AS_Composite_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_42AS_Composite_Cdup_15 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Character/NPC/FemaleS/BPData/BP_NH_FemaleS_001.BP_NH_FemaleS_001_C
/// Size: 0x0000 (0 bytes) (0x0007D0 - 0x0007D0) align 16 pad: 0x0000
class ABP_NH_FemaleS_001_C : public ABP_BaseNPC_C
{ 
public:
};

/// Class /Game/Aki/AI/AINPC/Animal/Common/AIC_CommonAnimal.AIC_CommonAnimal_C
/// Size: 0x0010 (16 bytes) (0x0003D8 - 0x0003E8) align 8 pad: 0x0000
class AAIC_CommonAnimal_C : public ATsAiController_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x03D8   (0x0008)  
	class ATsBaseCharacter_C*                          __r_;                                                       // 0x03E0   (0x0008)  
	// void OnStart();                                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_AIC_CommonAnimal(int32_t EntryPoint);                                                              // [0x25a7960] Final                
};

/// Class /Game/Aki/AI/AINPC/Animal/NA012/AIC_NA012.AIC_NA012_C
/// Size: 0x0008 (8 bytes) (0x0003E8 - 0x0003F0) align 8 pad: 0x0000
class AAIC_NA012_C : public AAIC_CommonAnimal_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x03E8   (0x0008)  
	// void _S(class ATsBaseCharacter_C* __, FSHitInformation _S_Q);                                                            // [0x25a7960] BlueprintCallable|BlueprintEvent 
	// void OnStart();                                                                                                          // [0x25a7960] Public|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_AIC_NA012(int32_t EntryPoint);                                                                     // [0x25a7960] Final|HasDefaults    
};

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Task/TsTaskSetTag.TsTaskSetTag_C
/// Size: 0x0039 (57 bytes) (0x0000B8 - 0x0000F1) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsTaskSetTag_C : public UTsTaskAbortImmediatelyBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00B8   (0x0008)  
	FString                                            TargetKey;                                                  // 0x00C0   (0x0010)  
	bool                                               IsAdd;                                                      // 0x00D0   (0x0001)  
	bool                                               IsCommonTag;                                                // 0x00D1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x00D2   (0x0002)  MISSED
	FGameplayTag                                       GameplayTag;                                                // 0x00D4   (0x000C)  
	FString                                            ActorTag;                                                   // 0x00E0   (0x0010)  
	bool                                               SetToPlayer;                                                // 0x00F0   (0x0001)  
	// void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);               // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsTaskSetTag(int32_t EntryPoint);                                                                  // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Task/TsTaskChangeInteractionState.TsTaskChangeInteractionState_C
/// Size: 0x0009 (9 bytes) (0x0000B8 - 0x0000C1) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsTaskChangeInteractionState_C : public UTsTaskAbortImmediatelyBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00B8   (0x0008)  
	bool                                               InteractionState;                                           // 0x00C0   (0x0001)  
	// void InitTsVariables();                                                                                                  // [0x13db470] Native|Public|BlueprintCallable|BlueprintEvent 
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsTaskChangeInteractionState(int32_t EntryPoint);                                                  // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Task/Animal/TsTaskSwitchAnimalState.TsTaskSwitchAnimalState_C
/// Size: 0x0009 (9 bytes) (0x0000B8 - 0x0000C1) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsTaskSwitchAnimalState_C : public UTsTaskAbortImmediatelyBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00B8   (0x0008)  
	TEnumAsByte<EAnimalEcologicalState>                State;                                                      // 0x00C0   (0x0001)  
	// void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);               // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveAbortAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                  // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsTaskSwitchAnimalState(int32_t EntryPoint);                                                       // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Task/Animal/TsTaskQueryFleeLocation.TsTaskQueryFleeLocation_C
/// Size: 0x0019 (25 bytes) (0x0000B8 - 0x0000D1) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsTaskQueryFleeLocation_C : public UTsTaskAbortImmediatelyBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00B8   (0x0008)  
	FString                                            TargetKey;                                                  // 0x00C0   (0x0010)  
	bool                                               DebugMode;                                                  // 0x00D0   (0x0001)  
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsTaskQueryFleeLocation(int32_t EntryPoint);                                                       // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Task/Animal/TsTaskAnimalMoveTo.TsTaskAnimalMoveTo_C
/// Size: 0x0030 (48 bytes) (0x0000B8 - 0x0000E8) align 8 pad: 0x0000
class UTsTaskAnimalMoveTo_C : public UTsTaskAbortImmediatelyBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00B8   (0x0008)  
	TEnumAsByte<ECharState>                            MoveState;                                                  // 0x00C0   (0x0001)  
	bool                                               NavigationOn;                                               // 0x00C1   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x00C2   (0x0006)  MISSED
	FString                                            TargetLocation;                                             // 0x00C8   (0x0010)  
	int32_t                                            LimitTime;                                                  // 0x00D8   (0x0004)  
	float                                              TurnSpeed;                                                  // 0x00DC   (0x0004)  
	bool                                               RootMotion;                                                 // 0x00E0   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x00E1   (0x0003)  MISSED
	int32_t                                            DistanceErrorThreshold;                                     // 0x00E4   (0x0004)  
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);               // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsTaskAnimalMoveTo(int32_t EntryPoint);                                                            // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Task/Animal/TsTaskAnimalDestroySelf.TsTaskAnimalDestroySelf_C
/// Size: 0x0008 (8 bytes) (0x0000B8 - 0x0000C0) align 8 pad: 0x0000
class UTsTaskAnimalDestroySelf_C : public UTsTaskAbortImmediatelyBase_C
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00B8   (0x0008)  
	// void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);                                // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsTaskAnimalDestroySelf(int32_t EntryPoint);                                                       // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Service/TsServiceAnimalPerception.TsServiceAnimalPerception_C
/// Size: 0x0018 (24 bytes) (0x0000A0 - 0x0000B8) align 8 pad: 0x0000
class UTsServiceAnimalPerception_C : public UBTService_BlueprintBase
{ 
public:
	FPointerToUberGraphFrame                           UberGraphFrame;                                             // 0x00A0   (0x0008)  
	FFloatRange                                        SenseRadius;                                                // 0x00A8   (0x0010)  
	// void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);               // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);                             // [0x13db470] Native|Event|Public|Protected|BlueprintCallable|BlueprintEvent 
	// void ExecuteUbergraph_TsServiceAnimalPerception(int32_t EntryPoint);                                                     // [0x13db470] Final|Native|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Decorator/TsDecoratorCheckInbound.TsDecoratorCheckInbound_C
/// Size: 0x0050 (80 bytes) (0x0000A8 - 0x0000F8) align 8 pad: 0x0000
class UTsDecoratorCheckInbound_C : public UBTDecorator_BlueprintBase
{ 
public:
	SDK_UNDEFINED(80,1175) /* TMap<FString, float> */  __um(SocketHeight);                                         // 0x00A8   (0x0050)  
	// bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);                         // [0x13db470] Native|Event|Public|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Game/Aki/TypeScript/Game/AI/BehaviorTree/Decorator/TsDecoratorBlackboardHasEntity.TsDecoratorBlackboardHasEntity_C
/// Size: 0x0011 (17 bytes) (0x0000A8 - 0x0000B9) align 8 pad: 0x0001
#pragma pack(push, 0x1)
class UTsDecoratorBlackboardHasEntity_C : public UBTDecorator_BlueprintBase
{ 
public:
	FString                                            BlackboardKey;                                              // 0x00A8   (0x0010)  
	bool                                               CompareValue;                                               // 0x00B8   (0x0001)  
	// bool PerformConditionCheckAI(class AAIController* OwnerController, class APawn* ControlledPawn);                         // [0x13db470] Native|Event|Public|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
};
#pragma pack(pop)

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_13A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_13A_Cdup_16 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_18A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_18A_Cdup_17 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Baoxiang/KuroSceneInteraction.TPrefab_SM_Pro_Box_02_CBT3_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_02_CBT3_Cdup_18 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_27A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_27A_Cdup_19 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Baoxiang/KuroSceneInteraction.TPrefab_SM_Pro_Box_01_CBT3_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_01_CBT3_Cdup_20 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_13A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_13A_Cdup_21 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/TPrefab_SM_Gat_41A.TPrefab_SM_Gat_41A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_41A_Cdup_22 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/TPrefab_SM_Gat_33A.TPrefab_SM_Gat_33A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_33A_Cdup_23 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Character/Item/Collection/Plant/Collect_Plant_01.Collect_Plant_01_C
/// Size: 0x0000 (0 bytes) (0x0002DC - 0x0002DC) align 8 pad: 0x0000
class ACollect_Plant_01_C : public ABP_BaseItem_C
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_13A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_13A_Cdup_24 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/YLYX/KuroSceneInteraction.TPrefab_SM_QiShi_HaiBao_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_QiShi_HaiBao_Cdup_25 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_14A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_14A_Cdup_26 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_21A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_21A_Cdup_27 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_01A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_01A_Cdup_28 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_38A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_38A_Cdup_29 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Cook/KuroSceneInteraction.TPrefab_SM_Pro_Box_42AS_Composite_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_42AS_Composite_Cdup_30 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_01A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_01A_Cdup_31 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Baoxiang/KuroSceneInteraction.TPrefab_SM_Pro_Box_01_CBT3_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_01_CBT3_Cdup_32 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Baoxiang/KuroSceneInteraction.TPrefab_SM_Pro_Box_01_CBT3_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_01_CBT3_Cdup_33 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Baoxiang/KuroSceneInteraction.TPrefab_SM_Pro_Box_01_CBT3_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_01_CBT3_Cdup_34 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Baoxiang/KuroSceneInteraction.TPrefab_SM_Pro_Box_01_CBT3_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_01_CBT3_Cdup_35 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Huabiao/KuroSceneInteraction.TPrefab_SM_Pro_Tow_03A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Tow_03A_Cdup_36 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Baoxiang/KuroSceneInteraction.TPrefab_SM_Pro_Box_01_CBT3_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_01_CBT3_Cdup_37 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Baoxiang/KuroSceneInteraction.TPrefab_SM_Pro_HuanXiangBox_03_CBT3_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_HuanXiangBox_03_CBT3_Cdup_38 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_21A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_21A_Cdup_39 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Baoxiang/KuroSceneInteraction.TPrefab_SM_Pro_Box_02_CBT3_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_02_CBT3_Cdup_40 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Baoxiang/KuroSceneInteraction.TPrefab_SM_Pro_Box_01_CBT3_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Box_01_CBT3_Cdup_41 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_01A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_01A_Cdup_42 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Huabiao/KuroSceneInteraction.TPrefab_SM_Pro_Tow_02A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Tow_02A_Cdup_43 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/WYQ/KuroSceneInteraction.TPrefab_SM_WYQ_Middle_Shengxian_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_WYQ_Middle_Shengxian_Cdup_44 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Huabiao/KuroSceneInteraction.TPrefab_SM_Pro_Tow_02A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Tow_02A_Cdup_45 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Huabiao/KuroSceneInteraction.TPrefab_SM_Pro_Tow_02A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Tow_02A_Cdup_46 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/WYQ/KuroSceneInteraction.TPrefab_SM_WYQ_Shengxian_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_WYQ_Shengxian_Cdup_47 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Huabiao/KuroSceneInteraction.TPrefab_SM_Pro_Tow_02A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Tow_02A_Cdup_48 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_38A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_38A_Cdup_49 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_01A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_01A_Cdup_50 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Character/NPC/MaleM/BPData/ABP_NH_MaleM_Weishu.ABP_NH_MaleM_Weishu_C
/// Size: 0x0000 (0 bytes) (0x001E5E - 0x001E5E) align 16 pad: 0x0000
class UABP_NH_MaleM_Weishu_C : public UABP_BaseNPC_C
{ 
public:
};

/// Class /Game/Aki/Character/NPC/MaleM/BPData/ABP_NH_MaleM.ABP_NH_MaleM_105_C
/// Size: 0x0000 (0 bytes) (0x001E5E - 0x001E5E) align 16 pad: 0x0000
class UABP_NH_MaleM_105_C : public UABP_BaseNPC_C
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_01A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_01A_Cdup_51 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_38A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_38A_Cdup_52 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_01A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_01A_Cdup_53 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_01A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_01A_Cdup_54 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_38A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_38A_Cdup_55 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_01A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_01A_Cdup_56 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Character/NPC/MaleM/BPData/Simple_ABP/ABP_NH_MaleM_001_Simple.ABP_NH_MaleM_001_Simple_C
/// Size: 0x0000 (0 bytes) (0x001579 - 0x001579) align 16 pad: 0x0000
class UABP_NH_MaleM_001_Simple_C : public UABP_SimpleNPC_C
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_33A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_33A_Cdup_57 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_33A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_33A_Cdup_58 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_41A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_41A_Cdup_59 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_33A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_33A_Cdup_60 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Caijiwu/KuroSceneInteraction.TPrefab_SM_Gat_18A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Gat_18A_Cdup_61 : public ALevelScriptActor
{ 
public:
};

/// Class /Game/Aki/Scene/InteractionLevel/Prefab/Huabiao/KuroSceneInteraction.TPrefab_SM_Pro_Tow_02A_C
/// Size: 0x0000 (0 bytes) (0x0002B0 - 0x0002B0) align 8 pad: 0x0000
class ATPrefab_SM_Pro_Tow_02A_Cdup_62 : public ALevelScriptActor
{ 
public:
};

/// Struct /Game/Aki/Render/RuntimeBP/GI/NewCloud/BP/SGIData.SGIData
/// Size: 0x0004 (4 bytes) (0x000000 - 0x000004) align 4 pad: 0x0000
struct FSGIData
{ 
	float                                              Time_2_21D46F1341BC54D20E33AC92DE552DB8;                    // 0x0000   (0x0004)  
};

/// Struct /Game/Aki/Data/Fight/UI/SUiEnvironmentProperty.SUiEnvironmentProperty
/// Size: 0x00B8 (184 bytes) (0x000000 - 0x0000B8) align 8 pad: 0x0000
struct FSUiEnvironmentProperty
{ 
	FSoftObjectPath                                    IconFrame_18_A9EAC4584D190F873B8F7E89AF008D22;              // 0x0000   (0x0020)  
	FSoftObjectPath                                    Icon_5_A2C3EB414E77EF5C24971D8A233A8C36;                    // 0x0020   (0x0020)  
	FSoftObjectPath                                    IconFull_28_6A2691024E39B23E183A08B1B1E93E1B;               // 0x0040   (0x0020)  
	float                                              WarningPercent_39_C6C752C04F7AD4CF53E4FF8974775F02;         // 0x0060   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0064   (0x0004)  MISSED
	TArray<FColor>                                     BgColors_35_9BDBDC0E491DF957C68F0BB2B35C0137;               // 0x0068   (0x0010)  
	TArray<FColor>                                     BarColors_36_CB446A534C823A7AA40C44BFE9702B1C;              // 0x0078   (0x0010)  
	SDK_UNDEFINED(48,1176) /* TWeakObjectPtr<UEffectScreenPlayData_C*> */ __um(SceneEffect_24_85A89F414CB1A4C872F427B995DB02A5); // 0x0088   (0x0030)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Scene/Interaction/SSceneInteractionSequence.SSceneInteractionSequence
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 pad: 0x0000
struct FSSceneInteractionSequence
{ 
	class ULevelSequence*                              Sequence_2_4A54428F4EE6F46E56DFEC9BC912FB4B;                // 0x0000   (0x0008)  
	bool                                               IsLoop_12_5C6E9166437EDA1704A38297E7AED610;                 // 0x0008   (0x0001)  
	bool                                               Reverse_8_7E5B16A946B819B54EB7F8823C3D849B;                 // 0x0009   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x000A   (0x0002)  MISSED
	float                                              PlayRate_11_8986EE394AB78223BBBB46804F8ED126;               // 0x000C   (0x0004)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Scene/Interaction/SSceneInteractionMontage.SSceneInteractionMontage
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 pad: 0x0000
struct FSSceneInteractionMontage
{ 
	class ASkeletalMeshActor*                          SkeletalMesh_9_6EF8209442A672C3BA0B5CAB403C01BA;            // 0x0000   (0x0008)  
	class UAnimMontage*                                Montage_5_9E9440554F795D22727DF4B08D05FCE4;                 // 0x0008   (0x0008)  
	bool                                               Loop_8_7365D06643AEE9A973768FA8D495BBDF;                    // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0011   (0x0003)  MISSED
	float                                              PlayRate_15_78927E734D4ABA303D16C88CF3EF7A6E;               // 0x0014   (0x0004)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Scene/Interaction/SSceneInteractionitemIndestructibleEffectsParameters.SSceneInteractionitemIndestructibleEffectsParameters
/// Size: 0x00A4 (164 bytes) (0x000000 - 0x0000A4) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSSceneInteractionitemIndestructibleEffectsParameters
{ 
	SDK_UNDEFINED(80,1177) /* TMap<FString, float> */  __um(FloatParameters_84_B532FFB04DC2442D10AD458DF67E6090);  // 0x0000   (0x0050)  
	SDK_UNDEFINED(80,1178) /* TMap<FString, FLinearColor> */ __um(ColorParameters_92_F1D7CBF3415667A4A70E7ABE1C8AB559); // 0x0050   (0x0050)  
	int32_t                                            IndestructibleEffectIndex_90_BE43D5A54A37AEBC3AE88BBA44457CB2; // 0x00A0   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SMovementRotationSetting.SMovementRotationSetting
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 4 pad: 0x0000
struct FSMovementRotationSetting
{ 
	float                                              null;                                                       // 0x0000   (0x0004)  
	float                                              null0;                                                      // 0x0004   (0x0004)  
	float                                              null1;                                                      // 0x0008   (0x0004)  
	float                                              null2;                                                      // 0x000C   (0x0004)  
	FSBaseCurve                                        _n_S_f___;                                                  // 0x0010   (0x0008)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SMovementSetting.SMovementSetting
/// Size: 0x0054 (84 bytes) (0x000000 - 0x000054) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSMovementSetting
{ 
	float                                              WalkSpeed_2_DA690DDE48698DCE23ACB9B7B6DC336B;               // 0x0000   (0x0004)  
	float                                              RunSpeed_4_9808D9B3425262A5A733268AC1DCE8A4;                // 0x0004   (0x0004)  
	float                                              SprintSpeed_6_B1E0DFD1469B04EDFB56A5A6C45ED5C0;             // 0x0008   (0x0004)  
	float                                              SwingSpeed_33_8B661DC74950E8EE552485A6A7D2079E;             // 0x000C   (0x0004)  
	float                                              Acceleration_23_F4BEBFA944C355D912F6A0B541BEBC2F;           // 0x0010   (0x0004)  
	float                                              SwingAcceleration_37_5CFFCCAE4D7DE44C9076CBB1A3DBAB1A;      // 0x0014   (0x0004)  
	float                                              GroundFriction_24_E8BE047248810FD17D14658342499CC5;         // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	class UCurveVector*                                MovementCurve_10_A968BF814DA38118D120B1AC090F43F2;          // 0x0020   (0x0008)  
	class UCurveFloat*                                 RotationRateCurve_13_D6280A964B6624D84EA7B1A295BDCDDF;      // 0x0028   (0x0008)  
	float                                              NormalSwimSpeed_16_5594DF0C45045A38F17AFDA3DBD9D6B2;        // 0x0030   (0x0004)  
	float                                              FastSwimSpeed_18_0553DCF8405A234767699F9349DACAFE;          // 0x0034   (0x0004)  
	float                                              ControllerRotationSpeed_44_FA4FC2A24AAEFA020A423DB3E453A8C2; // 0x0038   (0x0004)  
	FSMovementRotationSetting                          ControllerRotationSpeedSetting_45_C5A27A7C43483ED4E23B18AB1C67F1FB; // 0x003C   (0x0018)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SMovementSetting_Posture.SMovementSetting_Posture
/// Size: 0x00B0 (176 bytes) (0x000000 - 0x0000B0) align 8 pad: 0x0000
struct FSMovementSetting_Posture
{ 
	FSMovementSetting                                  Standing_2_3EC2D8FC456F71707D0F52A3B41D18E8;                // 0x0000   (0x0058)  
	FSMovementSetting                                  Crouching_4_B5EEC12A49881CC4C0D187A7B972DA18;               // 0x0058   (0x0058)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SHitWhirlpool.SHitWhirlpool
/// Size: 0x0019 (25 bytes) (0x000000 - 0x000019) align 4 pad: 0x0001
#pragma pack(push, 0x1)
struct FSHitWhirlpool
{ 
	FVector                                            _nzz_v__MOn__;                                              // 0x0000   (0x000C)  
	float                                              _nzz_e___;                                                  // 0x000C   (0x0004)  
	float                                              _0R_nzz_p_e___;                                             // 0x0010   (0x0004)  
	float                                              _nzz____P_6R_;                                              // 0x0014   (0x0004)  
	TEnumAsByte<EVelocityCurveType>                    _0R_nzz_p_f___;                                             // 0x0018   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/Condition/Struct/SCondition.SCondition
/// Size: 0x0078 (120 bytes) (0x000000 - 0x000078) align 8 pad: 0x0000
struct FSCondition
{ 
	FName                                              ag_NI;                                                      // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(80,1179) /* TMap<FName, FString> */  __um(_Spe___);                                              // 0x0010   (0x0050)  
	FText                                              _c___;                                                      // 0x0060   (0x0018)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SBulletDataScale.SBulletDataScale
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 pad: 0x0000
struct FSBulletDataScale
{ 
	FVector                                            ___e_P_s_;                                                  // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	class UCurveVector*                                ___e_P_s_f___;                                              // 0x0010   (0x0008)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SBulletDataMove.SBulletDataMove
/// Size: 0x008C (140 bytes) (0x000000 - 0x00008C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSBulletDataMove
{ 
	TEnumAsByte<EBulletFollowType>                     P_9________W_;                                              // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	FName                                              _____T_;                                                    // 0x0004   (0x000C)  
	bool                                               ________b__T_S___;                                          // 0x0010   (0x0001)  
	bool                                               _w_Q_S___;                                                  // 0x0011   (0x0001)  
	bool                                               _eP_6R____P_9__;                                            // 0x0012   (0x0001)  
	bool                                               _N9e_S_g_T_;                                                // 0x0013   (0x0001)  
	float                                              _w_QP_9_;                                                   // 0x0014   (0x0004)  
	float                                              _w_QP_9_0;                                                  // 0x0018   (0x0004)  
	bool                                               _R_Y_el__f_Tb__T_v_h_;                                      // 0x001C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x001D   (0x0003)  MISSED
	float                                              _R_Y_el_;                                                   // 0x0020   (0x0004)  
	float                                              _R_Y_____;                                                  // 0x0024   (0x0004)  
	class UCurveFloat*                                 _____S_S_f___;                                              // 0x0028   (0x0008)  
	FRotator                                           _R_Y_____e_T_;                                              // 0x0030   (0x000C)  
	FRotator                                           _e_TOPl______;                                              // 0x003C   (0x000C)  
	class UCurveVector*                                _e_TOPl______S_S_f___;                                      // 0x0048   (0x0008)  
	float                                              _v_hOPl______;                                              // 0x0050   (0x0004)  
	unsigned char                                      UnknownData02_6[0x4];                                       // 0x0054   (0x0004)  MISSED
	class UCurveFloat*                                 _v_hOPl______S_S_f___;                                      // 0x0058   (0x0008)  
	FVector                                            _v_hOPl______R___;                                          // 0x0060   (0x000C)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x006C   (0x0004)  MISSED
	class UCurveFloat*                                 _v_hOPl______R__Y;                                          // 0x0070   (0x0008)  
	class UCurveFloat*                                 _v_hOPl______R__Z;                                          // 0x0078   (0x0008)  
	FVector                                            _T_Y_R_;                                                    // 0x0080   (0x000C)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SBulletDataCollision.SBulletDataCollision
/// Size: 0x000E (14 bytes) (0x000000 - 0x00000E) align 4 pad: 0x0002
#pragma pack(push, 0x1)
struct FSBulletDataCollision
{ 
	FName                                              P_9__x_d_____;                                              // 0x0000   (0x000C)  
	bool                                               P_9__x_d___x;                                               // 0x000C   (0x0001)  
	bool                                               P_9__x_dUSMO;                                               // 0x000D   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SBulletDataChild.SBulletDataChild
/// Size: 0x0015 (21 bytes) (0x000000 - 0x000015) align 8 pad: 0x0005
#pragma pack(push, 0x1)
struct FSBulletDataChild
{ 
	int64_t                                            _S_UP_9_I;                                                  // 0x0000   (0x0008)  
	float                                              _S_UP_9______;                                              // 0x0008   (0x0004)  
	int32_t                                            _S_UP_9_pe___;                                              // 0x000C   (0x0004)  
	float                                              _S_UP_9______0;                                             // 0x0010   (0x0004)  
	bool                                               null;                                                       // 0x0014   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SBulletDataBase.SBulletDataBase
/// Size: 0x00D2 (210 bytes) (0x000000 - 0x0000D2) align 8 pad: 0x0002
#pragma pack(push, 0x1)
struct FSBulletDataBase
{ 
	TEnumAsByte<EBulletShape>                          P_9_b__r_;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(48,1180) /* TWeakObjectPtr<UStaticMesh*> */ __um(P_9__j_W_);                                     // 0x0008   (0x0030)  
	FVector                                            _R_Y_Y___;                                                  // 0x0038   (0x000C)  
	FVector                                            _R_YMOn__;                                                  // 0x0044   (0x000C)  
	FVector                                            _R_Y_el__;                                                  // 0x0050   (0x000C)  
	float                                              _c___e___;                                                  // 0x005C   (0x0004)  
	int32_t                                            _T_N_Npe_;                                                  // 0x0060   (0x0004)  
	int32_t                                            _O_u_kpe_;                                                  // 0x0064   (0x0004)  
	bool                                               ___gP______T;                                               // 0x0068   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0069   (0x0003)  MISSED
	FName                                              ___QHe_g_;                                                  // 0x006C   (0x000C)  
	float                                              _O_u_____;                                                  // 0x0078   (0x0004)  
	TEnumAsByte<EBulletRelativeDir>                    _S_Q___W_;                                                  // 0x007C   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x007D   (0x0003)  MISSED
	int32_t                                            gbL_He_gI;                                                  // 0x0080   (0x0004)  
	FRotator                                           P_9__e_Q_e_T_;                                              // 0x0084   (0x000C)  
	bool                                               _b_____g_f_T;                                               // 0x0090   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x0091   (0x0003)  MISSED
	int32_t                                            _O_____W_;                                                  // 0x0094   (0x0004)  
	bool                                               _f_T_S_N___S_gP______;                                      // 0x0098   (0x0001)  
	bool                                               _f_T___S_b;                                                 // 0x0099   (0x0001)  
	unsigned char                                      UnknownData04_6[0x6];                                       // 0x009A   (0x0006)  MISSED
	SDK_UNDEFINED(48,1181) /* TWeakObjectPtr<UClass*> */ __um(_e_Q____O__);                                        // 0x00A0   (0x0030)  
	TEnumAsByte<EBulletType>                           P_9____W_;                                                  // 0x00D0   (0x0001)  
	TEnumAsByte<EBulletHitDirectionType>               _S_Q_____R_____W_;                                          // 0x00D1   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/Entity/Struct/SHardnessStageInfo.SHardnessStageInfo
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 4 pad: 0x0000
struct FSHardnessStageInfo
{ 
	int32_t                                            HardnessStagePercent_2_B22C4B8F465C748D7E225487B6D94251;    // 0x0000   (0x0004)  
	int32_t                                            HardnessStrengh_4_839E8F424E1F0D63A7FF45984D95A4BD;         // 0x0004   (0x0004)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SCaughtTriggerInfo.SCaughtTriggerInfo
/// Size: 0x0030 (48 bytes) (0x000000 - 0x000030) align 8 pad: 0x0000
struct FSCaughtTriggerInfo
{ 
	FString                                            BulletId_2_6BB6B441444DE1791D974287C3FB7637;                // 0x0000   (0x0010)  
	int32_t                                            CaughtMxNumber_5_1DC837F649978634B73047A957CD7F55;          // 0x0010   (0x0004)  
	int32_t                                            CaughtLevel_7_C237794B446E59778EF225BFD138AFBF;             // 0x0014   (0x0004)  
	bool                                               CaughtAimTarget_15_720EC09744D98AC867143A9CC981E3C0;        // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0019   (0x0007)  MISSED
	TArray<FGameplayTag>                               CaughtTargetTag_11_90E48EC74BF0B55C6EDE7CBD4B42760C;        // 0x0020   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SCaughtBindingInfo.SCaughtBindingInfo
/// Size: 0x00C0 (192 bytes) (0x000000 - 0x0000C0) align 8 pad: 0x0000
struct FSCaughtBindingInfo
{ 
	FString                                            BulletId_2_2CA5CFE9470CB9353F5FB2A8C8F2F78F;                // 0x0000   (0x0010)  
	bool                                               DestroyBullet_5_4D0F22CD44415E2F354884880351D2EB;           // 0x0010   (0x0001)  
	bool                                               SummonChildBullet_7_61E98A3A49FC1E386BA199A21D7071ED;       // 0x0011   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x0012   (0x0006)  MISSED
	FString                                            EndBulletId_10_7E5B1F194A0A6E24AA768EA576D26148;            // 0x0018   (0x0010)  
	FString                                            TargetMontagePath_12_2AF7BCFE4FDC3E0C29F1FF869BE83BF2;      // 0x0028   (0x0010)  
	FString                                            TargetBoneName_14_FE60CABE4193074491DFC9A473A61438;         // 0x0038   (0x0010)  
	TEnumAsByte<ECaughtDirectionType>                  CaughtDirectionType_26_B3F8B3144AEDC8FF425FEFAEA5334ED1;    // 0x0048   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0049   (0x0007)  MISSED
	SDK_UNDEFINED(80,1182) /* TMap<TEnumAsByte<ECollisionChannel>, TEnumAsByte<ECollisionResponse>> */ __um(CollisionResponseToChannel_30_AA307783431D752DB30D2A8F2C75CB31); // 0x0050   (0x0050)  
	TArray<int64_t>                                    SourceBuffIds_23_E2C1618140159001D3EDDFBA33A70597;          // 0x00A0   (0x0010)  
	TArray<int64_t>                                    TargetBuffIds_25_094B68284AF1F56D06A215867B8CE4E2;          // 0x00B0   (0x0010)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Scene/Interaction/SSceneInteractionCrossStateEffect.SSceneInteractionCrossStateEffect
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSSceneInteractionCrossStateEffect
{ 
	class ABP_EffectActor_C*                           Effect_2_A01694674536D78A53AC8A915C038794;                  // 0x0000   (0x0008)  
	int32_t                                            EffectExtraState_5_2A96546E40BBE0A4075C639E0A79AF04;        // 0x0008   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Render/RuntimeBP/Scene/Interaction/SSceneInteractionAudio.SSceneInteractionAudio
/// Size: 0x0009 (9 bytes) (0x000000 - 0x000009) align 8 pad: 0x0001
#pragma pack(push, 0x1)
struct FSSceneInteractionAudio
{ 
	class UAkAudioEvent*                               AkEvent_2_DC2E81104C3E778279186DA4EFDF9E6B;                 // 0x0000   (0x0008)  
	bool                                               IsFollow_5_35BBCFF74A926C52292B45B203EEE5F8;                // 0x0008   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/Role/Common/Data/Structure/SFootstepAkAudioEvent.SFootstepAkAudioEvent
/// Size: 0x0038 (56 bytes) (0x000000 - 0x000038) align 8 pad: 0x0000
struct FSFootstepAkAudioEvent
{ 
	TEnumAsByte<EFootstepAkAudioEventType>             Type_3_5A96FB7946D1A00B65D8F6BBCADD922E;                    // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(48,1183) /* TWeakObjectPtr<UAkAudioEvent*> */ __um(Event_8_AE565C774FF6F84C7110ED9C1D6E5E5F);    // 0x0008   (0x0030)  
};

/// Struct /Game/Aki/Character/Role/Common/Data/Structure/SFootprint.SFootprint
/// Size: 0x0038 (56 bytes) (0x000000 - 0x000038) align 8 pad: 0x0000
struct FSFootprint
{ 
	TEnumAsByte<EPhysicalSurface>                      SurfaceType_4_5D304F7143205F25F55A72A73B694F65;             // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(48,1184) /* TWeakObjectPtr<UEffectModelBase*> */ __um(Effect_6_C3690C81487B2CBFB201CB806E4D5C24); // 0x0008   (0x0030)  
};

/// Struct /Game/Aki/Audio/SFootstepAudioEventParam.SFootstepAudioEventParam
/// Size: 0x00C8 (200 bytes) (0x000000 - 0x0000C8) align 8 pad: 0x0000
struct FSFootstepAudioEventParam
{ 
	FHitResult                                         _x_d_Oo__;                                                  // 0x0000   (0x0094)  
	bool                                               _r___;                                                      // 0x0094   (0x0001)  
	bool                                               _r___0;                                                     // 0x0095   (0x0001)  
	bool                                               _r___1;                                                     // 0x0096   (0x0001)  
	bool                                               _r___2;                                                     // 0x0097   (0x0001)  
	bool                                               _r___3;                                                     // 0x0098   (0x0001)  
	bool                                               _r___4;                                                     // 0x0099   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x009A   (0x0002)  MISSED
	FVector                                            __X___r_MOn__;                                              // 0x009C   (0x000C)  
	class UAkAudioEvent*                               WalkAkAudioEvent_28_07AD3B4B4189CB8E3CEE71AB26253EA4;       // 0x00A8   (0x0008)  
	class UAkAudioEvent*                               RunAkAudioEvent_29_13ECC6BF4060BEF41DC8B58A898AC123;        // 0x00B0   (0x0008)  
	class UAkAudioEvent*                               SprintAkAudioEvent_30_17B46DB84E49B1640EB57A80AEB8E655;     // 0x00B8   (0x0008)  
	class UAkAudioEvent*                               FallbackAkAudioEvent_31_E18F4FFC4C14E910DB725EA7EF42E547;   // 0x00C0   (0x0008)  
};

/// Struct /Game/Aki/Data/UiRoleCamera/Struct/SUiRoleCameraOffsetSetting.SUiRoleCameraOffsetSetting
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 4 pad: 0x0000
struct FSUiRoleCameraOffsetSetting
{ 
	float                                              __4Ynm_R;                                                   // 0x0000   (0x0004)  
	float                                              __4Ynm_R0;                                                  // 0x0004   (0x0004)  
	float                                              __4Ynm_R1;                                                  // 0x0008   (0x0004)  
	float                                              __4Ynm_R2;                                                  // 0x000C   (0x0004)  
};

/// Struct /Game/Aki/Data/UiRoleCamera/Struct/SUiRoleCameraSetting.SUiRoleCameraSetting
/// Size: 0x004C (76 bytes) (0x000000 - 0x00004C) align 4 pad: 0x0000
struct FSUiRoleCameraSetting
{ 
	float                                              __4YY;                                                      // 0x0000   (0x0004)  
	float                                              __4YP;                                                      // 0x0004   (0x0004)  
	float                                              __4Y___eupOe____pe_;                                        // 0x0008   (0x0004)  
	float                                              __r_;                                                       // 0x000C   (0x0004)  
	float                                              __r_0;                                                      // 0x0010   (0x0004)  
	float                                              P;                                                          // 0x0014   (0x0004)  
	float                                              P1;                                                         // 0x0018   (0x0004)  
	float                                              null;                                                       // 0x001C   (0x0004)  
	float                                              null2;                                                      // 0x0020   (0x0004)  
	float                                              _P_SKb_g__eQ_P_s_;                                          // 0x0024   (0x0004)  
	float                                              __r_3;                                                      // 0x0028   (0x0004)  
	float                                              __r_4;                                                      // 0x002C   (0x0004)  
	float                                              _v_g_R_u___z_N__r_;                                         // 0x0030   (0x0004)  
	float                                              _v_g_R_u___z_N__r_5;                                        // 0x0034   (0x0004)  
	float                                              _v_g_v____r__v;                                             // 0x0038   (0x0004)  
	float                                              _y_R_z_el___eQ_P_s_;                                        // 0x003C   (0x0004)  
	float                                              _y_R_z___e__eQ_P_s_;                                        // 0x0040   (0x0004)  
	float                                              null6;                                                      // 0x0044   (0x0004)  
	float                                              null7;                                                      // 0x0048   (0x0004)  
};

/// Struct /Game/Aki/Data/Camera/CameraDebugTool/SCameraDebugTool_ControllerModification.SCameraDebugTool_ControllerModification
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 8 pad: 0x0000
struct FSCameraDebugTool_ControllerModification
{ 
	FString                                            ControllerName_18_AF633B24412BCAA7A91F079DDD1C1750;         // 0x0000   (0x0010)  
	FString                                            PropertyName_25_633D635744AB44E50466D4A6C9DE4578;           // 0x0010   (0x0010)  
	FString                                            OldValue_26_28A5E9624F60CD102FF56FA7216A9D8E;               // 0x0020   (0x0010)  
	FString                                            NewValue_27_4AAE68EF4DAD3D1FB9ADFBBE70AD4816;               // 0x0030   (0x0010)  
};

/// Struct /Game/Aki/Data/Camera/CameraDebugTool/SCameraDebugTool_CameraProperty.SCameraDebugTool_CameraProperty
/// Size: 0x0015 (21 bytes) (0x000000 - 0x000015) align 8 pad: 0x0005
#pragma pack(push, 0x1)
struct FSCameraDebugTool_CameraProperty
{ 
	FString                                            PropertyName_9_2259EB8F4C6FDB2FADA93AB64B10982F;            // 0x0000   (0x0010)  
	float                                              Value_12_C232FD304DC5E2FEC082A3B083512BFA;                  // 0x0010   (0x0004)  
	bool                                               IsEffect_15_623BD92E4ED2B6BD2D9BFFAB2F4ABDAD;               // 0x0014   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/Camera/CameraDebugTool/SCameraDebugTool_SubCameraModification.SCameraDebugTool_SubCameraModification
/// Size: 0x0038 (56 bytes) (0x000000 - 0x000038) align 8 pad: 0x0000
struct FSCameraDebugTool_SubCameraModification
{ 
	FString                                            CameraTag_10_655DDDBD4D7D42B6756F688E4DE82D7B;              // 0x0000   (0x0010)  
	FString                                            CameraType_14_45FDB5FE4BA04DD4C2263E9D5D996D9D;             // 0x0010   (0x0010)  
	int32_t                                            CameraPriority_11_E34E002F4A7829DA5F05EB8935B141AF;         // 0x0020   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	TArray<FSCameraDebugTool_CameraProperty>           ModifiedProperties_3_13DBE554430D3185883C8598EDD78DEA;      // 0x0028   (0x0010)  
};

/// Struct /Game/Aki/Data/Camera/CameraDebugTool/SCameraDebugTool_CameraModeInfo.SCameraDebugTool_CameraModeInfo
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 pad: 0x0000
struct FSCameraDebugTool_CameraModeInfo
{ 
	TEnumAsByte<ECustomCameraMode>                     CurrentCameraMode_9_FBE5D92649640985526E46A3B7BD3356;       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	TArray<bool>                                       CameraModeEnabledArray_17_5326FF18411EE5D3DE8DC4972809A7DE; // 0x0008   (0x0010)  
};

/// Struct /Game/Aki/Data/Camera/CameraDebugTool/SCameraDebugTool_CameraFrameInfo.SCameraDebugTool_CameraFrameInfo
/// Size: 0x0090 (144 bytes) (0x000000 - 0x000090) align 8 pad: 0x0000
struct FSCameraDebugTool_CameraFrameInfo
{ 
	int64_t                                            FrameNumber_25_5286701F43C845E3669BC79C9D7EF67D;            // 0x0000   (0x0008)  
	SDK_UNDEFINED(80,1185) /* TMap<FString, FString> */ __um(DesiredCameraProps_13_A009612649DCFB89CCCA3BAA5BE5B30E); // 0x0008   (0x0050)  
	TArray<FSCameraDebugTool_ControllerModification>   ControllerModifications_17_04C4D6194013D006FC7B7292C0F04E43; // 0x0058   (0x0010)  
	TArray<FSCameraDebugTool_SubCameraModification>    SubCameraModifications_20_1FFC70644FA0422C59DD1EAA04788376; // 0x0068   (0x0010)  
	FSCameraDebugTool_CameraModeInfo                   CamerModeInfo_31_2BC7238C4EEE76E72C7603A10BFD349C;          // 0x0078   (0x0018)  
};

/// Struct /Game/Aki/Data/Camera/CameraDebugTool/SCameraDebugTool_CameraFrameInfoRegion.SCameraDebugTool_CameraFrameInfoRegion
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 pad: 0x0000
struct FSCameraDebugTool_CameraFrameInfoRegion
{ 
	int64_t                                            StartFrame_2_59B06B004484756D9D221D913C493B61;              // 0x0000   (0x0008)  
	int64_t                                            EndFrame_4_ABEF1C9D4E219ABE506A80AAC8AC3116;                // 0x0008   (0x0008)  
	TArray<FSCameraDebugTool_CameraFrameInfo>          CameraFrameInfoArray_9_2F78B6014E419551AA6D51846840B4BC;    // 0x0010   (0x0010)  
};

/// Struct /Game/Aki/Sequence/Manager/SSequenceMember.SSequenceMember
/// Size: 0x0058 (88 bytes) (0x000000 - 0x000058) align 8 pad: 0x0000
struct FSSequenceMember
{ 
	int32_t                                            SpeakerId_25_758E8C04400208F71269F08D79A311BE;              // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(80,1186) /* TMap<FString, TWeakObjectPtr<UClass*>> */ __um(Bp_26_3C572A3843E1F34388A6A6BE372365D0); // 0x0008   (0x0050)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Scene/Interaction/SSceneInteractionMaterialController.SSceneInteractionMaterialController
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 8 pad: 0x0000
struct FSSceneInteractionMaterialController
{ 
	TArray<class AActor*>                              Actors_51_687ABCC0441F5CD4AECFAD9D7EA2B413;                 // 0x0000   (0x0010)  
	class UItemMaterialControllerActorData_C*          Data_55_25C967394C0663A8A0A26D867C5575EA;                   // 0x0010   (0x0008)  
	float                                              TailIndex_67_F69EDDA44B55D01837AE0391BAA320F5;              // 0x0018   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x001C   (0x0004)  MISSED
	class UMaterialInstance*                           Materials_71_69904A7246FD86B4B936138898883802;              // 0x0020   (0x0008)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Scene/Interaction/SScenePropertyEffect.SScenePropertyEffect
/// Size: 0x0030 (48 bytes) (0x000000 - 0x000030) align 8 pad: 0x0000
struct FSScenePropertyEffect
{ 
	FSSceneInteractionMaterialController               Material_2_42A504A247C73A6A52C2AFB9987F7938;                // 0x0000   (0x0028)  
	class ABP_EffectActor_C*                           Effect_6_381D9DA246E968C079A4BC8DA61C8B3C;                  // 0x0028   (0x0008)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SWeaponMesh.SWeaponMesh
/// Size: 0x0070 (112 bytes) (0x000000 - 0x000070) align 8 pad: 0x0000
struct FSWeaponMesh
{ 
	FName                                              SocketName_10_7E5A67CA419B3CCDB9F0EF8DAB3769BB;             // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(48,1187) /* TWeakObjectPtr<USkeletalMesh*> */ __um(MeshSoftPtr_17_98C9B4294B35F8E0D704BD88964D513E); // 0x0010   (0x0030)  
	SDK_UNDEFINED(48,1188) /* TWeakObjectPtr<UClass*> */ __um(AnimInstanceSoftPtr_27_CB59D54843156A87D50BC189CB2BA4EE); // 0x0040   (0x0030)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SWeaponSocketItem.SWeaponSocketItem
/// Size: 0x0060 (96 bytes) (0x000000 - 0x000060) align 8 pad: 0x0000
struct FSWeaponSocketItem
{ 
	TArray<FSWeaponMesh>                               Meshes_13_CE477C0240043F0E66DD39B32302A00B;                 // 0x0000   (0x0010)  
	FName                                              DropSocket_16_66E387994D25403F8861D892DAEE5132;             // 0x0010   (0x000C)  
	FVector                                            DropVelocity_23_A26B05B541CF03CF69B531ABEA7D8051;           // 0x001C   (0x000C)  
	FGameplayTag                                       Tag_19_2E69EBC5415BF14374317FB499A95B38;                    // 0x0028   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0034   (0x0004)  MISSED
	FSoftObjectPath                                    WeaponEffectPath_26_C519CEFC406FFC9E8723D093D62AF1A2;       // 0x0038   (0x0020)  
	int64_t                                            Buff_30_D170D33F42DA87AEF57A37BD407E7C08;                   // 0x0058   (0x0008)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SWeaponSocket.SWeaponSocket
/// Size: 0x0060 (96 bytes) (0x000000 - 0x000060) align 8 pad: 0x0000
struct FSWeaponSocket
{ 
	FSWeaponSocketItem                                 Weapon_16_CE477C0240043F0E66DD39B32302A00B;                 // 0x0000   (0x0060)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SAiWeaponSocket.SAiWeaponSocket
/// Size: 0x0058 (88 bytes) (0x000000 - 0x000058) align 8 pad: 0x0000
struct FSAiWeaponSocket
{ 
	SDK_UNDEFINED(80,1189) /* TMap<int32_t, FSWeaponSocket> */ __um(AiModelConfig_31_CE477C0240043F0E66DD39B32302A00B); // 0x0000   (0x0050)  
	float                                              CollisionRadius_24_ABA0FB7549FB7C3C4786F6B98A022429;        // 0x0050   (0x0004)  
	float                                              Mass_26_116A19644F3F50076B9B7488BF4D12F6;                   // 0x0054   (0x0004)  
};

/// Struct /Game/Aki/Data/Scene3DUI/Struct/SSceneUITagConfig.SSceneUITagConfig
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 pad: 0x0000
struct FSSceneUITagConfig
{ 
	FString                                            DecorativeID_20_6E3ABF6E4F135FD65CCAE891DDFFCC30;           // 0x0000   (0x0010)  
};

/// Struct /Game/Aki/Data/Scene3DUI/Struct/SSceneDecorationConfig.SSceneDecorationConfig
/// Size: 0x0030 (48 bytes) (0x000000 - 0x000030) align 8 pad: 0x0000
struct FSSceneDecorationConfig
{ 
	FString                                            ResourcePath_2_6E3ABF6E4F135FD65CCAE891DDFFCC30;            // 0x0000   (0x0010)  
	FString                                            SceneClassTag_12_C2A28C9E463FD7F1427042BCB1F5D3F8;          // 0x0010   (0x0010)  
	FString                                            ViewClassTag_16_3F2FFC374F89713C7D3334BDB0C8837F;           // 0x0020   (0x0010)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Character/Npc/SNpcSetupPartInfo.SNpcSetupPartInfo
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 pad: 0x0000
struct FSNpcSetupPartInfo
{ 
	TArray<class USkeletalMeshComponent*>              SkeletalMeshComponents_3_972F390E49C8B1D109B0CEACB3B26B04;  // 0x0000   (0x0010)  
};

/// Struct /Game/Aki/Core/World/STags.STags
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 pad: 0x0000
struct FSTags
{ 
	TArray<FString>                                    Tags_3_73E25E43486DE6B402146A83A3D7C319;                    // 0x0000   (0x0010)  
	TArray<FString>                                    PrivateTags_5_4F9692954A19A2C96474EA83C4E742D9;             // 0x0010   (0x0010)  
};

/// Struct /Game/Aki/Data/Map/Struct/SMapConfig.SMapConfig
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 4 pad: 0x0000
struct FSMapConfig
{ 
	int32_t                                            ID_2_BA4F54C84D8ECF6939714D9581F7BFE3;                      // 0x0000   (0x0004)  
	FName                                              MapPath_27_785F7FE54E131427648093B13FCAFAAC;                // 0x0004   (0x000C)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Scene/Interaction/SSceneInteractionMaterialParameterCollection.SSceneInteractionMaterialParameterCollection
/// Size: 0x00A0 (160 bytes) (0x000000 - 0x0000A0) align 8 pad: 0x0000
struct FSSceneInteractionMaterialParameterCollection
{ 
	SDK_UNDEFINED(80,1190) /* TMap<FString, FLinearColor> */ __um(MPC_Vector_79_C77CAA3447742BD910D453A13390A407); // 0x0000   (0x0050)  
	SDK_UNDEFINED(80,1191) /* TMap<FString, float> */  __um(MPC_Scalar_81_C1888218459E1E1CE282478EB8D18431);       // 0x0050   (0x0050)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Scene/Interaction/SStateBasedEffect.SStateBasedEffect
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 8 pad: 0x0000
struct FSStateBasedEffect
{ 
	class ABP_StateMachineEffectBase_C*                StateBasedEffect_2_F8B1A5374FFE5EC4FB535C9D448359C2;        // 0x0000   (0x0008)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Scene/Interaction/SSceneInteractionitem.SSceneInteractionitem
/// Size: 0x0118 (280 bytes) (0x000000 - 0x000118) align 8 pad: 0x0000
struct FSSceneInteractionitem
{ 
	FSSceneInteractionSequence                         Sequence_36_B8940AC64CC949B03180C8B44D27357D;               // 0x0000   (0x0010)  
	FSSceneInteractionMontage                          AnimMontage_35_18248B464237B126EE78CBBD099741AF;            // 0x0010   (0x0018)  
	TArray<class ABP_EffectActor_C*>                   Effects_89_54B6DE4441F3AEADA2B6158A3CE7A73A;                // 0x0028   (0x0010)  
	TArray<class AActor*>                              Actors_30_3CB998D844868816DFA499A2D346ED92;                 // 0x0038   (0x0010)  
	TArray<class AActor*>                              HideActors_28_0358E37C417F8434637F2882B09FAA0A;             // 0x0048   (0x0010)  
	SDK_UNDEFINED(80,1192) /* TMap<EKuroSceneInteractionState, EKuroSceneInteractionState> */ __um(TransitionMap_43_687ABCC0441F5CD4AECFAD9D7EA2B413); // 0x0058   (0x0050)  
	TArray<FSSceneInteractionMaterialController>       MaterialControllers_50_0EBC035B4225A706D705E986C7C02F96;    // 0x00A8   (0x0010)  
	FSSceneInteractionAudio                            AkEvent_55_13AFBE064E3EE720B032EEB28FD64E67;                // 0x00B8   (0x0010)  
	TArray<FSStateBasedEffect>                         StateBasedEffect_64_73E7A59A47D638467E5151AD988AC976;       // 0x00C8   (0x0010)  
	bool                                               IsForceSetState_66_E46DD56C4B1577706375779EE9901CDC;        // 0x00D8   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x00D9   (0x0007)  MISSED
	class UPD_CharacterControllerDataGroup_C*          CharacterDataGroupForOrgan_69_B03A0A914328798FF4DDB6A1EBC5C950; // 0x00E0   (0x0008)  
	TArray<FSSceneInteractionitemIndestructibleEffectsParameters> IndestructibleEffectsParameters_82_B16BD5A64450652CED7731AF68D8E053; // 0x00E8   (0x0010)  
	TArray<class ADestructibleActor*>                  DestructibleActors_99_A07716B4422E6A54621BEDB3F449F6E9;     // 0x00F8   (0x0010)  
	TArray<FSSceneInteractionCrossStateEffect>         CrossStateEffects_109_5016CE794DA6206622021E974D237C3F;     // 0x0108   (0x0010)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Character/Components/SMaterialDebugInfo.SMaterialDebugInfo
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 4 pad: 0x0000
struct FSMaterialDebugInfo
{ 
	FName                                              CurrentController_12_2DDB34D04D78595E991CD3983A91307E;      // 0x0000   (0x000C)  
	FName                                              RenderingContent_14_9A17FA904A414F758E94049ECF493F1C;       // 0x000C   (0x000C)  
};

/// Struct /Game/Aki/Data/Fight/Struct/SCharacterFightInfo.SCharacterFightInfo
/// Size: 0x0090 (144 bytes) (0x000000 - 0x000090) align 8 pad: 0x0000
struct FSCharacterFightInfo
{ 
	SDK_UNDEFINED(48,1193) /* TWeakObjectPtr<UDataTable*> */ __um(SkillDataTable_2_5738D0894D6627807A9BD6A84D2ACCE8); // 0x0000   (0x0030)  
	SDK_UNDEFINED(48,1194) /* TWeakObjectPtr<UDataTable*> */ __um(BulletDataTable_4_ADE2A2EE46C27E8E76BA4E8EC23BF3B6); // 0x0030   (0x0030)  
	SDK_UNDEFINED(48,1195) /* TWeakObjectPtr<UPrimaryDataAsset*> */ __um(PartHitEffect_10_5B10341B4A72D9A56420A3BFEDED352F); // 0x0060   (0x0030)  
};

/// Struct /Game/Aki/Core/World/SSimpleInteractResult.SSimpleInteractResult
/// Size: 0x001D (29 bytes) (0x000000 - 0x00001D) align 4 pad: 0x0001
#pragma pack(push, 0x1)
struct FSSimpleInteractResult
{ 
	FVector                                            Location_2_5C6F8BEA4044EA9D8BB53C9F616B09BA;                // 0x0000   (0x000C)  
	FRotator                                           Rotator_5_6571C08F4632B8082AC5C8A2356CC070;                 // 0x000C   (0x000C)  
	float                                              SquaredOffsetLength_11_5CF5FE2840660705AF2AA5AF0C47CA8B;    // 0x0018   (0x0004)  
	bool                                               Success_10_65941456459F87653FBB5DA1F7149A4A;                // 0x001C   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/Common/Struct/SNiagaraParam.SNiagaraParam
/// Size: 0x0108 (264 bytes) (0x000000 - 0x000108) align 8 pad: 0x0000
struct FSNiagaraParam
{ 
	int32_t                                            ID_14_C390AD394BEACC3EB69D1DB31A8D685A;                     // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(80,1196) /* TMap<FName, FKuroCurveFloat> */ __um(FloatParameters_15_E66693664565A6042A4B9B87C21EC253); // 0x0008   (0x0050)  
	SDK_UNDEFINED(80,1197) /* TMap<FName, FKuroCurveLinearColor> */ __um(ColorParameters_16_D8A1F94842911439E863AA8E9063FF2D); // 0x0058   (0x0050)  
	SDK_UNDEFINED(80,1198) /* TMap<FName, FKuroCurveVector> */ __um(VectorParameters_17_1AE4CDDD44406B3B50443FA52006DD7A); // 0x00A8   (0x0050)  
	float                                              StartTime_21_F4AB0D9E43BCA88D5395AE89091A941C;              // 0x00F8   (0x0004)  
	float                                              LoopTime_23_94F32E3248906A5DEE2E03A49A2BBA38;               // 0x00FC   (0x0004)  
	float                                              EndTime_25_7BAED4764247F9E1195EE19C13C8ACB5;                // 0x0100   (0x0004)  
	float                                              ManualLifeTime_29_9907853F47E6ECE8315189B3CDBCBA3C;         // 0x0104   (0x0004)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SCharacterPart.SCharacterPart
/// Size: 0x0108 (264 bytes) (0x000000 - 0x000108) align 8 pad: 0x0000
struct FSCharacterPart
{ 
	FString                                            __MO_T_;                                                    // 0x0000   (0x0010)  
	TArray<FString>                                    _____T_;                                                    // 0x0010   (0x0010)  
	bool                                               _f_T_r_z_b_O_;                                              // 0x0020   (0x0001)  
	bool                                               _f_T_Q_u_o_m_;                                              // 0x0021   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0022   (0x0002)  MISSED
	FGameplayTag                                       __MO_h___;                                                  // 0x0024   (0x000C)  
	FGameplayTag                                       __MO_o_m_h___;                                              // 0x0030   (0x000C)  
	float                                              ___b_u_T_P_k_O_;                                            // 0x003C   (0x0004)  
	bool                                               _f_T1__p_;                                                  // 0x0040   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0041   (0x0007)  MISSED
	SDK_UNDEFINED(80,1199) /* TSet<TEnumAsByte<EBulletType>> */ __um(1__p_e_Q___W_);                               // 0x0048   (0x0050)  
	float                                              _1__p_S_Q_____;                                             // 0x0098   (0x0004)  
	bool                                               _f_T_vLr_;                                                  // 0x009C   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x009D   (0x0003)  MISSED
	float                                              _h_c_R_______;                                              // 0x00A0   (0x0004)  
	bool                                               _f_T_O___O___;                                              // 0x00A4   (0x0001)  
	unsigned char                                      UnknownData03_6[0x3];                                       // 0x00A5   (0x0003)  MISSED
	FName                                              __MO_r__ag_____c_i_;                                        // 0x00A8   (0x000C)  
	bool                                               _f_T_W_v_h_R___e_f_y__MO_r__ag_;                            // 0x00B4   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x00B5   (0x0003)  MISSED
	TArray<int64_t>                                    ______gqB;                                                  // 0x00B8   (0x0010)  
	class UEffectModelBase*                            kb_cyrHe_;                                                  // 0x00C8   (0x0008)  
	FSoftObjectPath                                    __kb_c_d_eyrHe_;                                            // 0x00D0   (0x0020)  
	FString                                            kb_cyrHe_________T_;                                        // 0x00F0   (0x0010)  
	class UPD_CharacterControllerData_C*               kb_cPg__yrHe_;                                              // 0x0100   (0x0008)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SEntityProperty.SEntityProperty
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 8 pad: 0x0000
struct FSEntityProperty
{ 
	FString                                            _Y_l_;                                                      // 0x0000   (0x0010)  
	int32_t                                            _x_d_OHQ___;                                                // 0x0010   (0x0004)  
	int32_t                                            _z___OHQ___;                                                // 0x0014   (0x0004)  
	int32_t                                            _S_Q_f______I;                                              // 0x0018   (0x0004)  
	int32_t                                            _____;                                                      // 0x001C   (0x0004)  
	int32_t                                            CaughtLevel_19_3AA0B6804AA2C67853626BBE2371640A;            // 0x0020   (0x0004)  
	int32_t                                            P_9__S_Q_____e___k_O_;                                      // 0x0024   (0x0004)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SCaughtInfo.SCaughtInfo
/// Size: 0x00F0 (240 bytes) (0x000000 - 0x0000F0) align 8 pad: 0x0000
struct FSCaughtInfo
{ 
	FSCaughtTriggerInfo                                TriggerInfo_85_A2459AEA4EDE102B4C04E283261CE6DD;            // 0x0000   (0x0030)  
	FSCaughtBindingInfo                                BindingInfo_86_2B12580148B2C38CFD39E5966F7CCF1B;            // 0x0030   (0x00C0)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SHitMapping.SHitMapping
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 8 pad: 0x0000
struct FSHitMapping
{ 
	int32_t                                            ID_2_9EF5C6E14C5D4265AF775BAFFE88C075;                      // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(16,1200) /* TArray<TEnumAsByte<EHitAnim>> */ __um(_f__h__);                                      // 0x0008   (0x0010)  
	FString                                            _Y_l_;                                                      // 0x0018   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SCounterAttackBuff.SCounterAttackBuff
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSCounterAttackBuff
{ 
	int64_t                                            BuffID_5_B5DDE1114C99EC0149B557B21284534A;                  // 0x0000   (0x0008)  
	int32_t                                            B_pe_;                                                      // 0x0008   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SCounterAttackEffect.SCounterAttackEffect
/// Size: 0x018C (396 bytes) (0x000000 - 0x00018C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSCounterAttackEffect
{ 
	class UClass*                                      __O__;                                                      // 0x0000   (0x0008)  
	FSoftObjectPath                                    yrHeD;                                                      // 0x0008   (0x0020)  
	FSTimeScale                                        _e_Q_______;                                                // 0x0028   (0x0018)  
	FSTimeScale                                        ___Q_______;                                                // 0x0040   (0x0018)  
	FSCounterAttackCamera                              Dd_P_g__n__;                                                // 0x0058   (0x0118)  
	FVector                                            yrHeO;                                                      // 0x0170   (0x000C)  
	FVector                                            yrHeS;                                                      // 0x017C   (0x000C)  
	float                                              yrHeMOn__;                                                  // 0x0188   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SVisionCounterAttack.SVisionCounterAttack
/// Size: 0x01A8 (424 bytes) (0x000000 - 0x0001A8) align 8 pad: 0x0000
struct FSVisionCounterAttack
{ 
	FSCounterAttackEffect                              __V__R_OHe_g_;                                              // 0x0000   (0x0190)  
	int64_t                                            ____V______uB;                                              // 0x0190   (0x0008)  
	int64_t                                            _e_Q_____uB;                                                // 0x0198   (0x0008)  
	bool                                               ___d__V__N_N_;                                              // 0x01A0   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x01A1   (0x0003)  MISSED
	int32_t                                            __V__N_NI;                                                  // 0x01A4   (0x0004)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SCounterAttack.SCounterAttack
/// Size: 0x037D (893 bytes) (0x000000 - 0x00037D) align 8 pad: 0x0005
#pragma pack(push, 0x1)
struct FSCounterAttack
{ 
	TArray<FName>                                      _9__S__MO_;                                                 // 0x0000   (0x0010)  
	FSCounterAttackEffect                              _e9__S_R_OHe_g_;                                            // 0x0010   (0x0190)  
	FSCounterAttackEffect                              _g9__S_R_OHe_g_;                                            // 0x01A0   (0x0190)  
	float                                              JR___P_s_;                                                  // 0x0330   (0x0004)  
	float                                              null;                                                       // 0x0334   (0x0004)  
	float                                              null0;                                                      // 0x0338   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x033C   (0x0004)  MISSED
	int64_t                                            __9__S_____uB;                                              // 0x0340   (0x0008)  
	int64_t                                            _e_Q_____uB;                                                // 0x0348   (0x0008)  
	bool                                               _S_Q_R_u__euB;                                              // 0x0350   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0351   (0x0007)  MISSED
	TArray<FSCounterAttackBuff>                        _hKmB;                                                      // 0x0358   (0x0010)  
	int64_t                                            A;                                                          // 0x0368   (0x0008)  
	FGameplayTag                                       ___g_N_NT;                                                  // 0x0370   (0x000C)  
	bool                                               Q;                                                          // 0x037C   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SMovementSetting_State.SMovementSetting_State
/// Size: 0x0630 (1584 bytes) (0x000000 - 0x000630) align 8 pad: 0x0000
struct FSMovementSetting_State
{ 
	FSMovementSetting_Posture                          FaceDirection_35_752904864FF4C6441610D6BA533CEAD3;          // 0x0000   (0x00B0)  
	FSMovementSetting_Posture                          LockDirection_36_3DDFB2394C43B3CFC79E85B754344D3B;          // 0x00B0   (0x00B0)  
	FSMovementSetting_Posture                          AimDirection_37_F202F3C642A28CAD3AB506BF93B9A8B1;           // 0x0160   (0x00B0)  
	FSMovementSetting_Posture                          CustomSetting00_39_58F522F44BBCF73B91D2A78E0108BF2B;        // 0x0210   (0x00B0)  
	FSMovementSetting_Posture                          CustomSetting01_28_C869024D4F347CBF69D96B9915B8F823;        // 0x02C0   (0x00B0)  
	FSMovementSetting_Posture                          CustomSetting02_29_E386C1B64DD0DA80C052F3ABC69899D1;        // 0x0370   (0x00B0)  
	FSMovementSetting_Posture                          CustomSetting03_30_8A4C568C4F510227ED0154A2B98360E3;        // 0x0420   (0x00B0)  
	FSMovementSetting_Posture                          CustomSetting04_31_006E59BA4CA1B36C7D00BE997360C0CB;        // 0x04D0   (0x00B0)  
	FSMovementSetting_Posture                          CustomSetting05_32_FFFCFAB24E8044CFC2634C8F0FAEC69E;        // 0x0580   (0x00B0)  
};

/// Struct /Game/Aki/Character/Input/Structures/sInputCommand.SInputCommand
/// Size: 0x0014 (20 bytes) (0x000000 - 0x000014) align 4 pad: 0x0000
struct FSInputCommand
{ 
	TEnumAsByte<ECommandType>                          CommandType_3_2DB55B5D4B1F6969B7B815BA8B0C09A7;             // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            IntValue_8_DDD797BB48FE5C3D69A3598C98583BCB;                // 0x0004   (0x0004)  
	FGameplayTag                                       TagValue_9_9904A5DF4B3961B5B39896AE6EF742EA;                // 0x0008   (0x000C)  
};

/// Struct /Game/Aki/Character/Input/Structures/SInputHoldConfig.SInputHoldConfig
/// Size: 0x0005 (5 bytes) (0x000000 - 0x000005) align 4 pad: 0x0001
#pragma pack(push, 0x1)
struct FSInputHoldConfig
{ 
	float                                              ___S_e___;                                                  // 0x0000   (0x0004)  
	bool                                               _______S_;                                                  // 0x0004   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/Input/Structures/SInputCaches.SInputCaches
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 4 pad: 0x0000
struct FSInputCaches
{ 
	float                                              _c_N_;                                                      // 0x0000   (0x0004)  
	float                                              _bw__;                                                      // 0x0004   (0x0004)  
	float                                              ___c_;                                                      // 0x0008   (0x0004)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SHitEffect.SHitEffect
/// Size: 0x00A0 (160 bytes) (0x000000 - 0x0000A0) align 4 pad: 0x0000
struct FSHitEffect
{ 
	TEnumAsByte<EHitAnim>                              ___Q_R_O_;                                                  // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              _S_Q_g_TZ;                                                  // 0x0004   (0x0004)  
	FVector                                            zz_N_S_Q_____;                                              // 0x0008   (0x000C)  
	float                                              zz_N_S_Q_y_R_e___;                                          // 0x0014   (0x0004)  
	float                                              _T_Nlx_v_e___;                                              // 0x0018   (0x0004)  
	FVector                                            _0Wb__S_Q_____;                                             // 0x001C   (0x000C)  
	float                                              _0Wb__S_Q_y_R_e___;                                         // 0x0028   (0x0004)  
	TEnumAsByte<EVelocityCurveType>                    _0Wb__S_Q_y_R_f___;                                         // 0x002C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x002D   (0x0003)  MISSED
	float                                              _0Wb__S_Q;                                                  // 0x0030   (0x0004)  
	float                                              _0Wb__S_Q0;                                                 // 0x0034   (0x0004)  
	float                                              _______P_;                                                  // 0x0038   (0x0004)  
	float                                              _NGS_h___;                                                  // 0x003C   (0x0004)  
	float                                              __v__h___;                                                  // 0x0040   (0x0004)  
	float                                              _N___h___;                                                  // 0x0044   (0x0004)  
	FVector                                            __0W_S9__;                                                  // 0x0048   (0x000C)  
	float                                              __0W_S9__NGS___R_h___;                                      // 0x0054   (0x0004)  
	float                                              __0W_S9___v____R_h___;                                      // 0x0058   (0x0004)  
	float                                              __0W_S9__N_____R_h___;                                      // 0x005C   (0x0004)  
	float                                              __0W_S9________P_;                                          // 0x0060   (0x0004)  
	float                                              __0W_S9__e___;                                              // 0x0064   (0x0004)  
	FSHitWhirlpool                                     _0Wb__S_Q_nzz_;                                             // 0x0068   (0x001C)  
	FSHitWhirlpool                                     zz_N_S_Q_nzz_;                                              // 0x0084   (0x001C)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SHitInformation.SHitInformation
/// Size: 0x07F4 (2036 bytes) (0x000000 - 0x0007F4) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSHitInformation
{ 
	class ATsBaseCharacter_C*                          _e_Q___;                                                    // 0x0000   (0x0008)  
	class ATsBaseCharacter_C*                          _S_Q___;                                                    // 0x0008   (0x0008)  
	FSHitEffect                                        ___QHe_g_;                                                  // 0x0010   (0x00A0)  
	int32_t                                            P_9_I;                                                      // 0x00B0   (0x0004)  
	FVector                                            _S_QyrHeMOn__;                                              // 0x00B4   (0x000C)  
	FRotator                                           _S_QyrHe_el__;                                              // 0x00C0   (0x000C)  
	bool                                               _f_T___R_;                                                  // 0x00CC   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x00CD   (0x0003)  MISSED
	FName                                              _S_Q__MO_;                                                  // 0x00D0   (0x000C)  
	FVector                                            _S_QMOn__;                                                  // 0x00DC   (0x000C)  
	int32_t                                            _b__I____;                                                  // 0x00E8   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x00EC   (0x0004)  MISSED
	FSReBulletDataMain                                 ___gP_9_penc_;                                              // 0x00F0   (0x06E8)  
	class UBulletLogicType_C*                          P_9__________;                                              // 0x07D8   (0x0008)  
	FString                                            P_9_h_I;                                                    // 0x07E0   (0x0010)  
	int32_t                                            _O_____W_;                                                  // 0x07F0   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/UiCameraAnimation/Struct/SUiCameraAnimationSettings.SUiCameraAnimationSettings
/// Size: 0x0196 (406 bytes) (0x000000 - 0x000196) align 8 pad: 0x0006
#pragma pack(push, 0x1)
struct FSUiCameraAnimationSettings
{ 
	bool                                               IsEmptyState_137_35A3DA104E73C0B4C24623A8E65E6521;          // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	FString                                            ReplaceCameraTag_135_97FB1B474D73E1DDCDA796A944C123F9;      // 0x0008   (0x0010)  
	FString                                            Description_57_2699C81243FDF267B243358BBA97F4B9;            // 0x0018   (0x0010)  
	FString                                            SocketName_2_AAFC68CF40B7CB79547BDEA3767CBF3F;              // 0x0028   (0x0010)  
	TEnumAsByte<EUiCameraAnimationTargetType>          TargetType_63_4B5CEAC5486479B38EDA97AAB776C749;             // 0x0038   (0x0001)  
	TEnumAsByte<EUiCameraAnimationLocationType>        LocationType_5_EF25D2BD4994F34B2C49939A33385649;            // 0x0039   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x003A   (0x0002)  MISSED
	FVector                                            Location_8_F6BD70F5468065051D264E804809BA03;                // 0x003C   (0x000C)  
	TEnumAsByte<EUiCameraAnimationRotationType>        RotationType_11_CC30C4DD4FC8D1B8989F31BF5B7DA29F;           // 0x0048   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0049   (0x0003)  MISSED
	FRotator                                           Rotation_14_FFA6184B46A00B877705ACA77144EF83;               // 0x004C   (0x000C)  
	bool                                               IsTrack_102_E962456B45C27131517B3B80A2DD9885;               // 0x0058   (0x0001)  
	bool                                               IsTrackWorldLocation_101_DF6B22B5403AD1E1AB83248CF218B99E;  // 0x0059   (0x0001)  
	bool                                               bOverrideTrackPitch_115_51F73C76494575C5637BD98207C8F671;   // 0x005A   (0x0001)  
	unsigned char                                      UnknownData03_6[0x1];                                       // 0x005B   (0x0001)  MISSED
	float                                              TrackPitchOverride_112_AFC05914412E39792BD3CC85DF76E59B;    // 0x005C   (0x0004)  
	bool                                               bTargetActorAsCenter_140_246A0ACB4AD5EE115D42AE91FF7BD3A5;  // 0x0060   (0x0001)  
	unsigned char                                      UnknownData04_6[0x3];                                       // 0x0061   (0x0003)  MISSED
	FVector                                            TrackLocation_98_D48F83A34EBE64CC4E14ED8D7019CF5E;          // 0x0064   (0x000C)  
	float                                              ArmLength_18_7DFFED6740C21E2E0CCE478BC5514EA5;              // 0x0070   (0x0004)  
	FVector                                            ArmOffsetLocation_22_4D2D8C614EC242BC4A37F3B033C9DFE5;      // 0x0074   (0x000C)  
	FRotator                                           ArmOffsetRotation_26_6264F5004D7B7158D67B309F23F6CA61;      // 0x0080   (0x000C)  
	bool                                               ArmCollisionTest_29_4798165641A47EB2504133A22DCF4EA2;       // 0x008C   (0x0001)  
	unsigned char                                      UnknownData05_6[0x3];                                       // 0x008D   (0x0003)  MISSED
	float                                              CameraFieldOfView_32_18D320494E237D930C76D2AB41F97110;      // 0x0090   (0x0004)  
	float                                              FocalDistance_50_76CE40E64216E8630D1D51BC8F2B1CD3;          // 0x0094   (0x0004)  
	float                                              Aperture_91_D91368A04312625350B4DCB97728044A;               // 0x0098   (0x0004)  
	float                                              PostProcessBlendWeight_52_49ECD5C7423F58B4AD617784D0D6A3AD; // 0x009C   (0x0004)  
	float                                              BlendInTime_34_97B18B6441CDC0DEDAF3B39BE5713CD2;            // 0x00A0   (0x0004)  
	float                                              BlendInExp_36_319D6BA94CE2AAB406E7EAA492BB1801;             // 0x00A4   (0x0004)  
	SDK_UNDEFINED(48,1201) /* TWeakObjectPtr<ULevelSequence*> */ __um(BlendInCameraSequence_118_BCE373AC40C0D79EB09C0AB0F05763B6); // 0x00A8   (0x0030)  
	float                                              BlendInCameraSequencePlayRate_129_CFBFCC3F457E2A032A15BAB3C49FACED; // 0x00D8   (0x0004)  
	bool                                               bRevertBlendInCameraSequence_126_EFB33A0C4550DEE59DB784886AA014E1; // 0x00DC   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x00DD   (0x0003)  MISSED
	SDK_UNDEFINED(48,1202) /* TWeakObjectPtr<ULevelSequence*> */ __um(BlendOutCameraSequence_120_505CFAF7433ED0ED7C1B7281CA4D0934); // 0x00E0   (0x0030)  
	float                                              BlendOutCameraSequencePlayRate_130_8B59E93B47D81EC6D36568862F70E966; // 0x0110   (0x0004)  
	bool                                               bRevertBlendOutCameraSequence_128_10B9C99141A62215DB23D88E713697E2; // 0x0114   (0x0001)  
	TEnumAsByte<EViewTargetBlendFunction>              BlendInFunction_39_30697DD84302198D54BDE19849302655;        // 0x0115   (0x0001)  
	unsigned char                                      UnknownData07_6[0x2];                                       // 0x0116   (0x0002)  MISSED
	SDK_UNDEFINED(48,1203) /* TWeakObjectPtr<ULevelSequence*> */ __um(BlendInSequence_66_F98E6AF045E2028FDDD3A795C1278A60); // 0x0118   (0x0030)  
	bool                                               bBlendInSequenceReverse_71_B2DA07AB4E4B8AF4532DDAA5A24C4A8F; // 0x0148   (0x0001)  
	unsigned char                                      UnknownData08_6[0x3];                                       // 0x0149   (0x0003)  MISSED
	float                                              BlendInPlayRate_86_08C8D85C48D333E2829627B8C8302681;        // 0x014C   (0x0004)  
	float                                              BlendOutTime_42_0009F45D41DDA23BC7F10B8AA1499560;           // 0x0150   (0x0004)  
	float                                              BlendOutExp_44_089F028D4AACA42E06365DB9E4F20C4B;            // 0x0154   (0x0004)  
	TEnumAsByte<EViewTargetBlendFunction>              BlendOutFunction_47_F95C1D8745DCA7A61EB54D8E130A919A;       // 0x0158   (0x0001)  
	unsigned char                                      UnknownData09_6[0x7];                                       // 0x0159   (0x0007)  MISSED
	SDK_UNDEFINED(48,1204) /* TWeakObjectPtr<ULevelSequence*> */ __um(BlendOutSequence_78_92B4FF6F45D66BE027C61C816AF83160); // 0x0160   (0x0030)  
	float                                              BlendOutPlayRate_88_1359BA3349E592ACE4596C9E4D8AC112;       // 0x0190   (0x0004)  
	bool                                               bBlendOutSequenceReverse_81_A2612ABC4C193747A4D910BAB97ED30D; // 0x0194   (0x0001)  
	bool                                               bResetCameraTransform_54_84C8405C475B0DDBF978D8A7703FE77B;  // 0x0195   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/UiCameraAnimation/Struct/SUiCameraAnimationBlendSettings.SUiCameraAnimationBlendSettings
/// Size: 0x00C0 (192 bytes) (0x000000 - 0x0000C0) align 8 pad: 0x0000
struct FSUiCameraAnimationBlendSettings
{ 
	float                                              Time_22_7053BAF248A59E94C38F00A306B63101;                   // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(48,1205) /* TWeakObjectPtr<ULevelSequence*> */ __um(LevelSequence_25_5D99E095429BB53DF159D793FD0BD747); // 0x0008   (0x0030)  
	float                                              PlayRate_31_7AC61349415520400D3379A2FF509860;               // 0x0038   (0x0004)  
	bool                                               bReverse_28_9221334F4855EC4C284F77AB4A7B8A50;               // 0x003C   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x003D   (0x0003)  MISSED
	SDK_UNDEFINED(48,1206) /* TWeakObjectPtr<UCurveFloat*> */ __um(CommonCurve_19_44F9D203469BE7A60E24ADB686ADA8C7); // 0x0040   (0x0030)  
	SDK_UNDEFINED(80,1207) /* TMap<TEnumAsByte<EUiCameraAnimationAttributeType>, TWeakObjectPtr<UCurveFloat*>> */ __um(CurveMap_18_E91232C14DEC2DBC6A8D0095520D6B42); // 0x0070   (0x0050)  
};

/// Struct /Game/Aki/Sequence/Manager/Structures/SSeqJumpWithOption.SSeqJumpWithOption
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 4 pad: 0x0000
struct FSSeqJumpWithOption
{ 
	int32_t                                            OptionIndex_9_F6DB5C714340ECCF3E74C1873DF48061;             // 0x0000   (0x0004)  
	FName                                              SeqNodeID_10_0AFA0A4747F51CF8908A6FB5A7AFC7DD;              // 0x0004   (0x000C)  
};

/// Struct /Game/Aki/Sequence/Manager/Structures/SSeqOptionJumpGroup.SSeqOptionJumpGroup
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 pad: 0x0000
struct FSSeqOptionJumpGroup
{ 
	FName                                              SubtitleID_2_751D52924EC54591891BB597195B1594;              // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<FSSeqJumpWithOption>                        JumpGroup_6_2AB561364A2FD040E3954193212D6E4A;               // 0x0010   (0x0010)  
};

/// Struct /Game/Aki/Sequence/Manager/SSequencesNetwrokNode.SSequencesNetwrokNode
/// Size: 0x005C (92 bytes) (0x000000 - 0x00005C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSSequencesNetwrokNode
{ 
	FName                                              SeqNodeID_8_0C44D5184E9C897AA3CA8AAEA9E76D19;               // 0x0000   (0x000C)  
	FName                                              PreSeqNodeID_13_05C932D74E8DC1BAD474D1AD560AEF94;           // 0x000C   (0x000C)  
	FSoftObjectPath                                    SeqNodeData_44_6266215844F469543EFA2CB97D91FA70;            // 0x0018   (0x0020)  
	bool                                               _f_T_ybk__eQ_;                                              // 0x0038   (0x0001)  
	bool                                               _f_T_ybk_____c6R_;                                          // 0x0039   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x003A   (0x0002)  MISSED
	float                                              BlendInTime_26_41AAC7F6417E901E7D01FB9AA9A87B72;            // 0x003C   (0x0004)  
	float                                              BlendOutTime_25_C1997C4B4E37C27B5303D38C24A9C0F8;           // 0x0040   (0x0004)  
	TEnumAsByte<ESeqSwtichType>                        __l____W_;                                                  // 0x0044   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0045   (0x0003)  MISSED
	TArray<FSSeqOptionJumpGroup>                       __y___l____;                                                // 0x0048   (0x0010)  
	TEnumAsByte<SeqCameraMode>                         _v_g_j___;                                                  // 0x0058   (0x0001)  
	bool                                               _f_T____vQ_NU;                                              // 0x0059   (0x0001)  
	bool                                               _f_T_S_____;                                                // 0x005A   (0x0001)  
	bool                                               _f_T_S_N_N_;                                                // 0x005B   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Sequence/Manager/SSequencesNetwork.SSequencesNetwork
/// Size: 0x0080 (128 bytes) (0x000000 - 0x000080) align 8 pad: 0x0000
struct FSSequencesNetwork
{ 
	FSSequencesNetwrokNode                             StartSequence_22_7CEC1512457C3CCF0821E1B8234E3CBD;          // 0x0000   (0x0060)  
	TArray<FSSequencesNetwrokNode>                     ProcessSequences_23_860AAF8B440C329B6E464C9DE16ADF63;       // 0x0060   (0x0010)  
	TArray<FSSequencesNetwrokNode>                     EndSequences_25_9875B20F4E97233313A01EBFF06291C0;           // 0x0070   (0x0010)  
};

/// Struct /Game/Aki/Sequence/SeqSubtitle/SSubtitleSettings.SSubtitleSettings
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 4 pad: 0x0000
struct FSSubtitleSettings
{ 
	float                                              Duration_4_C2BB819B4136D40B78A056AD00FF9C24;                // 0x0000   (0x0004)  
	float                                              FadeInSpeed_12_8A5A6B704EEDC350A9B172987245C733;            // 0x0004   (0x0004)  
	float                                              FadeOutSpeed_13_4C2EEE454315AC0FF39E8F828E04B044;           // 0x0008   (0x0004)  
	FName                                              SubtitleID_17_BD2A1FDF4BCBBCD2C5686E94246F559B;             // 0x000C   (0x000C)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SUiAnimNotifyModel.SUiAnimNotifyModel
/// Size: 0x00B9 (185 bytes) (0x000000 - 0x0000B9) align 16 pad: 0x0009
#pragma pack(push, 0x1)
struct FSUiAnimNotifyModel
{ 
	FString                                            SocketName_2_5670CA384F68A69FC00BA1AD9C9B8857;              // 0x0000   (0x0010)  
	FTransform                                         Transform_26_D8334638476F6D24389D87BFADF11D8C;              // 0x0010   (0x0030)  
	SDK_UNDEFINED(48,1208) /* TWeakObjectPtr<USkeletalMesh*> */ __um(ModelSoft_23_8EF78B9A4A27EC85D11E16B998080DD3); // 0x0040   (0x0030)  
	int32_t                                            ModelIndex_29_DE6F758A4695D9928A5933B4646F5059;             // 0x0070   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0074   (0x0004)  MISSED
	SDK_UNDEFINED(48,1209) /* TWeakObjectPtr<UPD_CharacterControllerData_C*> */ __um(MaterialData_32_EF766BA94613CE5F761D8A865D1BD0B0); // 0x0078   (0x0030)  
	FString                                            MaterialTypeName_36_738FC29143FC65A30DE85AB74009C7A8;       // 0x00A8   (0x0010)  
	TEnumAsByte<EPerformanceRoleState>                 AnimState_39_190742AD44B20F9D36FC2BBFF0F6F4E2;              // 0x00B8   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SUiAnimNotifyEffect.SUiAnimNotifyEffect
/// Size: 0x0051 (81 bytes) (0x000000 - 0x000051) align 16 pad: 0x0001
#pragma pack(push, 0x1)
struct FSUiAnimNotifyEffect
{ 
	FString                                            SocketName_2_5670CA384F68A69FC00BA1AD9C9B8857;              // 0x0000   (0x0010)  
	FTransform                                         Transform_25_D8334638476F6D24389D87BFADF11D8C;              // 0x0010   (0x0030)  
	SDK_UNDEFINED(16,1210) /* TArray<TWeakObjectPtr<UObject*>> */ __um(Effects_28_8EF78B9A4A27EC85D11E16B998080DD3); // 0x0040   (0x0010)  
	TEnumAsByte<EPerformanceRoleState>                 AnimState_31_AA736A2748EF72D6DB4A9CAE51799130;              // 0x0050   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/Server/Struct/SServerInfo.SServerInfo
/// Size: 0x0048 (72 bytes) (0x000000 - 0x000048) align 8 pad: 0x0000
struct FSServerInfo
{ 
	FString                                            IP_2_2BD8E1694ED8A660FC6CD285369CA184;                      // 0x0000   (0x0010)  
	FString                                            Port_6_DC9B6B1D457C3645C6305D9A5924E500;                    // 0x0010   (0x0010)  
	FString                                            Name_4_16B8FFB349319220FF06AD9C0F3F66F0;                    // 0x0020   (0x0010)  
	FString                                            Stream_9_685F05CF44A399E8DE4B2E8ED9075589;                  // 0x0030   (0x0010)  
	bool                                               Editor_16_9A8D71F649547E4468D379AF5CFDFA99;                 // 0x0040   (0x0001)  
	bool                                               Package_17_30D563B244651B2C7D330F848819F2CF;                // 0x0041   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0042   (0x0002)  MISSED
	int32_t                                            Order_20_DECB754B45CE78FBECB317B81273ABE0;                  // 0x0044   (0x0004)  
};

/// Struct /Game/Aki/Data/Condition/Struct/SConditionGroup.SConditionGroup
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 pad: 0x0000
struct FSConditionGroup
{ 
	FName                                              ag_N__I;                                                    // 0x0000   (0x000C)  
	TEnumAsByte<SConditionGroupType>                   ag_N__V_eu_;                                                // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
	TArray<FSCondition>                                ag_N___;                                                    // 0x0010   (0x0010)  
	FText                                              _b_b_c_y_;                                                  // 0x0020   (0x0018)  
	FText                                              ag_N___c___;                                                // 0x0038   (0x0018)  
};

/// Struct /Game/Aki/Character/Input/Structures/SInputShow.SInputShow
/// Size: 0x0066 (102 bytes) (0x000000 - 0x000066) align 8 pad: 0x0006
#pragma pack(push, 0x1)
struct FSInputShow
{ 
	TEnumAsByte<EInputAction>                          InputActionType_32_405A09014CEBF436EC9BE186461169A3;        // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            SkillId_29_75DD2CF342F572C8D314B990BFA49AF1;                // 0x0004   (0x0004)  
	FGameplayTagContainer                              BlockTag_26_3A78B26145DC9C4C38940493986D3A5E;               // 0x0008   (0x0020)  
	int32_t                                            ListenAttributeId_17_C47E9360431CC9F558063A8DFD0D8B59;      // 0x0028   (0x0004)  
	int32_t                                            ListenMaxAttributeId_19_CE8030984B2B7F9A351C388A5CCCE63C;   // 0x002C   (0x0004)  
	SDK_UNDEFINED(48,1211) /* TWeakObjectPtr<UNiagaraSystem*> */ __um(MaxAttributeEffect_40_0FDC1E42412EC92297325984CFAE4AB2); // 0x0030   (0x0030)  
	FColor                                             MaxAttributeColor_35_CB81B343416FA9FB5879E2A72342745C;      // 0x0060   (0x0004)  
	bool                                               bUseElementColor_37_15A1082745AFD064E56547A83269C9A3;       // 0x0064   (0x0001)  
	bool                                               bLongPressControlCamera_39_926D6E8445062855484838BB453FE0A9; // 0x0065   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/Input/Structures/SInputShowList.SInputShowList
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 pad: 0x0000
struct FSInputShowList
{ 
	TArray<FSInputShow>                                InputShowList_3_5D9C72294407B08B42EB5C9E3328B39E;           // 0x0000   (0x0010)  
};

/// Struct /Game/Aki/Data/Entity/Struct/SEntityConfig.SEntityConfig
/// Size: 0x029C (668 bytes) (0x000000 - 0x00029C) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSEntityConfig
{ 
	int32_t                                            ID_4_6659AE4C423D0F3E6A0386AA4A5604AF;                      // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	FString                                            Name_72_B26D5E064DC1AC529CF5F3A55205D23B;                   // 0x0008   (0x0010)  
	TEnumAsByte<EEntityType>                           EntityType_71_2394C47E42A1F7D7EDD7DEA424F6B1E0;             // 0x0018   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0019   (0x0007)  MISSED
	FText                                              Title_73_0EB141DE481709CB40FB83B67A1CC386;                  // 0x0020   (0x0018)  
	int32_t                                            ModleId_74_95E5A39544CE134984DFE2AAC76F6D1D;                // 0x0038   (0x0004)  
	bool                                               IsExchangeControl_75_C1594CF548F36E9FB926A3B4F907CB45;      // 0x003C   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x003D   (0x0003)  MISSED
	TArray<FName>                                      Tag_76_91941A2D47FC03C82C0744A2E91F783B;                    // 0x0040   (0x0010)  
	TArray<FName>                                      InteractionId_77_DCC1F42946F3A514AA16CFA86AF993AF;          // 0x0050   (0x0010)  
	int32_t                                            AiControllerId_78_99513BDD4F839C2E2F09D8AAEF48FE12;         // 0x0060   (0x0004)  
	int32_t                                            PropertyId_106_E3DC01C74B300E869FE232997AB06C86;            // 0x0064   (0x0004)  
	FName                                              StateType_80_4D4DC5DB4D653E188F578BA8217B6C6E;              // 0x0068   (0x000C)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x0074   (0x0004)  MISSED
	SDK_UNDEFINED(48,1212) /* TWeakObjectPtr<UTexture*> */ __um(MapMarkId_82_0F38650E4AE2F6683B6962AB6CC3DB0D);    // 0x0078   (0x0030)  
	class UClass*                                      SpEnergyBar_84_33BC2F9B47222701E5B1C0BCE1FFDC42;            // 0x00A8   (0x0008)  
	TEnumAsByte<ECamp>                                 Camp_85_2AF663F14731E7DB860AA8B175177A24;                   // 0x00B0   (0x0001)  
	unsigned char                                      UnknownData04_6[0x7];                                       // 0x00B1   (0x0007)  MISSED
	FString                                            remarks_86_F9312D464976DB58731BA0889BEBE1A5;                // 0x00B8   (0x0010)  
	TArray<FName>                                      Bones_87_7E17B16543415FBFF7BCFE9B4ED90E54;                  // 0x00C8   (0x0010)  
	int32_t                                            FocusPriority_88_0CFCEA5742497CF24BA50084ACC8A66C;          // 0x00D8   (0x0004)  
	unsigned char                                      UnknownData05_6[0x4];                                       // 0x00DC   (0x0004)  MISSED
	SDK_UNDEFINED(80,1213) /* TMap<int32_t, int32_t> */ __um(DropConfig_105_2935A7B8441A09A03E55E69BC35B464C);     // 0x00E0   (0x0050)  
	int32_t                                            EntityPropertyID_109_051EBD4143DE5BCAA1CB70A0F02072C8;      // 0x0130   (0x0004)  
	int32_t                                            RageModeId_207_E210D112494927E6564041B6ABEAC93A;            // 0x0134   (0x0004)  
	int32_t                                            HardnessModeId_113_CA4544E14763A50FFDFAEF99EF63BAB7;        // 0x0138   (0x0004)  
	bool                                               BeHitIgnoreRotate_116_AE3B72E64818CD67ADD73F90DE88D394;     // 0x013C   (0x0001)  
	unsigned char                                      UnknownData06_6[0x3];                                       // 0x013D   (0x0003)  MISSED
	SDK_UNDEFINED(80,1214) /* TMap<int32_t, int32_t> */ __um(SceneOwnerDropConfig_122_0F64E73342AEFC57D77A0988070042FF); // 0x0140   (0x0050)  
	TEnumAsByte<EBossStateViewType>                    BossStateViewType_127_8DE90F9F417E25B7A5D7C382AAF18749;     // 0x0190   (0x0001)  
	unsigned char                                      UnknownData07_6[0x7];                                       // 0x0191   (0x0007)  MISSED
	TArray<FSHardnessStageInfo>                        HardnessPercentStage_142_4D8854DD4ECAB335C33DBC977E98DC61;  // 0x0198   (0x0010)  
	TEnumAsByte<EHeadStateViewType>                    HeadStateViewType_128_820D156B4EE79E9195C2E09FC6848983;     // 0x01A8   (0x0001)  
	unsigned char                                      UnknownData08_6[0x3];                                       // 0x01A9   (0x0003)  MISSED
	FName                                              HeadStateSocketName_145_2E7FF51240460C655503F7A4C808BD8A;   // 0x01AC   (0x000C)  
	int32_t                                            HeadStateZOffset_149_BBDFAA274B6CE44BDA98E79A4C9BF071;      // 0x01B8   (0x0004)  
	int32_t                                            HeadStateForwardOffset_216_C8E215DD4A907B5B3F5F96B38BA7E52E; // 0x01BC   (0x0004)  
	TEnumAsByte<EGameplayFunctionType>                 SceneItemFunctionType_157_22EB97294BCCDF8406C411BA0692F4A0; // 0x01C0   (0x0001)  
	unsigned char                                      UnknownData09_6[0x3];                                       // 0x01C1   (0x0003)  MISSED
	int32_t                                            SceneItemFunctionID_160_CB6B662D4722FEE78BAAAD858147D950;   // 0x01C4   (0x0004)  
	FSAiWeaponSocket                                   AiWeaponSocket_164_90BA03D44705CEA04405C4BC968378C0;        // 0x01C8   (0x0058)  
	int32_t                                            AiWeaponConfigId_173_C06D5BBB444B6C36468EFE9844069F4E;      // 0x0220   (0x0004)  
	int32_t                                            ForceLockOnCoefficient_177_AC6166B748E9BC1155CE83BF0F2DD115; // 0x0224   (0x0004)  
	int32_t                                            NpcMessageId_182_9E4D7A2B4A7DE3F4524E51AFF1E9CB03;          // 0x0228   (0x0004)  
	unsigned char                                      UnknownData10_6[0x4];                                       // 0x022C   (0x0004)  MISSED
	SDK_UNDEFINED(80,1215) /* TMap<FString, FString> */ __um(param_190_2CD6BBD947E1A47E268DB6A8741C18E7);          // 0x0230   (0x0050)  
	int32_t                                            AOILOD_204_0D1BF9CD48BEBC443C0D6888F7F4D945;                // 0x0280   (0x0004)  
	unsigned char                                      UnknownData11_6[0x4];                                       // 0x0284   (0x0004)  MISSED
	TArray<int64_t>                                    BornBuff_197_E3103F9D4AF6DC5F7B378E88898F8336;              // 0x0288   (0x0010)  
	float                                              AffectDistance_211_D2775C164C7B583F6350DAB3836D6573;        // 0x0298   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/Parkour/SParkourPointInfo.SParkourPointInfo
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 4 pad: 0x0000
struct FSParkourPointInfo
{ 
	FVector                                            Location_2_BC1A6D2B47024D0A9EF27D86230277C6;                // 0x0000   (0x000C)  
	float                                              Radius_9_DED3FB254692D295D78650AC8E019DEB;                  // 0x000C   (0x0004)  
	float                                              ModifiedTime_10_E7781AF5495CD335E79DFD97BCC449E6;           // 0x0010   (0x0004)  
	int32_t                                            BuffId_11_EED967C9485F0CD1FA3BAB8F9584E8D8;                 // 0x0014   (0x0004)  
};

/// Struct /Game/Aki/Data/LevelGamePlay/StrikeResponse/Stuct/SStrikeInfo.SStrikeInfo
/// Size: 0x000A (10 bytes) (0x000000 - 0x00000A) align 4 pad: 0x0002
#pragma pack(push, 0x1)
struct FSStrikeInfo
{ 
	TEnumAsByte<ECamp>                                 Striker_11_77EAE28142006D070E2138B652278418;                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              SrikeDirection_9_1526E71943F0F88E8059FBBF61FD09EC;          // 0x0004   (0x0004)  
	TEnumAsByte<SrikeElement>                          Element_16_C3DA1AF64CBBBF6C6D3B1096B1DA87A9;                // 0x0008   (0x0001)  
	TEnumAsByte<StrikeType>                            SrikeType_19_0599865F496F666FDAED5292E2C2AF54;              // 0x0009   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/GamePlay/Cipher/SCipherGameplay.SCipherGameplay
/// Size: 0x0058 (88 bytes) (0x000000 - 0x000058) align 8 pad: 0x0000
struct FSCipherGameplay
{ 
	FName                                              ID_2_F9D081D64C52D25D678ADCB939D73599;                      // 0x0000   (0x000C)  
	TEnumAsByte<ECipherGameplayType>                   _______W_;                                                  // 0x000C   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x000D   (0x0003)  MISSED
	FString                                            cknx___x_;                                                  // 0x0010   (0x0010)  
	FString                                            pbqN___x_;                                                  // 0x0020   (0x0010)  
	FName                                              _____b_R_N_NI;                                              // 0x0030   (0x000C)  
	FName                                              ____1Y___N_NI;                                              // 0x003C   (0x000C)  
	FString                                            Tips_21_DF520F63407DA0C62B626796D19A0721;                   // 0x0048   (0x0010)  
};

/// Struct /Game/Aki/Data/Quest/Structures/SQuestRequest.SQuestRequest
/// Size: 0x0028 (40 bytes) (0x000000 - 0x000028) align 8 pad: 0x0000
struct FSQuestRequest
{ 
	FName                                              QuestID_7_D1CE323A4B68C8775EFE688D32245A4D;                 // 0x0000   (0x000C)  
	FName                                              QuestStepID_8_6F9258AF4F872CF33FF3FC9A8671E3ED;             // 0x000C   (0x000C)  
	class UDataTable*                                  QuestData_9_A22C6AC242EF8804245B008DF79CF68C;               // 0x0018   (0x0008)  
	TEnumAsByte<EQuestHandleType>                      QuesetHandleType_12_271AFB814CD10276702F1E8E793D477E;       // 0x0020   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0021   (0x0003)  MISSED
	float                                              QuestDelay_15_D63AEC39436DE8E0F6F5859D67664A84;             // 0x0024   (0x0004)  
};

/// Struct /Game/Aki/Data/Interaction/Struct/SInteractionLimit.SInteractionLimit
/// Size: 0x000C (12 bytes) (0x000000 - 0x00000C) align 4 pad: 0x0000
struct FSInteractionLimit
{ 
	TEnumAsByte<EInteractOptionLimit>                  LimitType_2_F22CA8324FE67729BC0B479C5553A77D;               // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            Times_6_DA576DA24A42428AC63321AE5F10CC8D;                   // 0x0004   (0x0004)  
	float                                              Duration_17_BBB02F2344204D97F0188C9D04B79726;               // 0x0008   (0x0004)  
};

/// Struct /Game/Aki/Data/Interaction/Struct/SInteractionOption.SInteractionOption
/// Size: 0x00F1 (241 bytes) (0x000000 - 0x0000F1) align 8 pad: 0x0001
#pragma pack(push, 0x1)
struct FSInteractionOption
{ 
	FText                                              __y__Q___;                                                  // 0x0000   (0x0018)  
	TEnumAsByte<EInteractOptionType>                   ___W_;                                                      // 0x0018   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0019   (0x0003)  MISSED
	FName                                              ____ag_N__I;                                                // 0x001C   (0x000C)  
	FSQuestRequest                                     _N_R_;                                                      // 0x0028   (0x0028)  
	FName                                              gR__I;                                                      // 0x0050   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x005C   (0x0004)  MISSED
	SDK_UNDEFINED(48,1216) /* TWeakObjectPtr<UDataTable*> */ __um(gR__D__n_);                                      // 0x0060   (0x0030)  
	FString                                            Plot_32_3EE3D4E94D83169599EC2686B8A23708;                   // 0x0090   (0x0010)  
	FName                                              _N_NI;                                                      // 0x00A0   (0x000C)  
	bool                                               _f_TsQ___N_NLub__;                                          // 0x00AC   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x00AD   (0x0003)  MISSED
	FSInteractionLimit                                 _N_N__y_P_6R_;                                              // 0x00B0   (0x000C)  
	unsigned char                                      UnknownData03_6[0x4];                                       // 0x00BC   (0x0004)  MISSED
	SDK_UNDEFINED(48,1217) /* TWeakObjectPtr<UTexture2D*> */ __um(_V_h_____);                                      // 0x00C0   (0x0030)  
	TEnumAsByte<EInteractionIconType>                  _N_N_V_h___W_;                                              // 0x00F0   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/Interaction/Struct/SInteractionConfig.SInteractionConfig
/// Size: 0x00CA (202 bytes) (0x000000 - 0x0000CA) align 8 pad: 0x0002
#pragma pack(push, 0x1)
struct FSInteractionConfig
{ 
	FName                                              ID_4_F9D5FFCE46F084732D40B49A6F053687;                      // 0x0000   (0x000C)  
	FName                                              __I;                                                        // 0x000C   (0x000C)  
	bool                                               _f_T___R___S_;                                              // 0x0018   (0x0001)  
	TEnumAsByte<EInteractionType>                      _N_N___W_;                                                  // 0x0019   (0x0001)  
	unsigned char                                      UnknownData00_6[0x6];                                       // 0x001A   (0x0006)  MISSED
	TArray<FSInteractionOption>                        _N_N__y____;                                                // 0x0020   (0x0010)  
	FName                                              _N_NS;                                                      // 0x0030   (0x000C)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x003C   (0x0004)  MISSED
	SDK_UNDEFINED(48,1218) /* TWeakObjectPtr<UDataTable*> */ __um(_N_NS);                                          // 0x0040   (0x0030)  
	FName                                              _N_Nag_N__I;                                                // 0x0070   (0x000C)  
	float                                              _N_N___V_;                                                  // 0x007C   (0x0004)  
	FText                                              _c___;                                                      // 0x0080   (0x0018)  
	SDK_UNDEFINED(48,1219) /* TWeakObjectPtr<UTexture2D*> */ __um(_V_h_____);                                      // 0x0098   (0x0030)  
	TEnumAsByte<EInteractionIconType>                  _V_h___W_;                                                  // 0x00C8   (0x0001)  
	bool                                               _f_T_m_R_y;                                                 // 0x00C9   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/Parkour/SParkourConfig.SParkourConfig
/// Size: 0x00F0 (240 bytes) (0x000000 - 0x0000F0) align 8 pad: 0x0000
struct FSParkourConfig
{ 
	FName                                              ConfigName_9_E6DDA147487673F585147C8D7F17EBA6;              // 0x0000   (0x000C)  
	bool                                               IstoStart_1_A1A9EF794863920C43E4DFB781B39949;               // 0x000C   (0x0001)  
	bool                                               IsRequireToEnd_39_B08602CF41D4921620F7C1A874D15B06;         // 0x000D   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x000E   (0x0002)  MISSED
	TArray<FSParkourPointInfo>                         ParkourPoints_5_72CEA0AF402E809A69DC70B0BC11D22F;           // 0x0010   (0x0010)  
	int32_t                                            CheckPointsRequire_12_2A6395ED409CA8E1CBF73EAEFE40C508;     // 0x0020   (0x0004)  
	unsigned char                                      UnknownData01_6[0x4];                                       // 0x0024   (0x0004)  MISSED
	SDK_UNDEFINED(48,1220) /* TWeakObjectPtr<UEffectModelBase*> */ __um(CheckPointResource_40_21C66EB4448641CC3391699C432EEFC5); // 0x0028   (0x0030)  
	SDK_UNDEFINED(48,1221) /* TWeakObjectPtr<UEffectModelBase*> */ __um(CheckPointsDestroyRes_41_8347C1044DCFC2AF496D69BDBD1F439F); // 0x0058   (0x0030)  
	SDK_UNDEFINED(48,1222) /* TWeakObjectPtr<UEffectModelBase*> */ __um(StartResource_42_3A450A2942F81A8F43E519B3034C6B75); // 0x0088   (0x0030)  
	SDK_UNDEFINED(48,1223) /* TWeakObjectPtr<UEffectModelBase*> */ __um(EndResource_43_397BBED54F5D6F2346B8FDB55EEB027F); // 0x00B8   (0x0030)  
	float                                              DefaultBuffId_35_26D821E34B8C1D796885CDB95EADADF6;          // 0x00E8   (0x0004)  
	float                                              DefaultModifiedTime_36_0AC7A1F44D1AA5FAC39A019A8D444772;    // 0x00EC   (0x0004)  
};

/// Struct /Game/Aki/Character/BaseCharacter/Camera/SCameraConfig.SCameraConfig
/// Size: 0x0731 (1841 bytes) (0x000000 - 0x000731) align 8 pad: 0x0001
#pragma pack(push, 0x1)
struct FSCameraConfig
{ 
	TEnumAsByte<EFightCameraType>                      Type_49_64F042F744CF2C4652C8C48399F51487;                   // 0x0000   (0x0001)  
	bool                                               _f_T__n_____M_n__;                                          // 0x0001   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x0002   (0x0002)  MISSED
	FGameplayTag                                       Tag_52_1250E0A24D6B5FC23E12D1B35A2EEC19;                    // 0x0004   (0x000C)  
	bool                                               P;                                                          // 0x0010   (0x0001)  
	bool                                               Kb_g_uHe_;                                                  // 0x0011   (0x0001)  
	unsigned char                                      UnknownData01_6[0x2];                                       // 0x0012   (0x0002)  MISSED
	int32_t                                            _OHQ___;                                                    // 0x0014   (0x0004)  
	float                                              _meQ_e___;                                                  // 0x0018   (0x0004)  
	FSBaseCurve                                        _meQ_f___;                                                  // 0x001C   (0x0008)  
	float                                              _m_Q_e___;                                                  // 0x0024   (0x0004)  
	FSBaseCurve                                        _m_Q_f___;                                                  // 0x0028   (0x0008)  
	bool                                               _T_u___R__4Y_;                                              // 0x0030   (0x0001)  
	bool                                               _T_uM;                                                      // 0x0031   (0x0001)  
	bool                                               _T_u_b___Ock__4Y_;                                          // 0x0032   (0x0001)  
	bool                                               _T_u______4Y_;                                              // 0x0033   (0x0001)  
	bool                                               _T_u_y_R___R__4Y_;                                          // 0x0034   (0x0001)  
	bool                                               _T_u;                                                       // 0x0035   (0x0001)  
	unsigned char                                      UnknownData02_6[0x2];                                       // 0x0036   (0x0002)  MISSED
	TArray<FString>                                    _____p_T_y_;                                                // 0x0038   (0x0010)  
	SDK_UNDEFINED(80,1224) /* TMap<TEnumAsByte<EFightCameraDefault>, float> */ __um(_W_x_);                        // 0x0048   (0x0050)  
	SDK_UNDEFINED(80,1225) /* TMap<TEnumAsByte<EFightCameraAdjust>, float> */ __um(_b___Ock_);                     // 0x0098   (0x0050)  
	SDK_UNDEFINED(80,1226) /* TMap<TEnumAsByte<EFightCameraAuto>, float> */ __um(___R__4Y_);                       // 0x00E8   (0x0050)  
	SDK_UNDEFINED(80,1227) /* TMap<TEnumAsByte<EFightCameraFocus>, float> */ __um(______4Y_);                      // 0x0138   (0x0050)  
	SDK_UNDEFINED(80,1228) /* TMap<TEnumAsByte<EFightCameraInput>, float> */ __um(__4Y__eQ_);                      // 0x0188   (0x0050)  
	SDK_UNDEFINED(80,1229) /* TMap<TEnumAsByte<EFightCameraModify>, float> */ __um(M);                             // 0x01D8   (0x0050)  
	SDK_UNDEFINED(80,1230) /* TMap<TEnumAsByte<EFightCameraGuide>, float> */ __um(______4Y_);                      // 0x0228   (0x0050)  
	SDK_UNDEFINED(80,1231) /* TMap<TEnumAsByte<EFightCameraExplore>, float> */ __um(___V__4Y_);                    // 0x0278   (0x0050)  
	SDK_UNDEFINED(80,1232) /* TMap<TEnumAsByte<EFightCameraDialogue>, float> */ __um(______4Y_);                   // 0x02C8   (0x0050)  
	SDK_UNDEFINED(80,1233) /* TMap<TEnumAsByte<EFightCameraClimb>, float> */ __um(null);                           // 0x0318   (0x0050)  
	SDK_UNDEFINED(80,1234) /* TMap<TEnumAsByte<EFightCameraSidestep>, float> */ __um(_y_R___R__4Y_);               // 0x0368   (0x0050)  
	bool                                               _f_T;                                                       // 0x03B8   (0x0001)  
	unsigned char                                      UnknownData03_6[0x7];                                       // 0x03B9   (0x0007)  MISSED
	SDK_UNDEFINED(80,1235) /* TMap<TEnumAsByte<EFightCameraDefault>, FSBaseCurve> */ __um(_W_x_f__M_n__);          // 0x03C0   (0x0050)  
	SDK_UNDEFINED(80,1236) /* TMap<TEnumAsByte<EFightCameraAdjust>, FSBaseCurve> */ __um(_b___Ock_f__M_n__);       // 0x0410   (0x0050)  
	SDK_UNDEFINED(80,1237) /* TMap<TEnumAsByte<EFightCameraAuto>, FSBaseCurve> */ __um(___R__4Y_f__M_n__);         // 0x0460   (0x0050)  
	SDK_UNDEFINED(80,1238) /* TMap<TEnumAsByte<EFightCameraFocus>, FSBaseCurve> */ __um(______4Y_f__M_n__);        // 0x04B0   (0x0050)  
	SDK_UNDEFINED(80,1239) /* TMap<TEnumAsByte<EFightCameraInput>, FSBaseCurve> */ __um(__4Y__eQ_f__M_n__);        // 0x0500   (0x0050)  
	SDK_UNDEFINED(80,1240) /* TMap<TEnumAsByte<EFightCameraModify>, FSBaseCurve> */ __um(M);                       // 0x0550   (0x0050)  
	SDK_UNDEFINED(80,1241) /* TMap<TEnumAsByte<EFightCameraGuide>, FSBaseCurve> */ __um(______4Y_f__M_n__);        // 0x05A0   (0x0050)  
	SDK_UNDEFINED(80,1242) /* TMap<TEnumAsByte<EFightCameraExplore>, FSBaseCurve> */ __um(___V__4Y_f__M_n__);      // 0x05F0   (0x0050)  
	SDK_UNDEFINED(80,1243) /* TMap<TEnumAsByte<EFightCameraDialogue>, FSBaseCurve> */ __um(______4Y_f__M_n__);     // 0x0640   (0x0050)  
	SDK_UNDEFINED(80,1244) /* TMap<TEnumAsByte<EFightCameraClimb>, FSBaseCurve> */ __um(null);                     // 0x0690   (0x0050)  
	SDK_UNDEFINED(80,1245) /* TMap<TEnumAsByte<EFightCameraSidestep>, FSBaseCurve> */ __um(_y_R___R__4Y_f__M_n__); // 0x06E0   (0x0050)  
	bool                                               _f_T_r_z___n_e___;                                          // 0x0730   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/Camera/SCamera_Setting.SCamera_Setting
/// Size: 0x00A4 (164 bytes) (0x000000 - 0x0000A4) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSCamera_Setting
{ 
	TEnumAsByte<EFightCameraType>                      Type_88_23ED783447D86D6D38C085B47B77A25A;                   // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	FGameplayTag                                       Tag_92_7ABDCAFE44668F3229C85DA930129F5F;                    // 0x0004   (0x000C)  
	float                                              _________;                                                  // 0x0010   (0x0004)  
	float                                              _________OHQ___;                                            // 0x0014   (0x0004)  
	float                                              null;                                                       // 0x0018   (0x0004)  
	float                                              null0;                                                      // 0x001C   (0x0004)  
	float                                              null1;                                                      // 0x0020   (0x0004)  
	float                                              null2;                                                      // 0x0024   (0x0004)  
	float                                              _S_R_____;                                                  // 0x0028   (0x0004)  
	FVector                                            __4YOP_y_;                                                  // 0x002C   (0x000C)  
	float                                              __4YOP_y_OHQ___;                                            // 0x0038   (0x0004)  
	FVector                                            _v_g__OP_y_;                                                // 0x003C   (0x000C)  
	float                                              _v_g__OP_y_OHQ___;                                          // 0x0048   (0x0004)  
	float                                              __eQ_r___v_g_________;                                      // 0x004C   (0x0004)  
	float                                              null3;                                                      // 0x0050   (0x0004)  
	float                                              _v_g_________OHQ___;                                        // 0x0054   (0x0004)  
	float                                              null4;                                                      // 0x0058   (0x0004)  
	float                                              null5;                                                      // 0x005C   (0x0004)  
	float                                              FOV_39_422894614EAA53AEC68885B99427E1C8;                    // 0x0060   (0x0004)  
	float                                              F;                                                          // 0x0064   (0x0004)  
	float                                              FadeInTime_72_B1812B7045BF2F8860B3159C6A284D38;             // 0x0068   (0x0004)  
	float                                              FadeOutTime_73_783905844B0D66788CAF1F99F055BF9F;            // 0x006C   (0x0004)  
	bool                                               AutoCamera_79_55370C1D4396F2DAAD47B184E65A1EC1;             // 0x0070   (0x0001)  
	bool                                               ModifyCamera_81_BF0809474ADE2F01BAD4CC802C6F6528;           // 0x0071   (0x0001)  
	bool                                               AdjustCamera_83_0BBB8447450AFA6FA7D1DEB18882D13D;           // 0x0072   (0x0001)  
	bool                                               FocusCamera_85_4CA16B0D4BC8B5EAD654F695D7DE6D17;            // 0x0073   (0x0001)  
	float                                              ___ROPl_;                                                   // 0x0074   (0x0004)  
	bool                                               _f_T_T_u___R_O_N___Ock_;                                    // 0x0078   (0x0001)  
	unsigned char                                      UnknownData01_6[0x7];                                       // 0x0079   (0x0007)  MISSED
	TArray<float>                                      ___R_O_N___Spe_;                                            // 0x0080   (0x0010)  
	float                                              ___R_O_N___Spe_OHQ___;                                      // 0x0090   (0x0004)  
	float                                              ______4YOP___;                                              // 0x0094   (0x0004)  
	float                                              ______4YOP___OHQ___;                                        // 0x0098   (0x0004)  
	float                                              ___R__4Y___Y__4ls_OP_y_;                                    // 0x009C   (0x0004)  
	float                                              ___R__4Y___Y__4ls_OP_y_OHQ___;                              // 0x00A0   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/Camera/SCamera_NewConfig.SCamera_NewConfig
/// Size: 0x0694 (1684 bytes) (0x000000 - 0x000694) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSCamera_NewConfig
{ 
	FSCamera_Setting                                   _W_x__4Y_;                                                  // 0x0000   (0x00A8)  
	FSCamera_Setting                                   _b_e__4Y_;                                                  // 0x00A8   (0x00A8)  
	FSCamera_Setting                                   _y_R__4Y_;                                                  // 0x0150   (0x00A8)  
	FSCamera_Setting                                   _Q_R__4Y_;                                                  // 0x01F8   (0x00A8)  
	FSCamera_Setting                                   null;                                                       // 0x02A0   (0x00A8)  
	FSCamera_Setting                                   _X_X_y_R__4Y_;                                              // 0x0348   (0x00A8)  
	FSCamera_Setting                                   _8n_l__4Y_;                                                 // 0x03F0   (0x00A8)  
	FSCamera_Setting                                   zz_N__4Y_;                                                  // 0x0498   (0x00A8)  
	FSCamera_Setting                                   _w_Q__4Y_;                                                  // 0x0540   (0x00A8)  
	FSCamera_Setting                                   _y_R___Q__4Y_;                                              // 0x05E8   (0x00A8)  
	float                                              _W_x__4Y_v_g________OP_y;                                   // 0x0690   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/Entity/Struct/SModelConfig.SModelConfig
/// Size: 0x03AA (938 bytes) (0x000000 - 0x0003AA) align 8 pad: 0x0002
#pragma pack(push, 0x1)
struct FSModelConfig
{ 
	int32_t                                            ID_3_6A014D4F486091DDAF9D4D9D32B8C4FF;                      // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	SDK_UNDEFINED(48,1246) /* TWeakObjectPtr<UClass*> */ __um(___V_);                                              // 0x0008   (0x0030)  
	SDK_UNDEFINED(48,1247) /* TWeakObjectPtr<USkeletalMesh*> */ __um(Q__hSO_);                                     // 0x0038   (0x0030)  
	SDK_UNDEFINED(16,1248) /* TArray<TWeakObjectPtr<USkeletalMesh*>> */ __um(P_Q__hSO_);                           // 0x0068   (0x0010)  
	FSoftObjectPath                                    DA_177_AB8FDE124B35121D6F1FCF9EB0CD09AD;                    // 0x0078   (0x0020)  
	SDK_UNDEFINED(48,1249) /* TWeakObjectPtr<UClass*> */ __um(_R_u___V_);                                          // 0x0098   (0x0030)  
	FString                                            _c___;                                                      // 0x00C8   (0x0010)  
	SDK_UNDEFINED(80,1250) /* TMap<FGameplayTag, FSoftObjectPath> */ __um(_R_u_Rh__);                              // 0x00D8   (0x0050)  
	TArray<FString>                                    BattleSockets_63_FB5D6DAC483A857CFEEDEFACB2756F1D;          // 0x0128   (0x0010)  
	TArray<FString>                                    NormalSockets_64_AE83EB754176514E8D8DAE8521A609ED;          // 0x0138   (0x0010)  
	SDK_UNDEFINED(80,1251) /* TMap<FGameplayTag, FSoftObjectPath> */ __um(Y___Q__hSO_Rh__);                        // 0x0148   (0x0050)  
	SDK_UNDEFINED(80,1252) /* TMap<FGameplayTag, FSoftObjectPath> */ __um(8___yrHe_Rh__);                          // 0x0198   (0x0050)  
	SDK_UNDEFINED(80,1253) /* TMap<FGameplayTag, FSoftObjectPath> */ __um(_S_SyrHe_Rh__);                          // 0x01E8   (0x0050)  
	SDK_UNDEFINED(80,1254) /* TMap<FGameplayTag, FSNiagaraParam> */ __um(___uyrHe8____Spe_);                       // 0x0238   (0x0050)  
	SDK_UNDEFINED(80,1255) /* TMap<FGameplayTag, FSNiagaraParam> */ __um(___uyrHe_S_S_Spe_);                       // 0x0288   (0x0050)  
	FSoftObjectPath                                    _Wof_N_Nir_;                                                // 0x02D8   (0x0020)  
	SDK_UNDEFINED(80,1256) /* TMap<FGameplayTag, EKuroSceneInteractionState> */ __um(_Wof_N_Nir_r___Rh__);         // 0x02F8   (0x0050)  
	SDK_UNDEFINED(80,1257) /* TMap<FGameplayTag, TEnumAsByte<ESceneInteractionEffect>> */ __um(_Wof_N_NiryrHe_Rh__); // 0x0348   (0x0050)  
	bool                                               IsHiddenWithCamera_180_E4B768F74ED8490D4EF4F7AC52E7AF3E;    // 0x0398   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0399   (0x0003)  MISSED
	float                                              ModelAlpha_184_38E22542455C4F4C5E1EDE82183BF375;            // 0x039C   (0x0004)  
	int32_t                                            _TW_Z;                                                      // 0x03A0   (0x0004)  
	float                                              _l___e_v_bGS_____;                                          // 0x03A4   (0x0004)  
	TEnumAsByte<EBodyType>                             SO_W___W_;                                                  // 0x03A8   (0x0001)  
	bool                                               _N_______;                                                  // 0x03A9   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SBulletTailEffect.SBulletTailEffect
/// Size: 0x0034 (52 bytes) (0x000000 - 0x000034) align 16 pad: 0x0004
#pragma pack(push, 0x1)
struct FSBulletTailEffect
{ 
	FTransform                                         P_9__b__yrHeMOn__v__OP_y_;                                  // 0x0000   (0x0030)  
	float                                              P_9__b__yrHe_v___Q_N_b_S_Q_e____;                           // 0x0030   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Character/BaseCharacter/SBulletDataEffect.SBulletDataEffect
/// Size: 0x0048 (72 bytes) (0x000000 - 0x000048) align 8 pad: 0x0000
struct FSBulletDataEffect
{ 
	SDK_UNDEFINED(48,1258) /* TWeakObjectPtr<UClass*> */ __um(_S_Q__O__);                                          // 0x0000   (0x0030)  
	int32_t                                            null;                                                       // 0x0030   (0x0004)  
	float                                              _S_QyrHe_u_bMOn_OP_y_;                                      // 0x0034   (0x0004)  
	TArray<FSBulletTailEffect>                         P_9__b__yrHe_;                                              // 0x0038   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SBulletDataTime.SBulletDataTime
/// Size: 0x0038 (56 bytes) (0x000000 - 0x000038) align 8 pad: 0x0000
struct FSBulletDataTime
{ 
	bool                                               _f_T_S____q__T_;                                            // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	FSTimeScale                                        _e_Q_____;                                                  // 0x0008   (0x0018)  
	FSTimeScale                                        _S_Q_____;                                                  // 0x0020   (0x0018)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SBulletGE.SBulletGE
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 8 pad: 0x0000
struct FSBulletGE
{ 
	SDK_UNDEFINED(48,1259) /* TWeakObjectPtr<UClass*> */ __um(G);                                                  // 0x0000   (0x0030)  
	FKuroGameplayParameterContainer                    G0;                                                         // 0x0030   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SBulletDataExe.SBulletDataExe
/// Size: 0x0090 (144 bytes) (0x000000 - 0x000090) align 8 pad: 0x0000
struct FSBulletDataExe
{ 
	SDK_UNDEFINED(48,1260) /* TWeakObjectPtr<UClass*> */ __um(_T_NgbL______);                                      // 0x0000   (0x0030)  
	SDK_UNDEFINED(48,1261) /* TWeakObjectPtr<UClass*> */ __um(_f_egbL______);                                      // 0x0030   (0x0030)  
	TArray<FSBulletGE>                                 _T_N_T___e_Q_____uG;                                        // 0x0060   (0x0010)  
	TArray<FSBulletGE>                                 _T_N_T___S_Q_____uG;                                        // 0x0070   (0x0010)  
	TArray<FSBulletGE>                                 ____b__Y__G;                                                // 0x0080   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SBulletDataMain.SBulletDataMain
/// Size: 0x02C0 (704 bytes) (0x000000 - 0x0002C0) align 8 pad: 0x0000
struct FSBulletDataMain
{ 
	FName                                              P_9__T_y_;                                                  // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FSBulletDataBase                                   _W_x__n__;                                                  // 0x0010   (0x00D8)  
	FSBulletDataMove                                   _y_R__n__;                                                  // 0x00E8   (0x0090)  
	FSBulletDataEffect                                 He_g__n__;                                                  // 0x0178   (0x0048)  
	FSBulletDataTime                                   _e_______;                                                  // 0x01C0   (0x0038)  
	FSBulletDataCollision                              _x_d__n__;                                                  // 0x01F8   (0x0010)  
	FSBulletDataExe                                    gbL______;                                                  // 0x0208   (0x0090)  
	FSBulletDataScale                                  ___e__n__;                                                  // 0x0298   (0x0018)  
	TArray<FSBulletDataChild>                          P_P_9__;                                                    // 0x02B0   (0x0010)  
};

/// Struct /Game/Aki/Render/RuntimeBP/StateMachineEffect/STransitionLinearColorIndexGroup.STransitionLinearColorIndexGroup
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 pad: 0x0000
struct FSTransitionLinearColorIndexGroup
{ 
	SDK_UNDEFINED(80,1262) /* TMap<FName, FLinearColor> */ __um(LinearColorValues_10_37BFEC824415DE83E0F446B13C6BF3DC); // 0x0000   (0x0050)  
};

/// Struct /Game/Aki/Render/RuntimeBP/StateMachineEffect/STransitionFloatIndexGroup.STransitionFloatIndexGroup
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 pad: 0x0000
struct FSTransitionFloatIndexGroup
{ 
	SDK_UNDEFINED(80,1263) /* TMap<FName, float> */    __um(FloatValues_8_37BFEC824415DE83E0F446B13C6BF3DC);       // 0x0000   (0x0050)  
};

/// Struct /Game/Aki/Render/RuntimeBP/StateMachineEffect/SEffectStateLinearColorCurve.SEffectStateLinearColorCurve
/// Size: 0x0440 (1088 bytes) (0x000000 - 0x000440) align 8 pad: 0x0000
struct FSEffectStateLinearColorCurve
{ 
	FKuroCurveLinearColor                              PreLinearColorCurve_12_AF0BD6F04B2B003BC6AF93A995D4C23C;    // 0x0000   (0x0220)  
	FKuroCurveLinearColor                              LoopLinearColorCurve_13_9F3A57914601B0BEA281CEBA57FB01F9;   // 0x0220   (0x0220)  
};

/// Struct /Game/Aki/Render/RuntimeBP/StateMachineEffect/SStateBasedEffectLinearColorCurveSection.SStateBasedEffectLinearColorCurveSection
/// Size: 0x0490 (1168 bytes) (0x000000 - 0x000490) align 8 pad: 0x0000
struct FSStateBasedEffectLinearColorCurveSection
{ 
	FSEffectStateLinearColorCurve                      DefaultCurveInfo_2_0CBEFA9548D4F820144755924BAF7B94;        // 0x0000   (0x0440)  
	SDK_UNDEFINED(80,1264) /* TMap<int32_t, FSEffectStateLinearColorCurve> */ __um(OverrideSectionCurveInfo_7_98A063064813636F166D0E95093A5997); // 0x0440   (0x0050)  
};

/// Struct /Game/Aki/Render/RuntimeBP/StateMachineEffect/SEffectStateFloatCurve.SEffectStateFloatCurve
/// Size: 0x0120 (288 bytes) (0x000000 - 0x000120) align 8 pad: 0x0000
struct FSEffectStateFloatCurve
{ 
	FKuroCurveFloat                                    PreFloatCurve_8_AF0BD6F04B2B003BC6AF93A995D4C23C;           // 0x0000   (0x0090)  
	FKuroCurveFloat                                    LoopFloatCurve_9_9F3A57914601B0BEA281CEBA57FB01F9;          // 0x0090   (0x0090)  
};

/// Struct /Game/Aki/Render/RuntimeBP/StateMachineEffect/SStateBasedEffectFloatCurveSection.SStateBasedEffectFloatCurveSection
/// Size: 0x0170 (368 bytes) (0x000000 - 0x000170) align 8 pad: 0x0000
struct FSStateBasedEffectFloatCurveSection
{ 
	FSEffectStateFloatCurve                            DefaultCurveInfo_2_0CBEFA9548D4F820144755924BAF7B94;        // 0x0000   (0x0120)  
	SDK_UNDEFINED(80,1265) /* TMap<int32_t, FSEffectStateFloatCurve> */ __um(OverrideSectionCurveInfo_7_76CD87F44453715D0AE8618BC17D5D4B); // 0x0120   (0x0050)  
};

/// Struct /Game/Aki/AI/AIFunctionCommon/KFCS_WandersData/SCamp.SCamp
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 pad: 0x0000
struct FSCamp
{ 
	TArray<int32_t>                                    Value_6_7CB44F0C4069567E743F6F94A60D9041;                   // 0x0000   (0x0010)  
};

/// Struct /Game/Aki/Data/Role/Struct/SRoleQualityInfo.SRoleQualityInfo
/// Size: 0x0080 (128 bytes) (0x000000 - 0x000080) align 8 pad: 0x0000
struct FSRoleQualityInfo
{ 
	FName                                              _T___T_y_;                                                  // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	SDK_UNDEFINED(48,1266) /* TWeakObjectPtr<UTexture2D*> */ __um(_T__I);                                          // 0x0010   (0x0030)  
	SDK_UNDEFINED(48,1267) /* TWeakObjectPtr<UTexture2D*> */ __um(aSLr_T____FhI);                                  // 0x0040   (0x0030)  
	FLinearColor                                       _T____r__;                                                  // 0x0070   (0x0010)  
};

/// Struct /Game/Aki/Data/GMOrder/Struct/SGMOrderInfo.SGMOrderInfo
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 pad: 0x0000
struct FSGMOrderInfo
{ 
	FName                                              Name_2_ACE9640440A54B1651358DA9E6525FCC;                    // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FString                                            Code_20_3C09096F469C263A9552C289B938F77C;                   // 0x0010   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SFloatPayload.SFloatPayload
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 pad: 0x0000
struct FSFloatPayload
{ 
	TArray<float>                                      FloatArray_3_C287E81D4FD938F363FB4B9532264861;              // 0x0000   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SEffectType.SEffectType
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 4 pad: 0x0000
struct FSEffectType
{ 
	TEnumAsByte<EAttributeEffectType>                  ___W_;                                                      // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	int32_t                                            Id_5_0D2332CC4BFE7A8FEE6343B77956876E;                      // 0x0004   (0x0004)  
};

/// Struct /Game/Aki/GamePlay/PathPoints/SPointsRow.SPointsRow
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 pad: 0x0000
struct FSPointsRow
{ 
	float                                              X_8_573075694D39CE6F764D5F888C6C003F;                       // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FVector>                                    PointsRow_3_844AA949457F26713A2D799E011ED094;               // 0x0008   (0x0010)  
};

/// Struct /Game/Aki/GamePlay/PathPoints/SNpcPathPoint.SNpcPathPoint
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 4 pad: 0x0000
struct FSNpcPathPoint
{ 
	FName                                              LandName_11_BE2AB469436915346CDBC7B3FCFC462D;               // 0x0000   (0x000C)  
	FVector                                            Position_5_165063464C48D357EE888C8F99ADA9C8;                // 0x000C   (0x000C)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SDynamicMontageParams.SDynamicMontageParams
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 pad: 0x0000
struct FSDynamicMontageParams
{ 
	class UAnimSequenceBase*                           _R_u_;                                                      // 0x0000   (0x0008)  
	float                                              __eQ___T_e___;                                              // 0x0008   (0x0004)  
	float                                              null;                                                       // 0x000C   (0x0004)  
	float                                              _d_e___s_;                                                  // 0x0010   (0x0004)  
	float                                              null0;                                                      // 0x0014   (0x0004)  
};

/// Struct /Game/Aki/Data/Manipulate/SManipulatePointInfo.SManipulatePointInfo
/// Size: 0x0025 (37 bytes) (0x000000 - 0x000025) align 4 pad: 0x0001
#pragma pack(push, 0x1)
struct FSManipulatePointInfo
{ 
	FVector                                            Location_2_4AED0E7A450EBFB222F618ACF88FEFF0;                // 0x0000   (0x000C)  
	FVector                                            ArriveTangent_11_5C1DA65145209C7EE628A1A56536195B;          // 0x000C   (0x000C)  
	FVector                                            LeaveTangent_10_33A9AE224B51C8E7A3987BB483EB37DF;           // 0x0018   (0x000C)  
	TEnumAsByte<ESplinePointType>                      PointType_14_5A4FFA53425852E0338EEAB8A76A974C;              // 0x0024   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/UiNavigation/Struct/SNavigationDynamicListenerConfig.SNavigationDynamicListenerConfig
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 pad: 0x0000
struct FSNavigationDynamicListenerConfig
{ 
	int32_t                                            Index_2_6C2CCA6E4BF8816A4070FCA2202A3D3B;                   // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	class AActor*                                      LayoutActor_8_C24C923C445F233BC823EFB31AEC43E5;             // 0x0008   (0x0008)  
	class AActor*                                      ScrollActor_10_FC2709614C034C729A392F80FF3C3231;            // 0x0010   (0x0008)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Character/WeaponLevelMaterial/SWeaponMaterialParams.SWeaponMaterialParams
/// Size: 0x00F0 (240 bytes) (0x000000 - 0x0000F0) align 8 pad: 0x0000
struct FSWeaponMaterialParams
{ 
	SDK_UNDEFINED(80,1268) /* TMap<FString, float> */  __um(FloatParams_8_628574684189FE25B412DBB7D6030BB5);       // 0x0000   (0x0050)  
	SDK_UNDEFINED(80,1269) /* TMap<FString, FLinearColor> */ __um(ColorParams_12_F77CC25541EFB90644CF1FAC4B5E8613); // 0x0050   (0x0050)  
	SDK_UNDEFINED(80,1270) /* TMap<FString, UTexture*> */ __um(TextureParams_17_FCF2B0AB48359925875F05A2AECF79F3); // 0x00A0   (0x0050)  
};

/// Struct /Game/Aki/TypeScript/Game/NewWorld/Character/SimpleNpc/Blueprint/SMaterialParamCache.SMaterialParamCache
/// Size: 0x00AC (172 bytes) (0x000000 - 0x0000AC) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSMaterialParamCache
{ 
	class UMaterialInstanceDynamic*                    sourceMaterial_11_C4A4BDFE4057F52582743C8B611D969E;         // 0x0000   (0x0008)  
	SDK_UNDEFINED(80,1271) /* TMap<FName, float> */    __um(floatCaches_4_843A6CC347E67FFEA70A6D8B2538CC78);       // 0x0008   (0x0050)  
	SDK_UNDEFINED(80,1272) /* TMap<FName, FLinearColor> */ __um(colorCaches_13_FAC1E0954F042D1549748F8126000A7D);  // 0x0058   (0x0050)  
	int32_t                                            slotIndex_16_418775624B0114F3FEA223B2AA19B302;              // 0x00A8   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/TypeScript/Game/NewWorld/Character/SimpleNpc/Blueprint/SHolographicMaterialsCache.SHolographicMaterialsCache
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 pad: 0x0000
struct FSHolographicMaterialsCache
{ 
	TArray<FSMaterialParamCache>                       Materials_4_ED6637294B441342AA434FBE3C358245;               // 0x0000   (0x0010)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Character/MaterialContainer/SCharacterSlotSpecifiedStruct.SCharacterSlotSpecifiedStruct
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 pad: 0x0000
struct FSCharacterSlotSpecifiedStruct
{ 
	TEnumAsByte<ECharacterSlotSpecifiedType>           SlotSpecifiedType_2_BB34682E42A1EB05767F8DB31E8BFD68;       // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,1273) /* TArray<TEnumAsByte<ECharacterSlotType>> */ __um(SlotTypes_8_FE953FC141D8687F1C54728FEC4EA9FD); // 0x0008   (0x0010)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Character/MaterialContainer/SCharacterBodySpecifiedStruct.SCharacterBodySpecifiedStruct
/// Size: 0x0018 (24 bytes) (0x000000 - 0x000018) align 8 pad: 0x0000
struct FSCharacterBodySpecifiedStruct
{ 
	TEnumAsByte<ECharacterBodySpecifiedType>           SpecifiedType_8_45A03C894F6228A844022B815431BECA;           // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x7];                                       // 0x0001   (0x0007)  MISSED
	SDK_UNDEFINED(16,1274) /* TArray<TEnumAsByte<ECharacterBodyType>> */ __um(BodyTypes_12_2E562A9242D605BFC4C04F924E952BAF); // 0x0008   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SGEData.SGEData
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 8 pad: 0x0000
struct FSGEData
{ 
	FName                                              GEName_33_CD20134B4FF965FE4A0C15B8FCEB7C50;                 // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	FText                                              Comment_35_12ED30B04010F417FA4E43B006B5B501;                // 0x0010   (0x0018)  
	class UClass*                                      GE_14_BF5BCF984BDC9A36087EA18C18100D60;                     // 0x0028   (0x0008)  
	TArray<FSFloatPayload>                             Payload_30_F73C06A2417500FD22519DB42CBF340C;                // 0x0030   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SEffectData.SEffectData
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 pad: 0x0000
struct FSEffectData
{ 
	TArray<FSEffectType>                               He_g_;                                                      // 0x0000   (0x0010)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SDamageData.SDamageData
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 4 pad: 0x0000
struct FSDamageData
{ 
	float                                              _O__pe_P_;                                                  // 0x0000   (0x0004)  
	int32_t                                            ____I;                                                      // 0x0004   (0x0004)  
};

/// Struct /Game/Aki/Character/BaseCharacter/SAttributeModifierData.SAttributeModifierData
/// Size: 0x0040 (64 bytes) (0x000000 - 0x000040) align 8 pad: 0x0000
struct FSAttributeModifierData
{ 
	FGameplayAttribute                                 _______W_;                                                  // 0x0000   (0x0038)  
	TEnumAsByte<EAttributeTarget>                      _d_O__a__;                                                  // 0x0038   (0x0001)  
	TEnumAsByte<EAttributeOperation>                   _d_O_;                                                      // 0x0039   (0x0001)  
	unsigned char                                      UnknownData00_6[0x2];                                       // 0x003A   (0x0002)  MISSED
	float                                              _P_;                                                        // 0x003C   (0x0004)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Character/WeaponLevelMaterial/SWeaponLevelMaterialData.SWeaponLevelMaterialData
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 pad: 0x0000
struct FSWeaponLevelMaterialData
{ 
	SDK_UNDEFINED(80,1275) /* TMap<FString, FSWeaponMaterialParams> */ __um(SlotNewParamValues_25_189180954DD1CE47C26A6A9B4A481A44); // 0x0000   (0x0050)  
};

/// Struct /Game/Aki/Data/Manipulate/SManipulateConfig.SManipulateConfig
/// Size: 0x0024 (36 bytes) (0x000000 - 0x000024) align 8 pad: 0x0004
#pragma pack(push, 0x1)
struct FSManipulateConfig
{ 
	FName                                              ConfigName_2_B83FF9884D1C60F4DF6C54A78519CC1A;              // 0x0000   (0x000C)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x000C   (0x0004)  MISSED
	TArray<FSManipulatePointInfo>                      ManipulatePoints_6_E3F152364E49B089E5A4F78CF74257E0;        // 0x0010   (0x0010)  
	float                                              Duration_12_74DFD9F94817F729CD3B1483D7CF097D;               // 0x0020   (0x0004)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Data/Fight/Struct/SSkillMontage.SSkillMontage
/// Size: 0x0080 (128 bytes) (0x000000 - 0x000080) align 8 pad: 0x0000
struct FSSkillMontage
{ 
	FString                                            CharacterPath_8_D0435E9745FB9026F725938D086C3287;           // 0x0000   (0x0010)  
	FString                                            MontageName_7_331ECD0F41A7717BD13633951405B3FD;             // 0x0010   (0x0010)  
	SDK_UNDEFINED(48,1276) /* TWeakObjectPtr<UAnimMontage*> */ __um(CommonAnim_15_096800F6476616C34CD8068FFA6EBC97); // 0x0020   (0x0030)  
	SDK_UNDEFINED(48,1277) /* TWeakObjectPtr<UAnimMontage*> */ __um(BaseAnim_16_D973E6654697AC360C067FB167A392FD); // 0x0050   (0x0030)  
};

/// Struct /Game/Aki/Data/AI/Struct/SAIConfig.SAIConfig
/// Size: 0x0050 (80 bytes) (0x000000 - 0x000050) align 8 pad: 0x0000
struct FSAIConfig
{ 
	SDK_UNDEFINED(48,1278) /* TWeakObjectPtr<UClass*> */ __um(AIController_7_114CE7C14BF6547437BE0AAF22CB7BB5);    // 0x0000   (0x0030)  
	TEnumAsByte<EActionPlan>                           ___R_N_R_;                                                  // 0x0030   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0031   (0x0003)  MISSED
	int32_t                                            ________7hagI;                                              // 0x0034   (0x0004)  
	int32_t                                            ____7hagI;                                                  // 0x0038   (0x0004)  
	int32_t                                            PathPointList_23_9441C9544F041EA104C4EA9EB62510E7;          // 0x003C   (0x0004)  
	FString                                            _Y_l_;                                                      // 0x0040   (0x0010)  
};

/// Struct /Game/Aki/Data/Quest/Structures/SQuest.SQuest
/// Size: 0x0021 (33 bytes) (0x000000 - 0x000021) align 8 pad: 0x0001
#pragma pack(push, 0x1)
struct FSQuest
{ 
	int32_t                                            ID_56_0FF0336441941D8CDD474BB0C0F6A03D;                     // 0x0000   (0x0004)  
	int32_t                                            _N_R_T_y_;                                                  // 0x0004   (0x0004)  
	FString                                            _N_RK;                                                      // 0x0008   (0x0010)  
	TEnumAsByte<EQuestType>                            _N_R___W_;                                                  // 0x0018   (0x0001)  
	bool                                               _f_T_S___Y_;                                                // 0x0019   (0x0001)  
	bool                                               _f_T___b_;                                                  // 0x001A   (0x0001)  
	unsigned char                                      UnknownData00_6[0x1];                                       // 0x001B   (0x0001)  MISSED
	int32_t                                            _N_R_____Oo__;                                              // 0x001C   (0x0004)  
	bool                                               _f_T_ST__g_;                                                // 0x0020   (0x0001)  
};
#pragma pack(pop)

/// Struct /Game/Aki/Render/RuntimeBP/NewTrail/Drawer/STrailGrassDrawInfo.STrailGrassDrawInfo
/// Size: 0x0020 (32 bytes) (0x000000 - 0x000020) align 8 pad: 0x0000
struct FSTrailGrassDrawInfo
{ 
	FVector2D                                          Position_2_4F32E3014CB4D3FCC9A707B4F02CABDC;                // 0x0000   (0x0008)  
	class UTexture2D*                                  Texture_5_0ED9149945450F8C6A6DCDA84829DD49;                 // 0x0008   (0x0008)  
	FVector2D                                          Size_8_6BC8AE5741CF49DB946F01A005DB42F2;                    // 0x0010   (0x0008)  
	float                                              Rotation_11_048D20AA439E0E0C5DA636B1202D1F19;               // 0x0018   (0x0004)  
	float                                              Depth_13_544946824266B70F4EC9C0A2C05EB3D7;                  // 0x001C   (0x0004)  
};

/// Struct /Game/Aki/Data/Fight/UI/SSpecialEnergyBarKey.SSpecialEnergyBarKey
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 4 pad: 0x0000
struct FSSpecialEnergyBarKey
{ 
	int32_t                                            Action_6_E16832E14BBEF21C72BA089AEA5ADB75;                  // 0x0000   (0x0004)  
	int32_t                                            ActionType_5_F716BBB54A4632EA05255BBA036E6A22;              // 0x0004   (0x0004)  
};

/// Struct /Game/Aki/Data/Fight/UI/SSpecialEnergyBar.SSpecialEnergyBar
/// Size: 0x0120 (288 bytes) (0x000000 - 0x000120) align 8 pad: 0x0000
struct FSSpecialEnergyBar
{ 
	FString                                            Name_2_C39CDBBF409469DCF96974B4E03ED6F9;                    // 0x0000   (0x0010)  
	TEnumAsByte<ESpecialEnergyBarPrefabType>           PrefabType_115_34BDB3AE48638D5CF67EEC9A1B4378DA;            // 0x0010   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0011   (0x0003)  MISSED
	int32_t                                            SlotNum_126_E7916B8C47391E6AAAF2178D79DC396F;               // 0x0014   (0x0004)  
	TArray<float>                                      ExtraFloatParams_130_F64FCDB74317682714A850A8BDF1E5E5;      // 0x0018   (0x0010)  
	SDK_UNDEFINED(48,1279) /* TWeakObjectPtr<UPrefabAsset*> */ __um(PrefabPath_6_D3E0271649443A790645EFB3945D0903); // 0x0028   (0x0030)  
	int32_t                                            AttributeId_9_6C3F6EBD441A30C3C6EA09B019FCAEC5;             // 0x0058   (0x0004)  
	int32_t                                            MaxAttributeId_11_1D46A5CC47E357D1B3848E831C3A9897;         // 0x005C   (0x0004)  
	int64_t                                            BuffId_133_34E7489A4E4A3BB47428CE958F039353;                // 0x0060   (0x0008)  
	SDK_UNDEFINED(80,1280) /* TMap<FGameplayTag, int32_t> */ __um(TagEnergyBarIdMap_122_23425FDB40B244DF21D7358D443435A6); // 0x0068   (0x0050)  
	FString                                            EffectColor_96_B669342E4F4C470D04DFE8AA3D9ABC23;            // 0x00B8   (0x0010)  
	FString                                            PointColor_136_7EF590B04BE65DBEDD8285A332812D34;            // 0x00C8   (0x0010)  
	SDK_UNDEFINED(48,1281) /* TWeakObjectPtr<ULGUISpriteData_BaseObject*> */ __um(IconPath_123_59FB730C417FCFDAADB20585DED7A255); // 0x00D8   (0x0030)  
	int32_t                                            KeyType_113_74271F1F43580C0F10BE239847EFC8E7;               // 0x0108   (0x0004)  
	int32_t                                            DisableKeyOnPercent_117_8269AE0F47D830FBC01E608120E63D8D;   // 0x010C   (0x0004)  
	TArray<FSSpecialEnergyBarKey>                      KeyInfoList_112_4E2A3BA5436E9DBCDE6CF894A3F9F9BC;           // 0x0110   (0x0010)  
};

/// Struct /Game/Aki/Data/Fight/BulletDataAsset/SBulletLogicTypeRow.SBulletLogicTypeRow
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 8 pad: 0x0000
struct FSBulletLogicTypeRow
{ 
	class UBulletLogicType_C*                          Ref_2_FAB3F4CE4370A6C8452C57A641D7384B;                     // 0x0000   (0x0008)  
};

/// Struct /Game/Aki/Data/Fight/CommonGB/SAllKuroBpDataGroup.SAllKuroBpDataGroup
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 8 pad: 0x0000
struct FSAllKuroBpDataGroup
{ 
	class UKuroBpDataAssetGroup*                       DataRef_3_ED3D35B24D442B0EB89FF9B9000FEF68;                 // 0x0000   (0x0008)  
};

/// Struct /Game/Aki/Data/Fight/BulletCampAsset/SBulletCampRow.SBulletCampRow
/// Size: 0x0008 (8 bytes) (0x000000 - 0x000008) align 8 pad: 0x0000
struct FSBulletCampRow
{ 
	class UBulletCampType_C*                           Ref_2_C33B02A743669D4A637BCC9331E788F3;                     // 0x0000   (0x0008)  
};

/// Struct /Game/Aki/Data/Fight/UI/SPanelQteAction.SPanelQteAction
/// Size: 0x0048 (72 bytes) (0x000000 - 0x000048) align 8 pad: 0x0000
struct FSPanelQteAction
{ 
	int32_t                                            Target_2_B7DB0C4C437A26A5AE19FA82BB2EA1E9;                  // 0x0000   (0x0004)  
	unsigned char                                      UnknownData00_6[0x4];                                       // 0x0004   (0x0004)  MISSED
	TArray<FGameplayTag>                               AddTags_15_9DEB844E43C37816AAC392AE33D9BEA5;                // 0x0008   (0x0010)  
	TArray<FGameplayTag>                               RemoveTags_17_0DA0F25944D8CA5EC04061B9BD7F55C0;             // 0x0018   (0x0010)  
	TArray<int64_t>                                    AddBuffs_24_72A8A69A4FCC1DC5FE00F9818DCD97AC;               // 0x0028   (0x0010)  
	SDK_UNDEFINED(16,1282) /* TArray<TEnumAsByte<EPanelQteCustomAction>> */ __um(CustomActions_20_0DC3AE1C4DA3A2904FD46BB63A3770F2); // 0x0038   (0x0010)  
};

/// Struct /Game/Aki/Data/Fight/UI/SPanelQte.SPanelQte
/// Size: 0x0088 (136 bytes) (0x000000 - 0x000088) align 8 pad: 0x0000
struct FSPanelQte
{ 
	TEnumAsByte<EPanelQteViewType>                     ViewType_6_30F290C549F8B08518D4999F98079171;                // 0x0000   (0x0001)  
	unsigned char                                      UnknownData00_6[0x3];                                       // 0x0001   (0x0003)  MISSED
	float                                              Duration_2_8BE797FC4ECCC7B83368359F0DA20DA7;                // 0x0004   (0x0004)  
	float                                              WorldTimeDilation_30_35AC006F4A84D1B00C8993987FB221EF;      // 0x0008   (0x0004)  
	int32_t                                            MinSuccessCount_12_793730E348903585CF7885AAD7281E90;        // 0x000C   (0x0004)  
	int32_t                                            MaxSuccessCount_11_0C675AF74F9FF90F5063E6B04B829D36;        // 0x0010   (0x0004)  
	bool                                               HideAllBattleUi_53_867D7AC7430AC020E5BA9CBDCE7C2391;        // 0x0014   (0x0001)  
	unsigned char                                      UnknownData01_6[0x3];                                       // 0x0015   (0x0003)  MISSED
	SDK_UNDEFINED(16,1283) /* TArray<TEnumAsByte<EBattleUIChild>> */ __um(HideUIElement_31_B09A84A54CC18D8FE3E772864D30209B); // 0x0018   (0x0010)  
	TArray<FSPanelQteAction>                           SuccessActions_24_595DBA5B427AB2898D526088988080DE;         // 0x0028   (0x0010)  
	TArray<FSPanelQteAction>                           FailActions_25_957EBD4543704EE96F3B1DB460D121CD;            // 0x0038   (0x0010)  
	int64_t                                            BuffOnInput_46_AA179276492FA25EC7D01EAAA4FE7CED;            // 0x0048   (0x0008)  
	float                                              BuffCd_51_0D18113C4B6EFD44FB718CB4019163F5;                 // 0x0050   (0x0004)  
	bool                                               CameraShakeOnInput_35_05708E4743D60D91309FF1A4DBC40190;     // 0x0054   (0x0001)  
	unsigned char                                      UnknownData02_6[0x3];                                       // 0x0055   (0x0003)  MISSED
	SDK_UNDEFINED(48,1284) /* TWeakObjectPtr<UClass*> */ __um(CameraShakeType_41_48B958D547C8585498DECB89BB9E8536); // 0x0058   (0x0030)  
};

/// Struct /Game/Aki/Render/RuntimeBP/Scene/Interaction/SSceneInteractionTags.SSceneInteractionTags
/// Size: 0x0090 (144 bytes) (0x000000 - 0x000090) align 8 pad: 0x0000
struct FSSceneInteractionTags
{ 
	TArray<class ABP_EffectActor_C*>                   Effects_89_54B6DE4441F3AEADA2B6158A3CE7A73A;                // 0x0000   (0x0010)  
	TArray<class AActor*>                              Actors_104_3CB998D844868816DFA499A2D346ED92;                // 0x0010   (0x0010)  
	TArray<class AActor*>                              HideActors_105_0358E37C417F8434637F2882B09FAA0A;            // 0x0020   (0x0010)  
	TArray<FSSceneInteractionMaterialController>       MaterialControllers_50_0EBC035B4225A706D705E986C7C02F96;    // 0x0030   (0x0010)  
	TArray<FSSceneInteractionitemIndestructibleEffectsParameters> IndestructibleEffectsParameters_82_B16BD5A64450652CED7731AF68D8E053; // 0x0040   (0x0010)  
	TArray<class ABP_EffectActor_C*>                   SpecilEffects_109_3EC410EE4031651ED9C2FA9991E4CB8F;         // 0x0050   (0x0010)  
	FSSceneInteractionSequence                         Sequence_113_26F27D934AAFE85F0AACF5B136256932;              // 0x0060   (0x0010)  
	TArray<class ABP_EffectActor_C*>                   EndEffects_117_EF76CFDD4F0B4E2E07B636AA0B03EA3A;            // 0x0070   (0x0010)  
	FSSceneInteractionAudio                            AkEvent_125_7879183C4C0DC27CD1AFB7A4C9432BC3;               // 0x0080   (0x0010)  
};

/// Struct /Game/Aki/Sequence/Manager/Structures/SSeqCharacterBlendGroup.SSeqCharacterBlendGroup
/// Size: 0x0010 (16 bytes) (0x000000 - 0x000010) align 8 pad: 0x0000
struct FSSeqCharacterBlendGroup
{ 
	TArray<FSSeqCharacterBlend>                        BlendGroup_3_51F7C8044314BC2AC5181B9B0D072F2A;              // 0x0000   (0x0010)  
};

